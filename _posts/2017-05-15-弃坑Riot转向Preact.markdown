---
layout: post
category: fe
---
# 弃坑Riot转投Preact

在之前的博文，我提过当初使用Riotjs的原因。

* 比较小的模板语言，并可以实现组件化。
* 拥有一整套事件机制。
* 支持前后端渲染。
* 语法对es5友好(公司前端当时只能发布es5代码)。

后来，由于公司可以进行node发布了，我用typescript对这一套方案进行了改造，3.x版本的Riot.js的确相比2.x稳定了很多，如果你有一个小项目我还是比较推荐这一个框架

* 进入真的开发很快，如果用es5来写的话，不用过多考虑什么编译环境，（当然react也可以，蛋是想体验不用jsx的感觉吗？）。

> 这里真想吐槽一下现在的前端gulp + webpack + rollup +　babel + ... 用gcc的同学都看哭了好么

* 文件真的很小，router+oberservable+virtualdom（管它真假呢）+项目的逻辑代码，未压缩的时候还不到200k，比vue的核心代码都小。

----
<center>
    <h3>蛋是</h3>
    <h1>你是一个好<s>人</s>框架</h1>
</center>

## Preact的出现

Preact大概在我录制Riot.js分享视频的时候进入了hackernews的首页，当时偶在公司内部提出这个框架的时候遭到了反对（哭），所以对使用新的替代框架，尤其是这种新出来的有那么点担心，我记得当时hackernews下面的回复也都是很轻蔑（呵呵，又一个）。

等了大概一年，这个项目居然没死，要知道这一年很多类react的项目过得可不是那么好啊。这个项目的Twitter都发conf邀请函了。

## 那么引入Preact是为什么

* Typescript对JSX的支持好过template

typescript能够做静态类型检查，简单地说，如果我的代码里面有什么拼写错误或者什么包没引入，编译器都能查出来。

蛋是，如果我写的代码在模板里面，编译器就无能为力了，毕竟模板就只是字符串啊。而jsx不同，它是一种DSL，编译器自然会检查里面的代码。

* Preact真的太TM小了

当时使用riotjs的原因很大的比重在减负，在我的哲学里面，一个框架只需要完成我需要它完成的东西，其他的不要多。preact相比riot减负了大概50k（源代码），当然功能上也少了（observable，router）。

## 所以我会用Preact吗？

我会在最近的一次优化把我的项目进行优化改造，最后我在根据它的性能（ssr+browser）、最终的业务代码大小、是否可以多人合作开发等多方面分析考虑是否切换。

当然，也有别的可能，毕竟当初说好用vim的我现在用着vscode。

