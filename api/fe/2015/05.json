{"posts":[{"id":"2015/05/04/ionic.md","slug":"2015/05/04/ionic","body":"\n#ionic的安装配置的坑\n>前一阵子react-native很火，甚是嫉妒啊，目前只支持iOS。。。T_T<br>\n不必要一直追求native，（虽然我还是试验了nativescript），在安卓上面还是可以尝试写写hybrid应用。\n\n---\n1. 安装ionic，安装android-sdk-r22（可以用hx.gy:1080代理）\n\n        npm install -g cordova ionic\n        \n2. 创建一个空/标签/侧边栏工程\n\n        ionic start myApp blank/tabs/sidemenu\n        \n3. 运行\n\n        cd myApp\n        chmod 777 * -R\n        ionic platform add android\n        ionic build android\n        ionic run android\n        \n4. 用浏览器测试\n\n        ionic serve","collection":"blog","data":{"type":"post","category":"fe"}},{"id":"2015/05/04/nativescript.md","slug":"2015/05/04/nativescript","body":"\n#nativescript试探报告\n>上一周得流感，再加上react-native只支持iOS，头脑一热，除了研究了ionic，还看了nativescript。感觉吧，nativescript比起QML之类的语言，最大的优点就是不必再去学习一门新的语言，因为它不是js的超集，而是完全的js，并且支持双向绑定，完全迎合现在的web开发。<br>\n用完nativescript有这么几个感受：<br>\n1. 用telerik platform ide感觉还是不错的，在安卓安装app可以同步更新软件，可惜这个ide只能使用30day。\n2. 官方给的文档经过证实已经部分过期。。。我只能拿现成的project当例子。\n3. css使能够用的，但是和react-native一样，都是真正的css的子集。\n4. 安卓上的性能不比hybrid好，等更新吧～\n5. 不用像QML一样，的确是mvvm，顶多需要学学安卓里面的xml就好了。\n6. cli需要<font color=red>翻墙！！！</font>\n\n***\n1. 安装nativescript,安卓需要r17\n\n        npm install -g nativescript\n        \n2. 创建工程\n\n        tns create app\n        \n3. 添加安卓支持\n\n        tns platform add android\n        \n4. 编译及调试\n\n        tns build android\n        tns run android","collection":"blog","data":{"type":"post","category":"fe"}},{"id":"2015/05/09/ionic-Todo guide.md","slug":"2015/05/09/ionic-todo-guide","body":"\n#ionic官方Todo Guide\n>代码在<br>https://github.com/gongbaodd/myExperinments/tree/ionic_todo\n一直想写一个app，但是懒得设计，看到ionic官方有个guide而且没有中文版，所以写一个。\n\n---\n1. 在head中添加对应的css和js\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"initial-scale=1, maximum-scale=1, user-scalable=no, width=device-width\">\n        <title></title>\n        <link href=\"lib/ionic/css/ionic.css\" rel=\"stylesheet\">\n        <link href=\"css/style.css\" rel=\"stylesheet\">\n        <script src=\"lib/ionic/js/ionic.bundle.js\"></script>\n        <script src=\"cordova.js\"></script>\n        <script src=\"js/app.js\"></script>\n        \n2. body添加controller\n        <body ng-app=\"todo\" ng-controller=\"TodoCtrl\">\n        \n3. Todo的界面，分别是左边栏（负责分配todo的类型——projects）和主界面（负责分配每一个todo项——tasks）\n        <ion-side-menus>\n            <ion-side-menu-content>...</ion-side-menu-content>\n            <ion-side-menu side=\"left\">...</ion-side-menu>\n        </ion-side-menus>\n      \n4. Todo的行为\n        angular.module('todo',['ionic'])\n        .factory('Projects',function() {\n            ...\n        }）\n        .controller('TodoCtrl',function($scope,$timeout,$ionicModal,Projects,$ionicSideMenuDelegate) {\n            ...\n        })\n\n5. 左边栏结构\n        <ion-header-bar class=\"bar-dark\">\n            <h1 class=\"title\">Projects</h1>\n            <button class=\"button button-icon ion-plus\" ng-click=\"newProject()\"></button>\n        </ion-header-bar>\n        <ion-content scroll=\"false\">\n            <ion-list>\n                <ion-item ng-repeat=\"project in projects\" ng-click=\"selectProject(project,$index)\" ng-class=\"{active:activeProject == project}\">\n                    {{project.title}}\n                </ion-item>\n            </ion-list>\n        </ion-content>\n        \n6. 左边栏行为\n        .factory('Projects',function() {\n        return {\n            all:function(){\n                var projectString = window.localStorage['projects'];\n                if(projectString){\n                    return angular.fromJson(projectString);\n                }\n                return [];\n            },\n            save:function(projects){\n                window.localStorage['projects'] = angular.toJson(projects);\n            },\n            newProject:function(projectTitle){\n                return {\n                    title:projectTitle,\n                    tasks:[]\n                };\n            },\n            getLastActiveIndex:function(){\n                return parseInt(window.localStorage['lastActiveProject'])||0;\n            },\n            setLastActiveIndex:function(index){\n                window.localStorage['lastActiveProject'] = index;\n            }\n        }\n        })\n        \n7. 主界面结构\n        <ion-header-bar class=\"bar-dark\">\n            <h1 class=\"title\">Todo</h1>\n            <!--                New Task button-->\n            <button class=\"button button-icon\" ng-click=\"newTask()\">\n                <i class=\"icon ion-compose\"></i>\n            </button>\n        </ion-header-bar>\n        <ion-content scroll=\"false\">\n        <!--                our list and list items-->\n            <ion-list>\n               <ion-item ng-repeat=\"task in activeProject.tasks\">\n                   {{task.title}}\n               </ion-item>\n            </ion-list>\n        </ion-content>\n        \n8. 主界面行为\n        .controller('TodoCtrl',function($scope,$timeout,$ionicModal,Projects,$ionicSideMenuDelegate) {\n    \n        var createProject = function(projectTitle){\n            var newProject = Projects.newProject(projectTitle);\n            $scope.projects.push(newProject);\n            Projects.save($scope.projects);\n            $scope.selectProject(newProject,$scope.projects.length-1);\n        }\n    \n        $scope.projects = Projects.all();\n    \n        $scope.activeProject = $scope.projects[Projects.getLastActiveIndex()];\n    \n        $scope.newProject = function() {\n            var projectTitle = prompt(\"Project name\");\n            if(projectTitle){\n                createProject(projectTitle);\n            }\n        };\n    \n        $scope.selectProject = function(project,index){\n            $scope.activeProject = project;\n            Projects.setLastActiveIndex(index);\n            $ionicSideMenuDelegate.toggleLeft(false);\n        };\n    \n        $ionicModal.fromTemplateUrl('new-task.html',function(modal) {\n            $scope.taskModal = modal;\n        },{\n            scope:$scope,\n            animation:'slide-in-up'\n        });\n    \n        $scope.createTask = function(task) {\n\n            if(!$scope.activeProject||!task){\n                return ;\n            }\n            $scope.activeProject.tasks.push({\n                title:task.title\n            });\n            $scope.taskModal.hide();\n        \n            Projects.save($scope.projects);\n        \n            task.title = \"\";\n        };\n    \n        $scope.newTask = function() {\n            $scope.taskModal.show();\n        };\n        $scope.closeNewTask = function() {\n            $scope.taskModal.hide();\n        };\n        $scope.toggleProjects = function() {\n            $ioncSideMenuDelegate.toggleLeft();\n        };\n    \n        $timeout(function() {\n            if($scope.projects.length == 0){\n                while(true){\n                    var projectTitle = prompt('Your first project title');\n                    if(projectTitle){\n                        createProject(projectTitle);\n                        break;\n                    }\n                }\n            }\n        })\n        });\n        \n9. 新建项目的模态对话框\n        <script id=\"new-task\" class=\"html\" type=\"text/ng-template\">\n            <div class=\"modal\">\n            <!--        Modal header bar-->\n                <ion-header-bar class=\"bar-secndary\">\n                    <h1 class=\"title\">New Task</h1>\n                    <button class=\"button button-clear button-positive\" ng-click=\"closeNewTask()\">Cancel</button>\n                </ion-header-bar>\n                <!--        Modal content area-->\n                <ion-content>\n                    <form action=\"\" ng-submit=\"createTask(task)\">\n                        <div class=\"list\">\n                        <label for=\"\" class=\"item item-input\">\n                            <input type=\"text\" placeholder=\"What do you need to do?\" ng-model=\"task.title\">\n                        </label>\n                        </div>\n                        <div class=\"padding\">\n                            <button type=\"submit\" class=\"button button-block button-positive\">Create Task</button>\n                        </div>\n                    </form>\n                </ion-content>\n            </div>\n        </script>","collection":"blog","data":{"type":"post","category":"fe"}}]}