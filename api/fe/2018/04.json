{"posts":[{"id":"2018/04/09/GraphQL.md","slug":"2018/04/09/graphql","body":"# GraphQL的使用\n\n> you can find the code in http://gongbushang.com:3000/gongbushang/graphql_starter","collection":"blog","data":{"type":"post","category":"fe"}},{"id":"2018/04/10/Archlinux-VScode.md","slug":"2018/04/10/archlinux-vscode","body":"# ArchLinux 修改 VScode 可监视文件大小\n\nhttps://github.com/guard/listen/wiki/Increasing-the-amount-of-inotify-watchers\n\n```shell\necho fs.inotify.max_user_watches=524288 | sudo tee /etc/sysctl.d/40-max-user-watches.conf && sudo sysctl --system\n```\n","collection":"blog","data":{"type":"post","category":"fe"}},{"id":"2018/04/16/lego.md","slug":"2018/04/16/lego","body":"# lego系统一岁啦\n\n![logo](http://ww1.sinaimg.cn/large/89d0a2e1ly1fqer3a0s0pj20sg0bk0wr.jpg)\n\n大概看了下去年的博客，我大概在五月初，对lego的第一次上线做了总结，那么现在大概就是lego的一周岁生日了。\n\n## lego 的定义\n\n![lego云图](http://ww1.sinaimg.cn/large/89d0a2e1ly1fqemomvxyqj20sg0lcdo4.jpg)\n\n支付lego平台是一个支持多维度线上配置的web组件化前后端同构渲染平台，覆盖从服务端到web前端再到数据监控的整体解决方案，目前服务于去哪儿网会员的【我的钱包】【我的银行卡】【绑卡服务】【实名认证】等服务。\n\n## lego 搭建背景\n\n![ykit](http://ww1.sinaimg.cn/large/89d0a2e1ly1fqem7mt787j20jc0fit9k.jpg)\n\n* 公司内部正在要求使用 ykit 代替 fekit 打包前端代码，对 fe/member-mobile 来说这种改动相当于全项目重构。\n\n```shell\nbusiTypeId=WLHotelHD&\ncouponAmount=300& bannerLink=http%3A%2F%2Fwww.qunar.com%2F& HMAC=362b0da8eb2f95cb33608cf4584c7700&\nagreement=&\ndid=865630020132708&\npid=10010&\nextraJson=&\ncardType=ALL& \nversion=20140808& title=%E7%BB%91%E5%8D%A1%E9%A2%86%E7%BA%A2%E5%8C%85&\nisObtainCoupon=1& \ncouponSource=pay_test& \nuserId=1444548113& \nsuccessURL=http%3A%2F%2Ftcbeta2.qunar.com%2Factivity%2Fspringgift%3Ftpl%3Dredirect%26couponId%3Dundefined& \ngid=8438932D-5548-D769-1AF7-22274CDE88E4&\nbindCardRule=%5B%22%E9%A6%96%E6%AC%A1%E7%BB%91%E5%8D%A1%E6%88%90%E5%8A%9F%EF%BC%8C%E4%B8%94%E8%AF%A5%E9%93%B6%E8%A1%8C%E5%8D%A1%E6%9C%AA%E5%9C%A8%E5%8E%BB%E5%93%AA%E5%84%BF%E7%BD%91%E7%BB%91%E5%AE%9A%E8%BF%87%E7%9A%84%E7%94%A8%E6%88%B7%EF%BC%8C%E5%8D%B3%E5%8F%AF%E8%8E%B7%E5%BE%97%E4%BC%9A%E5%91%98%E7%BA%A2%E5%8C%85%E3%80%82%22%2C%22%E6%AF%8F%E4%B8%AA%E7%94%A8%E6%88%B7%E5%8F%AA%E5%8F%AF%E7%BB%91%E5%8D%A1%E9%A2%86%E5%8F%96%E4%B8%80%E6%AC%A1%E4%BC%9A%E5%91%98%E7%BA%A2%E5%8C%85%E3%80%82%22%2C%22%E6%B4%BB%E5%8A%A8%E4%B8%AD%EF%BC%8C%E5%A6%82%E6%9E%9C%E5%87%BA%E7%8E%B0%E4%BD%9C%E5%BC%8A%E8%A1%8C%E4%B8%BA%EF%BC%88%E5%A6%82%E6%89%B9%E9%87%8F%E6%B3%A8%E5%86%8C%E3%80%81%E6%81%B6%E6%84%8F%E8%B4%AD%E4%B9%B0%E3%80%81%E8%99%9A%E5%81%87%E4%BA%A4%E6%98%93%E7%AD%89%EF%BC%89%EF%BC%8C%E5%8E%BB%E5%93%AA%E5%84%BF%E7%BD%91%E5%B0%86%E8%87%AA%E5%8A%A8%E5%8F%96%E6%B6%88%E6%82%A8%E6%9C%AC%E6%AC%A1%E6%B4%BB%E5%8A%A8%E8%AE%A2%E5%8D%95%EF%BC%8C%E5%B9%B6%E6%9C%89%E6%9D%83%E5%86%BB%E7%BB%93%E8%B4%A6%E5%8F%B7%E5%B9%B6%E5%8F%96%E6%B6%88%E6%82%A8%E5%90%8E%E7%BB%AD%E5%8F%82%E4%B8%8E%E5%8E%BB%E5%93%AA%E5%84%BF%E7%BD%91%E4%BB%BB%E6%84%8F%E6%B4%BB%E5%8A%A8%E7%9A%84%E6%9D%83%E5%88%A9%EF%BC%8C%E5%BF%85%E8%A6%81%E6%97%B6%E8%BF%BD%E7%A9%B6%E6%B3%95%E5%BE%8B%E8%B4%A3%E4%BB%BB%E3%80%82%22%5D& \nvid=60001092&\nmerchantCode=WLHotelHDJK001&\nreturnURL=https%3A%2F%2Fmembermobilebetak.qunar.com%2Fm%2Fmember%2Fasset%2Fcoupon%2Fdetail.html& bindCardSource=coupon_bind& banner=https%3A%2F%2Fsource.qunarzz.com%2Fsite%2Fimages%2Fzhuanti%2Fhuodong%2Fflight_free_banner.jpg\n```\n\n* member-mobile 内部已经有根据传递参数配置页面展示的方法，但是很多参数相对于来源是静态的，同时如果需要增加新参数或者新来源的时候需要前后端介入开发，大概会需要 2~3pd。\n\n![使用的工具](http://ww1.sinaimg.cn/large/89d0a2e1ly1fqeqvbrmjvj20sg0lc77v.jpg)\n\n* 前端以及node的一系列框架工具逐渐成熟，足以制作类似于lego的渲染系统。\n\n* 公司的 QConfig 支持 JSON 类型的配置文件，并且已经可以在 node 端使用。\n\n## 编程语言的选择\n\n![Typescript](http://ww1.sinaimg.cn/large/89d0a2e1ly1fqeowo5o6jj20gx0gxwf6.jpg)\n\nmember-mobile 为了保证浏览器兼容性用的是 ES5，然而更多的代码库使用的是 ES6 编写，使用的时候再编译成 ES5。但是，无论 ES5 还是 ES6 都是动态类型 JS，无法对代码进行类型检查。\n\n至于关于 typescript 的好处，我不在此多余阐述，可以参考我过去的记次分享 \n\n[typescript干货](http://gongbaodd.github.io/fe/2017/05/04/1TypeScript%E5%B9%B2%E8%B4%A7.html) \n\n[Typescript sucks but long live the types\n](http://gongbaodd.github.io/fe/2017/09/18/Typescript-sucks-but-long-live-the-types.html) 。\n\n[TypeScript编译抽象语法树](http://gongbaodd.github.io/fe/2018/01/03/typescript%E7%BC%96%E8%AF%91AST%E8%AE%AD%E7%BB%83.html)\n\n## 架构设计\n\n![架构设计](http://ww1.sinaimg.cn/large/89d0a2e1ly1fqeqvsivq4j20sg0lcaee.jpg)\n\nlego 参考了公司内普遍使用的增加一层 node 层作为渲染层的方案，然而工程上利用 webpack 可以分别打包以及 js 可以在双端运行的特性，实现了前后端同构方案，这样再开放上无需在 node 层增加开发人员，具体的实现请参考[【erʌpt】一个前后端同构的设计思想](http://gongbaodd.github.io/fe/2017/08/15/Er%CA%8Cpt-%E4%B8%80%E4%B8%AA%E5%89%8D%E5%90%8E%E7%AB%AF%E5%90%8C%E6%9E%84%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%80%9D%E6%83%B3.html)。\n\n### Qxf 作为 node 服务框架\n\nQxf 是 Qunar 的 node 服务框架，基于 Express，Express 也是目前被最广泛使用的框架。\n\n* q-version QZZ版本管理\n* q-logger 日志系统\n* q-exception 异常捕获\n* q-monitor 监控系统\n* q-healthcheck 响应Ngix请求\n\nQxf 包含的模块使得 lego 在搭建初期不需要重建轮子，节省了很多时间。同时因为其基于 Express,　更有利于搭建　restfull 接口。\n\n### Preact 作为同构渲染框架\n\n![Preact logo](https://opencollective-production.s3-us-west-1.amazonaws.com/3fd44c50-b42b-11e6-8e7e-5955bbcb143d.png)\n\nlego 使用 preact 作为前后端的渲染框架，preact 的包大小是 react 的 1/20，同时 preact 对 typescript 的支持是目前除 angular 外最好的框架。\n\n### 统一路由地址\n\nlego 在 node 端使用　preact-router 渲染路由路径，而在客户端结合　HashHistory 使得客户端无需刷新页面更新路由。\n\n```shell\n# node\n\n/bindCard/default/index\n\n# client\n\n/bindCard/defaut/index#/index/auth\n```\n\n### HTTP 连接\n\n起初 lego 使用的是 fetch 作为前后端接口交互框架，然而实际使用后我们全部改用了 Axios，主要原因有下。\n\n* Axios 双端完全兼容，只有部分参数不同。\n* Axios 支持超时，超时后可以 abort 不多于占用 socket。\n* Axios 可以配置中间件用来处理登录情况。\n\n## QConfig 配置\n\n在 QConfig 中，每一个项目都有自己的配置文件（JSON类型）\n\n![QConfig配置](http://ww1.sinaimg.cn/large/89d0a2e1ly1fqer9g1ivej20lg0y0gnu.jpg)\n\n每个 JSON 文件都有一个 solutions 字段，里面是按照来源存放的配置文件，每次使用的时候配置文件会和 default 混合一次确保配置的完整性。\n\n![JSON](http://ww1.sinaimg.cn/large/89d0a2e1ly1fqerbb3zwqj20ia0d6dgr.jpg)\n\n## Hybrid 桥\n\n用于 Qunar 端的 HYSDK 并没有完全适配公司的客户端，我们开发了 PayDevice 来补足短板\n\n```typescript\nclass PayDevice {\n    static readonly NAME_IOS_FIX: string;\n    static readonly NAME_IPX_FIX: string;\n    static readonly QUNAR_IPHONE: string;\n    static readonly QUNAR_APHONE: string;\n    static readonly GONGLUE: string;\n    static readonly FIX_NAV_IOS_HEIGHT: number;\n    static readonly FIX_NAV_IPX_HEIGHT: number;\n    static readonly FIX_STATUS_IOS_HEIGHT: number;\n    static readonly FIX_STATUS_IPX_HEIGHT: number;\n    static readonly FIX_BOTTOM_IPX_PAD: number;\n    private static readonly regularExp;\n    private static getLowerUA;\n    private static getMatchArray;\n    static getAppProtocol: typeof getAppProtocol;\n    static sniff: typeof sniff;\n    static isIPad: typeof isIPad;\n    static isIPod: typeof isIPod;\n    static isIPhone: typeof isIPhone;\n    static isCtripApp: typeof isCtripApp;\n    static isApp: typeof isApp;\n    static isAppIPhoneX: typeof isAppIPhoneX;\n    static isCtripAppIPhoneX: typeof isCtripAppIPhoneX;\n    static trim: typeof trim;\n    static getCookie: typeof getCookie;\n    static getQN270: typeof getQN270;\n    static getBodyFixClass: typeof getBodyFixClass;\n    static sniffmiddleware: typeof sniffmiddleware;\n}\n```\n\n## 监控系统\n\n我们修改了 Qxf 的 logger 和 monitor 以适配支付中心的鹰眼系统，更新　member-mobile 的 payGa 以接收前端埋点。\n\n## 支付组件库\n\n### PayUI\n\n我们经过和 UE 协调，利用 Yo 制作了一套 PayUI.css，可以直接作为支付中心样式使用。\n\n![PayUI](http://ww1.sinaimg.cn/large/89d0a2e1ly1fqesxkdjt7j20c80a074u.jpg)\n\n### TS PAY COMS\n\n利用 payUI 制作的组件库，使用 rollup commonJS 打包，提供工厂方法构建。\n\n![TS PAY COMS](http://ww1.sinaimg.cn/large/89d0a2e1ly1fqet3rrs2yj217c0uwwjt.jpg)\n\n```javascript\nexport const FormID = Factory.input(\n    Component, h, { CheckUtil, PayInput, PayList, MemICO },\n);\n\nexport const FormIDTlist = Factory.list(\n    Component, h, { FormID, CheckItem, PayPopup, PayList },\n);\n```\n\n## 打包系统优化\n\n![打包系统](http://ww1.sinaimg.cn/large/89d0a2e1ly1fqes6t5852j21k60uy1kx.jpg)\n\n### typescript编译优化\n\n使用 HappyPack 分别使用３个线程处理前后端编译，利用 ForkTsCheckerWebpackPlugin 使用一个线程做类型检查，使用 cache-loder 缓存已编译的内容，减少重复编译时间。\n\n经过优化，ts 的编译时间减少到原来的 1/2。\n\n### CSS的优化\n\n#### 使用 PostCSS 逐步代替 Yo\n\nYo 的缺点\n\n* 使用 SASS 逐文件单线程编译，效率慢\n\n* 使用的是 SASS 语法，不是原生 CSS 语法，并只会对使用 Yo 语法的地方做浏览器兼容处理,没有编辑器支持\n\n```CSS\n/*** Yo 源代码 ***/\n.foo {\n    @include yoflex();\n}\n\n.bar {\n    display: flex;\n}\n```\n\n```CSS\n/*** 生成代码 ***/\n.foo {\n    display: -moz-flex;\n    display: -webkit-flex;\n    display: flex;\n}\n\n.bar {\n    display: flex;\n}\n```\n\n#### 使用 CSS-modules 避免全局类名覆盖\n\nCSS 一直存在很严重的类名覆盖问题，由于 CSS 的类名都存在于一个全局域中，当两个组件中存在重名类名，其中一个会被覆盖。\n\n```CSS\n/**a-button.css**/\n.button {\n    background: red;\n    background: blue;\n}\n/**b-button.css**/\n.button {\n    background: blue;\n}\n```\n\n使用 CSS-modules 后，编译好的 CSS 文件会处理掉重名类名。\n\n```CSS\n.button-a {\n    background: red;\n}\n.button-b {\n    background: blue;\n}\n```\n\n### 发布使用 node_cache_share 缓存 node_modules\n\n### 异步处理生成文件\n\n使用了以上优化，我们最终将编译速度由初期的五分钟优化到现在的26秒。\n\n## 过去一年遇到的问题\n\n* 大部分开发人员的水平仍然停留在13年左右，知道的优化方案相对过时，对于“枚举”、“泛型”、“私有成员”等定义都比较模糊。\n* 公司内部前端解决方案不统一，平台部门的解决方案往往在重复造轮子，到我们这里必须要修改后才能使用。\n* 很多人抵触学习新技术，往往是需要用的时候再去学习，当然对应的前端发展速度也前所未有的快。\n* 因为lego放弃了最初微服务的方案，杂糅很多业务逻辑后，现在功能比较臃肿，新功能的推广只能循序渐进。\n* 每次修改需要等待编译，开发起来比较慢。\n* restful API只是一个思想，还没有所谓的最佳实践，推广至开发人员后，一个接口的定义会跟开发人员的能力而显得参差不齐。\n\n## 解决方案\n\n* 【开发能力】增加技术分享，补足技术瓶颈\n* 【重复造轮子】我们建立了qtalk群，互相分享各部门的使用经验\n* 【强制代码规范】修改编译配置项阻止不规范的代码上线\n* 【减少冗余业务】和产品讨论，把没必要的业务逻辑删除\n* 【加快编译速度】打开多线程、缓存，使用 webpack-server 和 nodemon 处理本地开发环境\n* 【考虑新的传输协议】考虑使用 object-validator 或者 apollo + graphQL 实现。\n","collection":"blog","data":{"type":"post","category":"fe"}},{"id":"2018/04/19/CSS-3D.md","slug":"2018/04/19/css-3d","body":"# 用CSS制作3D动画\n\n![](http://ww1.sinaimg.cn/large/89d0a2e1ly1fqi1sjijteg20np0dce82.gif)\n\n直到前几天，我需要做一个简单的3D动画时候，我才意识到其实我还没有用CSS做过3D动画。\n\n很多人其实认为只要写下\n\n```CSS\n.3d-Object {\n    transform: rotateY(180deg);\n}\n```\n\n但最终效果并不是三维的旋转，原因是它的父元素必须是一个有深度的盒子。\n\n```CSS\n.box {\n    perspective: 800px;\n}\n\n.box .3d-Object {\n    transform: rotateY(180deg);\n}\n```\n\n如果是希望旋转180度后不展示背面可以添加 backface-visibility。\n\n```CSS\n.box .3d-Object {\n    transform: rotateY(180deg);\n    backface-visibility: hidden;\n}\n```\n","collection":"blog","data":{"type":"post","category":"fe"}}]}