{"posts":[{"id":"2018/08/05/CSS Grid Layout.md","slug":"2018/08/05/css-grid-layout","body":"# CSS Grid Layout 使用总结\n\n最近被猎头催的实在不行了（真的，感觉他们更担心我找不到工作），于是我写了份简历给他们。当然了，既然最后要的是PDF，这种机会不试试新的CSS布局还真说不过去。\n\n##　实现圣杯布局\n\n提到CSS布局，自然想到了圣杯，一行header，中间是sidebar和content，底下是footer。\n\n```css\n.grid {\n    display: grid;\n    grid-template-area: \"header header  header\"\n                        \"left   content right\"\n                        \"footer footer  footer\";\n}\n\n.item1 {\n    grid-area: header;\n}\n\n.item2 {\n    grid-area: left;\n}\n\n.item3 {\n    grid-area: content;\n}\n\n.item4 {\n    grid-area: right;\n}\n\n.item5 {\n    grid-area: footer;\n}\n```\n\n很简单，使用 Grid Layout 的最大好处是页面布局由CSS全部接管，意味着想把```.item5```改成header只需要修改```grid-area```即可，```grid-template-area```结合 media query　可以实现适配不同设备，如打印机布局相比于屏幕来说界面比较窄。\n\n```CSS\n@media print {\n    .grid {\n        grid-template-area: \"header\"\n                            \"left\"\n                            \"content\"\n                            \"right\"\n                            \"footer\";\n    }\n}\n```\n\n## 实现无大小限制瀑布流\n\n前端瀑布流在网格布局之下，结合``` grid-auto-flow: row dense;```可以实现大小不一的网格元素按照最合理的形式行填充。\n\n```css\n.grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 100px);\n    grid-template-rows: 100px;\n}\n\n.size-1 {\n    grid-column: span 1;\n    grid-row: span 1;\n}\n\n.size-2 {\n    grid-column: span 2;\n    grid-row: span 2;\n}\n\n.size-3 {\n    grid-column: span 3;\n    grid-row: span 3;\n}\n\n```\n\n## 兼容性\n\n并没有测试IE11，从caniuse可以看到，主流浏览器除了IE11都是不需要家前缀的，IE11需要加-ms前缀（道听途说autoprefixer不会补grid，所以最好手改）。\n\n国产浏览器兼容性就不理想了，除了UC，百度、QQ浏览器都不支持，汗啊，看来浏览器这行业真的是不挣钱了，所以如果要支持这些浏览器还需要再等等。\n","collection":"blog","data":{"type":"post","category":"fe"}}]}