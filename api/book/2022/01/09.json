{"posts":[{"id":"2022/01/09/Fixed-point-number.md","slug":"2022/01/09/fixed-point-number","body":"\n# 定点数\n\n## 二进制、十进制和十六进制的转化\n\n对于$2^n$的 16 进制转化,最高位是$2^{(n \\mod 4)}$，低位用$n/4$个零补齐\n\n| $n$ | $2^n(decimal)$ | $2^n(hexadecimal)$ |\n| --- | -------------- | ------------------ |\n| 5   | 32             | 0x20               |\n| 23  | 8388608        | 0x800000(3+4x5)    |\n\n这个用的还比较多，比如一个 32 位的计算机，它可以寻址 0x0000~0xffff(0x10000-1)，总共$2^{32}$字节（4GB）。\n\n显然 16 位中 A-F 和二进制、十进制的对应关系也需要熟记。\n\n- 0x605c + 0x5 = 0x6061\n- 0x605c - 0x20 = 0x603c\n- 0x605c + 32 = 0x607c\n- 0x60fa - 0x605c = 0x9e\n\n## 字节序\n\n字节序 endian 这个词源于「格列佛游记」里面一个国家因为吃鸡蛋要敲大端还是小端引发争议。这里面指老的计算机普遍以大端存储数据即主观方式存储，而现有的主流机器都以小端存储，即反向存储。\n\n如`int a=0x12345678;`在大端上 a 的第一个字节是 12 而小端则是 78。历史上也出现过大小端机器互通导致 Unix 打成 nUxi 的故障。\n","collection":"blog","data":{"type":"post","category":"book","tag":["CSAPP"],"series":{"slug":"CSAPP","name":"深入理解计算机系统"}}}]}