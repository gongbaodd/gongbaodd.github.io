{"posts":[{"id":"2023/01/01/2022-Retrospective-Immersed-VR.md","slug":"2023/01/01/2022-retrospective-immersed-vr","body":"\n# 2022 Retrospective\n\nOne hell of a year. This year, the government finally gave up its 2-COVID policy. Russia is invading Ukraine, and I just realized most Chinese are not standing on the justice side. Idiots were running the country, and they will run for the coming decades without the help of elites. Businessmen all over the world are rushing out of the country, fearing that the 0-COVID will happen again. So the future does not look promising. It feels good to discern the situation. I have to make the right choice at the right moment.\n\nThis year I took the postgraduate entrance examination for the second time, and I did pretty well. This September, I decided to cut down some entertainment time and focused on studying. However, the news still brought anxiety. They were always cheerful, that the government protected the people from the virus again, and trade hit another high this year. What did I know? I know that I was forced to stay at home many times to end the spreading of the virus, and eventually got ill and the end of this year, right before the examination.\n\nBefore opening, my neighborhood was under lockdown. Max whites took turns working overnights to guard my block, in case of someone what to get out. That was some cold snowy nights. I watched through the window to know how long they can last. The day they decided to open, a sunny day came. Then everyone got infected making all the work those max whites had done in vain.\n\nThis year a lot of hypocrites showed themselves who they are. These self-claimed experts discuss military, political, medical treatment, and sports. Beaten by reality, it turns out that the experts are so ignorant, selfish, and arrogant. The media shows fake news about the Bucha massacre and shouted about Nancy Pelosi going to Taiwan. Gladly, A local populist named \"Sailei 3min\" got banned, who used to spread conspiracy theories about the west. This time he copied a video with a frame of a Chinese untalkable 64 incident. Self-thinking is becoming a topic of the year, sadly, many people still don't have it.\n\nDuolingo is my favorite APP. But it was banned for a few months in China. Because the youth were using it to learn languages. It still doesn't make any sense. Thankfully, I can use it in the autumn, with a version only for mainland China. The second language became less important, The first US movie on screen was \"the Batman\", and it was in April. On the contrary, it seems that the cultural industry abroad is extremely prosperous. In the middle of the year, whether it is Amazon, HBO, Apple TV, or Disney, excellent works emerged in endlessly. The Snowpiercer, Moon Knight, The Boys, Shining Girls, Severance, The sandman, at the end of this year, The House of Dragon, The Rings of power, Andor, Rick & Morty, and The Crown. Not to mention a lot of Chinese content renowned internationally, Turning Red and Everything Everywhere All At Once.\n\nAfter the two sessions, the virus went on rage, and then the notorious Shanghai lockdown began. Actually, before Shanghai, there are several cities are in lockdown. But they were small cities like Changchun and Xi'an. Ridiculously, though people were unprepared at first. The success of the Xi'an lockdown got praised, and no one remembered the panic. That forced Shanghai to be closed. The pandemic was severe, and China as a host decided to give up the Asian Cup which would be held in 2023 and was prepared for decades. Media shows information about how badly the westerners were handling the virus, the foreigners also had to face monkeypox. At the end of the year, when FIFA began, Everyone realized that was just a lie.\n\nToo much for the plague, This year is an unexpected exciting one for technology. In June, I took up vim, my laptop is two years old. It seems VScode is a heavy burden. The fan keeps telling me that it can not bear it anymore. This July, a blazingly fast Javascript runtime called Bun came out. Brought out a new language called zig. Different from rust, zig wants to build the language as simple as possible. This August, came up with a new JS framework Astro, a framework of frameworks, in Astro, I can use not only React but also Vue, svelte, and a lot of others. In September I learned OpenGL, realizing that I really should get a new ITX to replace my laptop. So I gave up my 3D printer, and after the exam, I'll get one ITX. This October, when I was surfing Youtube, I found some YouTubers working in VR, and I realized what I wrote in my graduation paper is happening. Right now I am using a quest2 to write this. I was banned from Wechat this October because I talked about a bridge in Beijing. From that day, I began to use iMessage, I am a half Apple-guy now. In December, people were talking about chatGPT, a nonsense AI, but truly amazing.\n\n2022 ends, I don't miss it. But I think 2023 is going to be much worse.\n","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/01/01/The-First-Week.md","slug":"2023/01/01/the-first-week","body":"# The First Week\n\nThis is the first week of 2013. A lot of stuff happened. I received Quest2 and started my first metaverse experience in Immersed VR. I have got my first ITX Mac device only for me. I upgraded my laptop and tablet to Windows 10 Pro.\n\nBesides using a lot of time to set up the development environment, I wasted some time adapting to working in VR. It's like living in a place with a telescope on. Since I only have 2K pixels per eye, the resolution of the screen needs to be small, so that I can discern the characters. And, yes, my computer cannot afford too many high-resolution screens. I need to practice blind typing more. Typing in VR is a disaster, even though there's a pass-through feature. I cannot see the keyboard. I always want to see the keyboard through the hole in the nose position. Especially some password occasions.\n\nMore news, I found my passport is not expired, great news, so I can plan some abroad travels this year.\n\nIn the 2nd week, I will start some front-end coding.\n","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/01/15/2th-week-retrospective-Hackintosh.md","slug":"2023/01/15/2th-week-retrospective-hackintosh","body":"\n# 2nd week retrospective\n\nThis week I configured some bugs in my nvim preferences. Next week I will try to use it as my main editor.\n\nStill working in VR, found some shortcoming when I switch devices. Wish there were an Immersed for multiple devices.\n\nI need a better podcast app to synchronize between devices. And a virtual keyboard just show what I typed, yes it is too hard to do blind typing.\n\nA Netflix comic is hilarious, called Inside Job. Tells a story about a company works on conspiracies. Sadly it was cut. \n","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/01/24/the-3rd-week-week-of-luna-vim.md","slug":"2023/01/24/the-3rd-week-week-of-luna-vim","body":"\n# The 3rd week in review: week of the LunarVim\n\nHappy Luna/Chinese new year!\n\nfirst week I bought Oculus Quest 2 started my first experience in Immersed VR.\n\nsecond week I built up an ITX started my self-made hackintosh.\n\nThis third week, I tried LunarVim, great nvim config, I finally can be a vim guy! However, this stable version is the last one that supports Packer.vim. It means I have to learn Lazy.vim when the next version comes. I started using LazyGit, too. Like the authors' podcast btw.\n\nI also found out an app called BigScreen, which streams video to the VR headset so that the user can use it to watch movie.\n\nThis week, I compared ImmersedVR and VSpatial, VSpatial supports multiple devices, which is awesome, but only supports Windows. Yes, VR works better in Windows than Mac. I tried to configure Windows in Bootcamp. As I installed WSL2, it went blue screen. Guess I have to use Mac on my ITX for a while.\n\nSomething wrong happened to edge browser, all the chromium browsers occasionally cannot browse the internet. However, I am using firefox now.\n\nI still use TypeClub, I cannot find a better way but to learn touch typing. Although, I found KeyCastr on Mac and Carnac on Windows, which show key strokes on screen. They may be useful when I want to do some streaming.\n\nso next week's plan\n\n- Still need to do more typing class\n- Set up my account in WHV \n","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/01/29/the-forth-week-touch-typing.md","slug":"2023/01/29/the-forth-week-touch-typing","body":"\n# The 4th week: touch typing\n\nMost days in this week, I kept practising touch typing on typeclub. Now, I can type the alphabets better, but the symbols are not so good.\n\nI haven't made a WHV account, I will do that this week.\n\nI can't make hyper-V work on my ITX, so I can't run WSL. I can't find out why.\n\nTried Meta workrooms this week, Love the whiteboard.\n\nThis week remember the WHV account!\n","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/02/08/5th-week-Get-a-keyboard.md","slug":"2023/02/08/5th-week-get-a-keyboard","body":"\n# 5th week: Get a keyboard\n\nWell, I bought a K375s. Yes, I've gave up my touch typing plan. And I will keep practising it recently.\n\nThe Chinese WHV will take offer on this August. Right now I have to pick up my English. However, I just found out that China is a high-incidence area of tuberculosis. After what happened in Covid. It's like a joke.\n\nI moved my develop environment to PC this week. The VR experience in Mac was not acceptable. Guess I have to buy a new router or wait for some software update.\n\nI have too many plans this week. My English book is not here yet. Guess I will try some FE frameworks.\n","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/02/14/6th-week-Use-AI-Wifi-direct.md","slug":"2023/02/14/6th-week-use-ai-wifi-direct","body":"\n# 6th week: Use AI & wifi-direct\n\nMy Mac is super lagged this week. After some research, I have to use wifi-direct in Immersed VR. Simple, if you have a PC, you can set up a hotspot and connect your Headset to the hotspot. But in Mac, the hotspot feature is used by airdrop. I can try the ethernet, and share the internet with the headset using wifi. Or I can buy a USB wifi adapter as a Wifi2.\n\nI bought CF-812AC, using an opensource solution on Github written by [chris1111](https://github.com/chris1111/Wireless-USB-Big-Sur-Adapter). The driver emulates the chip as an ethernet cable. It needs to disable SIP in recovery mode. In conclusion, The driver works fine, I can share my internet now, but in 2.4GHz. So the better idea is to add AP feature in the driver. It costs time... Now, I'm using a PC to set hotspot for the Mac and the headset.\n\nAbout AI, I subscribed copilot this week. Yes, it may not replace my job, but someone with an AI will.\n","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/02/19/7th-week-SSDs-are-so-cheap.md","slug":"2023/02/19/7th-week-ssds-are-so-cheap","body":"\n# the 7th week: SSDs are so cheap\n\nI bought an 1TB SSD for 288 yuan. It's so cheap. I'm going to use it as a Windows drive, leaving the 500GB to use Mac OS.\n\nI finished three TV series this week. The first one is The Slow horses. It's a British TV series. The story is about a group of agents working for MI5. When the government made a mistake, they are the ones to take the blame. Good story and good acting. I like it. The second one is The White Lotus, a comedy TV series. It's about the vacasions and murders of hypocritical white upper classes. The third one is an anime called The Bad Batch. I liked it in the first season, but this season, the animation is not so good. Next week I will finish The Clarkson Farm.\n\nI bought a second hand Huawei phone for my father. It will be arrived the next week.\n\nI tried Tailwind this week. Also downloaded T3 project. I may need to figure out how to use prisma and tRPC. I'm trying to make a dashboard using systeminformation.\n\nFixed WSL running in opencore. Don't know how, I just copied some configs from daliansky.\n\nNext week the master entrance exam result will be announced. Not so sure what to do next.\n","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/02/26/8th-week-bigfrontenddev.md","slug":"2023/02/26/8th-week-bigfrontenddev","body":"\n# the 8th week: bigfrontend.dev\n\nI finished The Clarkson Farm this week. It's a comedy TV series. It's about an English TV billionaire who started farming. It's a good story. I like it.\n\nI didn't pass the master entrance exam, such a relief. I can start my plan on migrating abroad.\n\nAfter almost half year, I've never touched one thing about the front end. I think I need to learn more about it. I found a website called bigfrontend.dev. It's a website that teaches front end. I'm going to finish it this week and the following one.\n","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/03/05/9th-week-HoloFit.md","slug":"2023/03/05/9th-week-holofit","body":"# the 9th week: HoloFit\n\nI'm not satisfied with this week's work, I didn't finish the typingclub.com. It gets harder as I push farther. I need to finish it next week, then I can start the BigFrontEnd.dev.\n\nI tried HoloFit this week, a VR fitness app. It supports devices with FTMS bluetooth support which is a small bluetooth beacon that can be attached to a bike. But be careful not all the beacons supports FTMS. The first one I bought only support an App called Yingerjian. Nice App, but not exactly what I wanted. the FTMS bluetooth device also supports Zwift. But as I paddle the App had no response. I checked the documents, it was a mess, but I suppose I will develope an App of it oneday.","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/03/13/10th-week-Dev-Containers.md","slug":"2023/03/13/10th-week-dev-containers","body":"\n# 10th week Dev Containers\n\nThis week, I bought Virtual Desktop to try Steam VR. I also tried to use the Dev Container to develop the project. I found that the Dev Container is very useful.\n\nsome pre-build dev containers\n\n[t3](https://github.com/gongbaodd/containers/tree/t3)\n\n[tauri](https://github.com/gongbaodd/containers/tree/tauri)\n\n[cypress](https://github.com/gongbaodd/containers/tree/cypress)\n\n[opengl](https://github.com/gongbaodd/containers/tree/opengl)\n\nI bought Glinet MT3000, it will arrive the next week. Guess it can be an ultimate network solution.\n\nI can use new bing now, perfect AI, free and useful.\n\nI finished the typingclub.com. So the next week I will finish the BigFrontEnd.dev.\n","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/03/20/10th-week-GLinet.md","slug":"2023/03/20/10th-week-glinet","body":"\n# 10th Week: GLinet\n\nThis week I mostly work on BFE.com, finished about 30% questions. Last week I bought GLinet router, a router runs openwrt on it, super useful.\n\nI took Dalian subway line 5, nice new subway line, I like the station design.\n\nAbout AI, I was going to generate 360 degree panorama image from 2D image, using AI to generate the empty part, but I found it's not that easy, it takes a lot token to do outpaint in either stable diffusion nor Dall-E. But I found [Skybox lab](https://skybox.blockadelabs.com/), It fulfills my need, I can use the image in Immersed VR. Hope one day I can set it up using voice commands.\n","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/03/27/11st-week-Ted-Lasso.md","slug":"2023/03/27/11st-week-ted-lasso","body":"\n# 11st Week: Ted Lasso\n\nNothing new, still working on BFE.com. Watched Ted Lasso, Inspiring.\n","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/04/04/12th-week-tetris.md","slug":"2023/04/04/12th-week-tetris","body":"\n# 12nd Week: Tetris\n\nStill working on BFE.com. Watched Tetris, Great story about how an American sales man brought Tetris from Soviet Union to the Nintendo.\n","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/04/16/14th-week-a-shit-load-of-money.md","slug":"2023/04/16/14th-week-a-shit-load-of-money","body":"\n# 14th week: I spent a shit load of money\n\n## About GPU\n\nI bought a GPU this week, first GPU in my life. A computing card Tesla P40. Can read [How to use tesla P40](https://github.com/JingShing/How-to-use-tesla-p40) to make it work as a gaming card. To use it as a display card can try this [document](https://github.com/toAlice/NvidiaTeslaP40forGaming). Because the fan has not been arrived, I cannot use it for some hardwork.\n\n| name                     | price   |\n| ------------------------ | ------- |\n| Tesla P40                | 1062    |\n| TH3P4G3 Thunderbolt Dock | 833.28  |\n| Delta NX450              | 279     |\n| 3D printed Fan           | 78      |\n| USB fan power            | 8.9     |\n| Thunderbold lan 2m       | 79      |\n| ADT R43SG                | 198     |\n| NVME/SATA disk box       | 99      |\n| some lines               | 59.1    |\n| Total                    | 2696.28 |\n\nLearnt a lot. Like the PICe connector actually shares 75W power. A 6pin GPU power source gives away 75W. A 8pin(or 6+2 pin) gives 150W. A GPU like Tesla P40 uses 250W power, means it needs 75W from PCIe, 75W from 6pin, and 100W from 8pin. Since there is not a power supply only for GPUs, I can only buy a PC power supply. Luckily, the Delta NX450 I bought, has one 6pin and a 6+2pin.\n\nI did more research, If I don't have another 6pin, I can use a SATA port as a replacement, a SATA port supplies 54W, only need an adapter, it can support GPUs.\n\nStrongly suggest to read [egpu.io](https://egpu.io/best-egpu-buyers-guide/) before buying. eGPU has cut a lot price, but it is still expensive for thunderbolt devices. TH3PG3 is the cheapest I can find.\n\nSadly, thunderbolt works on my laptop, not my ITX, so I have to buy a NVME dock, say ADT R43SG. Thank god it is a lot cheaper. I bought the disk box to run the OS through USB, sadly hackintosh is not supported, I can only work in Windows when I use the GPU.\n\n## Surface Dial\n\nI want a surface dial the day I saw it. I don't know what I gonna do with it, but I just want it. I have been waiting for a cheap alternative for a long time. I finally found one, a robit dial. It is a cheap alternative for surface dial.\n\nAnd a mushroom shell! Why can it be so cute!\n\n| name      | price |\n| --------- | ----- |\n| RobitDial | 69    |\n\n## betterjoy\n\nThis is like the only thing I got in this week that costs me no money. It is a driver for Joy-cons. I can reuse the Nintendo Joy-cons on PC.\n\nAs I share this APP to others, I got a lot negative responses. Clearly, Switch players despise PC players, and PC players don't use gamepad to play games.\n\n## iPhone Pro Max 12\n\nYes, I am going to use an iphone the next week. The MIX 2s frequently restarted last week. Firstly I thought it was the battery problem, But nothing happend as I changed it. It may be a motherboard's or some buttons' problem. I don't want to waste more time to fix it now. So I bought a second hand iphone 12 pro max.\n\n| name           | price  |\n| -------------- | ------ |\n| MIX 2s battery | 87.65  |\n| iPhone Pro Max | 3196.8 |\n","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/04/25/15th-week.md","slug":"2023/04/25/15th-week","body":"\n# 15th week\n\nwhole week waiting for the new iPhone, yet got a broken one...\n\nFinished the BFE.com CSS, ts & react part.\n","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/05/01/16th-week-GUIs.md","slug":"2023/05/01/16th-week-guis","body":"\n# 16th week: GUIs\n\nlast week, I tried using different GUI frameworks to build a vcode form.\n\n[AntD](https://ant.design/) is a fully packed react component library. It is easy to use, and satisfies all the needs without picking.\n\n[XState](https://xstate.js.org/) is a state machine/ One thing I like is that it can show the state into a graph. Compared to hooks or redux, this is a nice feature for refactoring.\n\n[Vue](https://vuejs.org/), here are some [challenges](https://vuejs-challenges.netlify.app/) to learn vue. I used [Element+](https://element-plus.org/), which is a lot like AntD. Although many people think Vue is easier than React, I think it harder. to learn Vue you have to learn template syntax, an option style API and a composition API. Feels redundant.\n\n[Svelte](https://svelte.dev/) with [SMUI](https://sveltematerialui.com/), I like material design a lot. Compared to React, Svelte is not so fully prepared. But the code is the simplest in all the frameworks I tried.\n\n[Leptos](https://github.com/leptos-rs/leptos) a Rust GUI framework. With signal based reactive programming. It is like [SolidJs](https://www.solidjs.com/). It makes rust much easier to use. But WASM still a long way to go. The package is big, 2MB. The page needs to load for the whole file to run.\n\n[Flutter](https://flutter.dev/) renders all element into canvas. But the framework is fully made. I might choose Flutter for my next project.\n","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/05/07/17th-week-stablediffusion.md","slug":"2023/05/07/17th-week-stablediffusion","body":"\n# 17th week stable diffusion\n\nGot My iPhone finally.\n\n- tried Memoji, can't generate one from my photo, sad. I can send it to wechat.\n- iPhone don't have a complete file system, it feels a little different to Android. Meaning most time, I can't open a folder, create a file to edit. I can open an editor to write and then share to the file App.\n- iPhone don't have a back logic, sometimes I want to swipe the side to trigger back logic, which is useful in Android, but it won't work in iOS.\n- I can't capture a 360 panorama photo, the last App, Gogle streetview was removed from App Store.\n\nTried stable diffusion, generated some photo with my face, like it.\n\nDid some research on XR, want to try some in MRTK. try the tutorial on babylonjs. About AR, 8th wall might be a starter choice, or I can try Unity's AR foundation, to make AR work on phones.\n","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/05/15/19th-week-Google-IO.md","slug":"2023/05/15/19th-week-google-io","body":"# 19th week Google IO\n\nTried AImoji this week, using stable diffusion to generate emoji. Try [this video](https://t.co/IiWIS6MQJY) to learn more about training a picture.\n\nTried MRTK on Hololens, tried some quest demos, building a VR is fun, compiling time is a disaster. Want to try compile MRTK on quest, and learn some babylonjs.\n\nTrie QWERT-learner to remember words, this week I want to finish it.","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/05/21/20th-week-web-BLE.md","slug":"2023/05/21/20th-week-web-ble","body":"# 20th week web BLE\n\nWatched The Long Season, nice story about the life of northeast China.\n\nWatched The Super Mario Movie, funny movie.\n\nTried to build MRTK on quest, quite simple but not as easy as web development.\n\nDid some research to build a [web BLE](https://googlechrome.github.io/samples/web-bluetooth/) project on my indoor biking device. Can use [nRF Connect](https://play.google.com/store/apps/details?id=no.nordicsemi.android.mcp&hl=zh&gl=US) to read what the BLEs send. But the simulator is deprecated, meaning I can't simulate a fake BLE device on my computer. I have to buy a BLE device to test it.I can't using web-BLE on iOS. [Bluefy](https://apps.apple.com/jp/app/bluefy-web-ble-browser/id1492822055) is a free app to test web-BLE on iOS.\n\nDid some research on [WebXR](https://immersiveweb.dev/).\n\nIt's amazing that web can do so much stuff.\n\n[Edge impulse](https://www.edgeimpulse.com/) puts ML into embedded devices, I won't dig it further. It's unbelivably cheap when I realized that a PR2040 board only costs 20CNY.","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/05/29/21st-week-cloudflare-workers-and-graphql-yoga.md","slug":"2023/05/29/21st-week-cloudflare-workers-and-graphql-yoga","body":"# 21st Week: Cloudflare Workers and GraphQL Yoga\n\nI've been working on adding a backend for qwert-learner.\n\nTo keep this App a static site, I decided to ditch the Restful API and use GraphQL instead. Since it only requires one endpoint. A lot schemes can found like Azure functions, AWS Lambda, Google Cloud Functions, DigitalOcean Functions and Cloudflare Workers. MongoDB Atlas is a cheap choice for database. But Cloudflare workers can use KV to store data, which is a better choice for me.\n\nCampared with Apollo Server, [GraphQL Yoga](https://the-guild.dev/graphql/yoga-server) is a lightweight one. Can be simply integrated with a lot providers like cloudflare. Here is the [document](https://the-guild.dev/graphql/yoga-server/docs/integrations/integration-with-cloudflare-workers).\n\nDeveloping cloudfalre workers is much easier with [wrangler](https://developers.cloudflare.com/workers/wrangler/). Can use [miniflare](https://miniflare.dev/testing/vitest) to do unit testing.\n\n","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/06/04/22nd-week-use-an-utra-wide-screen.md","slug":"2023/06/04/22nd-week-use-an-utra-wide-screen","body":"# 22nd Week: Use an ultra wide screen\n\nI added web sync on qwerty-learner, it's now available on [this site](https://qwerty-ochre.vercel.app/).\n\nThis week I bought a lot fans to nake sure my devices can survive the summer. I occasionaly found out that with an ultra wide screen can pick up my efficency. I always wanted to split the terminal window from vscode, with an wide screen, that's not a problem any more. So I found [CRU - custom resolution utility](https://www.monitortests.com/forum/Thread-Custom-Resolution-Utility-CRU). It adds new resolution to the graphic settings, like 2880x900.\n\nRarbg was down this week, guess I can not watch many movies for some time.","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/06/11/23rd-week-book-computer-deep-dive.md","slug":"2023/06/11/23rd-week-book-computer-deep-dive","body":"\n# 23rd Week: Book computer deep dive\n\nI read 计算机底层的秘密, it's literally a book like CSAPP, but has more technology and less caculations.\n\nDifferences between processed, threads, coroutins.\n\nCISC and RISC， how CISI using hyper-threading to defeat RISC. That it is actually a RISC with multiple assembly lines in the chip.\n\nHow to use memory especially in multiple cores.\n\nSaturday, I tried to wake up my old moto 360 watch.\n\nSunday, I learnt some swift language grammar from swift 100 days. I also tried kotlin, I doubt that some one can remember so manny language sugars.\n","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/06/19/24th-week-vscode.md","slug":"2023/06/19/24th-week-vscode","body":"# 24th week vscode\n\n## Wheel settings\n\nThis week I tried to make my RabbitDial, a cheap alternative to Surface Dial, work with Visual Studio Code. I learnt a lot about how to make a VScode extension. But it turns out I can just simply add some keyboard bindings on the wheel settings. This [link](https://learn.microsoft.com/en-us/windows/apps/design/input/windows-wheel-interactions) is about these settings. And this [link](https://learn.microsoft.com/en-us/uwp/api/Windows.UI.Input.RadialController?view=winrt-22621) talks about develop an C# APP.\n\n[These](https://github.com/microsoft/vscode-extension-samples) are the samples about making a VSCode extension.\n\nAnd there are some cool surface dial compatible open-source projects. [X-Knob](https://github.com/SmallPond/X-Knob). The [code](https://github.com/SmallPond/X-Knob) about sending Dial BLE signals might be useful.\n\n## TODOs on Rust\n\nThis week I bumped to an idea about graphql over FFI. I found some one published a [post](https://zhuanlan.zhihu.com/p/611516673) on ZhiHu.\n\nFound a document about how to use Rust on Android, [Link](https://google.github.io/comprehensive-rust/android.html).\n\n## Three.js or Babylon.js\n\nI checked a new [tutorial](https://sbcode.net/react-three-fiber/) about R3F. R3F has a component project called [drei](https://github.com/pmndrs/drei). But still, I think babylon.js has more build tools. And more [features](https://doc.babylonjs.com/features).\n\nI has been following a [guide project](https://doc.babylonjs.com/guidedLearning/createAGame\n), it's pretty old. I want to use react to refactor it.\n\nFound a [blog](http://louardongames.blogspot.com/search/label/Lessons%20from%20Suzy%20Cube) about game develop.\n\n## SwiftUI and RN\n\nAfter WWDC, I think it's time to learn some SwiftUI. I watched a [playlist](https://www.youtube.com/watch?v=OvLxxV7X1Is&list=PLuoeXyslFTubw4NtepDCis5tTqK37zT3Q&ab_channel=PaulHudson) from Paul Hudson. Swift is an interesting language, I will dig further.\n\nAlso I checked out a tutorial about [React Native](https://www.youtube.com/watch?v=ur6I5m2nTvk&list=PL4cUxeGkcC9ixPU-QkScoRBVxtPPzVjrQ&pp=iAQB), pretty simple.\n\n## The LAN does not work on Mac\n\nI found my LAN driver can not work on Mac OS.\n\n## ssh login WSL2\n\nThis is a [link](https://jmmv.dev/2022/02/wsl-ssh-access.html) about how to remotely login WSL2.\n","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/06/24/25th-week-babylonjs.md","slug":"2023/06/24/25th-week-babylonjs","body":"\n# 25th week - BabylonJS\n\nThis week is all about BabylonJS. I was trying to refactor [Summer Festival](https://github.com/BabylonJS/SummerFestival) using [react-babylonjs](https://github.com/brianzinn/react-babylonjs) and [@preact/signals-react](https://www.npmjs.com/package/@preact/signals-react).\n\nGame developing is little different with UI developing. Since the canvas repaints in every frame. I don't need to care too much about the reactive system. In every frame, there is a pre-render function to pull state from the store.\n\nUnity can be used to export BabylonJS App. Using [Scene exporter](https://doc.babylonjs.com/communityExtensions/Unity/Exporter), it is a paid tool, can find a free alpha version on github. After using it, I found it can export gltf file, the code part is not helpful. Same situation in [needle engine](https://engine.needle.tools/docs/getting-started). (BTW, needle engine only works on node v16)\n\n[cannon](https://schteppe.github.io/cannon.js/) is deprecated now, it's been rewritten to [cannon.es](https://github.com/pmndrs/cannon-es). I strongly suggest to read these [code](https://github.com/brianzinn/react-babylonjs/blob/master/packages/static/content/examples/physics/BouncySphere.tsx\nhttp://grideasy.github.io/tutorials/Using_The_Physics_Engine\n) to use a physical engine in react-babylonjs.\n\n## Custom Resolution on Mac\n\n[betterdisplay](https://github.com/waydabber/BetterDisplay) is a paid extension to make dummy screens on Mac OS with a 7 days free trail.\n\n## WebXR\n\nThere are some CSS specs like `transform-style: detached;` is used in MR environment. [DOM-overlays](https://github.com/immersive-web/dom-overlays), I am not sure if it can show DOM in dual screen. If it can't, maybe using [html2canvas](https://github.com/niklasvh/html2canvas) can help? Then canvas UI framework like Flutter can have better performance, I guess.\n\nIn react-babylonjs, attach an HTML element to a mesh is simple, just use `Html` tag.\n\n## Faas\n\nI was thinking about run serverless functions on a local machine. I found [knative](https://cloud.google.com/knative/) and [openfaas](https://docs.openfaas.com/cli/build/ ). I didn't dig further.\n\n## FydeOS\n\nThis Friday, I tried FydeOS on my Cube tablet. rotation not working, camera was off. The camera can not work on Ubuntu either. It's an Intel AV Camera 2500, I found a surface [repository](https://github.com/linux-surface/linux-surface) trying to crack it. I think I will try Ubuntu on my machines this weekend, running Windows is too hot in this summer.\n","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/07/01/26tn-week-Using-Ubuntu.md","slug":"2023/07/01/26tn-week-using-ubuntu","body":"# 26th week: Using Ubuntu\n\n## Babylon tutorial plan\n\nThis week，I've finished the [babylon tutorial](https://doc.babylonjs.com/guidedLearning/createAGame). Collected a lot courses.\n\n- About using a physical engine, can read [this document](https://doc.babylonjs.com/legacy/physics/usingPhysicsEngine).\n\n- About using HDR image, can read [this document](https://doc.babylonjs.com/features/featuresDeepDive/materials/using/HDREnvironment).\n\n- About playing music, can read [this document](https://doc.babylonjs.com/features/featuresDeepDive/audio/playingSoundsMusic).\n\n- How to make a game into 60 fps, can read [this document](https://spector.babylonjs.com/#thirdpartydemossection).\n\n- [Royal Skies](https://www.youtube.com/watch?v=f6vgICNCVxQ&list=PLZpDYt0cyiuu-sxJKbuYh8OjtgmXNacCV&ab_channel=RoyalSkies) provides a series of tutorial about blender 2.8.\n\n- [Grant Abbitt](https://www.youtube.com/user/mediagabbitt) also provides a blender 2.8 course.\n\n- [3D Animation Hub](https://www.youtube.com/watch?v=VvTEovuTCgA&ab_channel=3DAnimationHub) provides a series of making 3D player animation.\n\n- [Jayanam](https://www.youtube.com/watch?v=0PkBq9NW7K8&ab_channel=Jayanam) also provides an animation tutorial.\n\n- [MortMort](https://www.youtube.com/watch?v=uOyiZaioX1U&t=19s&ab_channel=MortMort) provides a pixel art tutorial.\n\nThe following links are about game resources.\n\n- [open game art](https://opengameart.org/), including models and audios.\n\n- [freesound](https://freesound.org/), provides free audios.\n\n- [earslap](https://earslap.com/page/circuli.html), provides music game ideas.\n\n- [a nice 3D Chinese art](https://sketchfab.com/3d-models/the-vast-land-733b802f5a4743ef99ad574279d49920)\n\n## Ubuntu\n\nThis week I went back from PC to linux, because the weather is getting hotter, causing my PC to overheat.\n\nImmersedVR is compitable with Linux, just need to install libfuse2, and \n[v4l2loopback-dkms](https://installati.one/install-v4l2loopback-dkms-ubuntu-20-04/) for virtual camera. This is an [article](https://linux.how2shout.com/how-to-create-desktop-shortcut-for-an-appimage/) about add AppImage pacakge to favorite bar.\n\nThe input method, iBus, needs restart after installed.\n\nCan use piper to config logitech mouse.\n\nKeep using Xorg as display server is a good choice, most Apps, like xrandr are based on Xorg. Only Waydroid is not compitable with Xorg.\n\n## ultra-copier\n\nWhen copying files, some devices can be overheat.[ultra-copier](https://ultracopier.herman-brule.com/) can be used as a stable and fast copy tool.\n\n## Text to speech\n\nI'm using [OtterAI](https://otter.ai/home) to transpile podcasts to content. Using these scripts to practice English.\n\n## Nx\n\nI'm starting learning [react-babylon](https://brianzinn.github.io/react-babylonjs/) in a deep dive. Using Nx as a monorepo utility. I suggest this [tutorial](https://nx.dev/core-tutorial/01-create-blog).\n\nkeep remembering to add `package.json` and a name a version to the lib.\n\n## JS animation library\n\n[react spring](https://www.react-spring.dev/) supports react and threejs.\n\n[framer motion](https://www.framer.com/motion/) seems only support react.\n\nBabylon has it's own animation system.\n\n## ORM\n\n[Drizzle](https://orm.drizzle.team/), suggested by Syntax FM. Haven't tried.","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/07/08/27th-week-AUS-462.md","slug":"2023/07/08/27th-week-aus-462","body":"\n# 27th week: AUS 462\n\nThis week I applied AUS 462 visa, wish I can get it soon.\n\n## React-BabylonJS\n\nI finished the basic part. In the tutorial, position in terrain is no longer supported. And EngineView, which renders viewport on different canvases, is not supported. Snippet is a way to call shader from babylon server, but I don't want to use that.\n\n## VSCode extension\n\n[Import Cost](https://citw.medium.com/keep-your-bundle-size-under-control-with-import-cost-vscode-extension-5d476b3c5a76#:~:text=Enter%20Import-Cost%20Import-Cost%20is%20a%20Visual%20Studio%20Code,for%20that%2C%20some%20of%20them%20are%20stated%20above.) calculates the size of imported packages.\n\n## Some git errors\n\nI bumped into a git error, some corrupted files in .git/objects. A simple way is just delete them.\n\n```shell\nfind .git/objects/ -size 0 -delete\n```\n\nDangling objects are tricky, [this](https://mirrors.edge.kernel.org/pub/software/scm/git/docs/user-manual.html#recovering-from-repository-corruption) is the official solution.\n\n## SwiftUI\n\nI learnt some basic knowledge about SwiftUI. Still don't know why people say it's elegant.\n\n## CSS3DRenderer\n\nThreeJS can use CSS as it's renderer. These are some examples:\n\n- [3D Youtube](https://threejs.org/examples/#css3d_youtube)\n- [CSS sprites](https://threejs.org/examples/?q=CSS#css3d_sprites)\n\n## Video Tutorials\n\nFinished [The Net Ninja's Flutter Tutorial](https://www.youtube.com/watch?v=1ukSR1GRtMU&list=PL4cUxeGkcC9jLYyp2Aoh6hcWuxFDX6PBJ&pp=iAQB)\n\nWatching [The Net Ninja's GraphQL Tutorial](https://www.youtube.com/watch?v=xMCnDesBggM&list=PL4cUxeGkcC9gUxtblNUahcsg0WLxmrK_y&pp=iAQB) now.\n\nplaning to watch [TensorFlow 2.0 Course in Free Code Campus](https://www.youtube.com/watch?v=tPYj3fFJGjk&t=114s)\n\nand [Rafa Tec XR's web XR tutorial](https://www.youtube.com/watch?v=uJ2ikVUXKBw) is in planing too.","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/07/15/28th-week-MRTK3-on-web.md","slug":"2023/07/15/28th-week-mrtk3-on-web","body":"# 28th week: MRTK3 on web\n\n## Tensorflow\n\nThis week I tried to reuse tensorflow using [the MNIST tutorial](https://codelabs.developers.google.com/codelabs/tfjs-training-classfication). It is much useful than years before. So I'm starting to watch this [freeCodeCamp](https://www.youtube.com/watch?v=tPYj3fFJGjk&t=4090s&pp=ygUTdGVuc29yZmxvdyB0dXRvcmlhbA%3D%3D) to get a structured knowledge. It will be done this week.\n\n## Web3\n\nI don't know too much about web3, just watched [fireship's video](https://www.youtube.com/watch?v=meTpMP0J5E8&pp=ygUMZmlyZXNoaXAgTkZU). There's [a series of videos](https://www.youtube.com/watch?v=9SzWQq2ejZ4&list=PL2fGiugrNooj0nya96-BEGnQAzZnKy04m&ab_channel=01Coder) about solidity. Maybe I will use it one day.\n\n- [NFT Art Generator](https://nft-generator.art/) is a tool to generate NFT art.\n- [Waffle](https://ethereum-waffle.readthedocs.io/en/latest/) is a testing framework for solidity.\n- [Pinata](https://www.pinata.cloud/) puts your NFT on IPFS. This is a [tutorial](https://blog.ipfs.tech/2021-07-15-building-web-3-pinata/).\n- [HardHat](https://hardhat.org/) is a development environment for Ethereum. It's a replacement of Truffle.Building a bridge between JS and solidity.\n- [chain-link](https://chain.link/) is a decentralized oracle network.\n- [OpenZeppelin](https://www.openzeppelin.com/) is a library for smart contract development.\n\n## Tailwind\n\nTailwind is a utility first CSS framework. But the templates on the site are not free. These are some free component templates:\n\n- [float UI](https://www.floatui.com/components)\n- [a17t](https://a17t.miles.land/)\n- [ko Meta](https://kitwind.io/products/kometa)\n- [headless UI](https://headlessui.com/)\n- [tailwind UI Kit](https://tailwinduikit.com/components)\n- [daisy UI](https://daisyui.com/)\n- [tailwind kit](https://www.tailwind-kit.com/)\n- [tailwind Starter Kit](https://www.creative-tim.com/learning-lab/tailwind-starter-kit/presentation)\n- [kutty](https://kutty.netlify.app/)\n- [post src](https://postsrc.com/components)\n- [tail blocks](https://tailblocks.cc/)\n- [hyper UI](https://www.hyperui.dev/)\n- [meraki UI](https://merakiui.com/)\n- [mamba UI](https://mambaui.com/)\n\nThese are page templates:\n\n- [tailwind tool box](https://www.tailwindtoolbox.com/)\n- [CUIP](https://codepen.io/cruip)\n- [tailwind awesome](https://www.tailwindawesome.com/)\n- [tailwind components](https://tailwindcomponents.com/)\n- [tReact](https://treact.owaiskhan.me/)\n- [unlight tailwind components](https://github.com/unlight/tailwind-components)\n\n## FBX files\n\nsome FBX files can not be read on Windows 3D viewer. Can use [Autodesk FBX Review](https://www.autodesk.com/products/fbx/fbx-review) to check the file.\n\nThese are some free FBX [emojis](https://3moji.org/)\n\n## UI for webXR\n\nUI on canvas is quiet different from UI on DOM. Babylon.js has it's own UI toolkit both 2D and 3D. And one can make the UI using the [UI editor](https://gui.babylonjs.com/). [Space.js](https://github.com/alienkitty/space.js) is a 3rd party UI for Three.js.\n\nBabylon.js treats UI as materials, so I can's add Gizmo on it. But I can attach it to a mesh. \n\nWith the SVG's foreignObject tag, I can insert an HTML into SVG. This is how [html-to-image](https://github.com/bubkoo/html-to-image#readme) works. I think I can implement an HTML Control for babylon.js. \n\nfurthermore, I can use [height-map](https://doc.babylonjs.com/features/featuresDeepDive/mesh/creation/set/height_map) to add 3D effect for a 2D GUI.\n\n## Babylon.js\n\nBabylon.js now supports [MRTK3](https://doc.babylonjs.com/features/featuresDeepDive/gui/mrtk) on web. But right now, only a button is supported. The full MRTK3 components can be found in [github](https://github.com/microsoft/MixedRealityToolkit-Unity/tree/mrtk3). checkout the mrtk3 branch. You can build it on Unity.\n\nBabylon.js has an [editor](https://editor.babylonjs.com/), Three.js also has [one](https://rogueengine.io/download). I have to say babylon.js is better. But to integrate it with react-babylon still need some work. It exports scene as a `.babylon` [file](https://doc.babylonjs.com/setup/support/.babylonFileFormat). I am trying to import it to react-babylon.\n\nSnippets is a babylon material server. You can build your own with [this](https://doc.babylonjs.com/toolsAndResources/thePlayground/yourOwnSnippetServer). Also you can use [node-editor](https://nme.babylonjs.com/) to generate one.\n\n## WebXR\n\nI found [a tutorial of WebXR](https://medium.com/youngsphere/1-introduction-to-webxr-53c293b4bfb5) on medium. I will check it out next week.\n\n## Swipe keyboard\n\nThis is a [document](\nhttps://www.fleksy.com/blog/how-swipe-typing-works/) about how swipe keyboard works.\n\n## What to be done\n\n- Finish the tensorflow tutorial. [freeCodeCamp](https://www.youtube.com/watch?v=tPYj3fFJGjk&t=4090s&pp=ygUTdGVuc29yZmxvdyB0dXRvcmlhbA%3D%3D)\n- Integrate babylon.js editor with react-babylon.\n- make an HTML Control for babylon.js.\n- learn [react-babylon tutorial](https://brianzinn.github.io/react-babylonjs/)\n- learn [rust on android](https://google.github.io/comprehensive-rust/)\n- try to make snippets(not emergent).","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/07/22/29th-week-geospatial.md","slug":"2023/07/22/29th-week-geospatial","body":"# 29th week: Google Geo-Spatial\n\n## Google Geo-Spatial\n\nFirstly, I didn't get the permission, this API is not opened for mainland China. I need a abroad VISA card.\n\nThis is [a slideshow](https://www.docswell.com/s/FumiyaHr/56YG27-2023-05-18-221638#p6) to introduce it.\n\nThis is [the official document](https://developers.google.com/ar/develop/geospatial). [This](https://developers.google.com/ar/develop/unity-arf/geospatial/streetscape-geometry) is about using google geo-spatial on unity. It is based on [AR Foundation](https://developers.google.com/ar/develop/unity-arf/getting-started-ar-foundation).\n\nThese are some [samples](https://github.com/google-ar/arcore-unity-extensions/tree/master/Samples~).\n\nThis is an [ARCore official page](https://developers.google.com/ar/geospatialcreator).\n\n[Earth Studio](https://www.google.com/earth/studio/) uses google geo-spatial to build Video assets.\n\nThis is a google's WebXR [tutorial](https://developers.google.com/ar/develop/webxr/hello-webxr), I'll check it out this week.\n\nAlso, here is some webXR [tutorial](https://doc.babylonjs.com/features/featuresDeepDive/webXR/WebXRSelectedFeatures\n) in [babylon.js](https://doc.babylonjs.com/features/featuresDeepDive/webXR/webXRARFeatures).\n\n## use Babylon editor and react-babylon.js\n\nThe Babylon editor uses CANNON as physical engine, before importing, I need to inject it.\n\n``` js\nBabylonFileLoaderConfiguration.LoaderInjectedPhysicsEngine = CANNON;\n```\n\nAnd the asset should be relatively put in the `root_dir`.\n\n```js\nSceneLoader.AppendAsync(`${root_dir}`, \"scene.babylon\", scene);\n```\n\n## OpenFaas\n\nThis is a new world to me, I found an ebook, [Kubernetes 中文指南](https://jimmysong.io/kubernetes-handbook/). I don't have time to read it yet.\n\n## GASP\n\n[GASP](https://greensock.com/gsap/) is an animation library, I heard from [@WawaSensei](https://www.youtube.com/@WawaSensei). He's got some nice shader [tutorials](https://www.youtube.com/watch?v=e2ntx-fyXaE) I want to learn.\n\n## Face tracking on WebXR\n\nCurrently, Face tracking is not supported in WebXR. This is a 3rd party library [mind-AR.js](https://medium.com/web-augmented-reality-development/webar-face-tracking-with-10-lines-of-code-18c5f24a0e38) that supports it.\n\n## Swift on Linux\n\nThis is a page about [swift on linux](http://swift-linux.refi64.com/en/latest/index.html). It seems only [Vapor](https://vapor.codes/) is still alive now (as a web server).\n\n## 3D LUT File\n\nLUT file(look up table) is a file that contains color correction data. It is used in video editing. [Adobe Premiere](https://www.makeuseof.com/adobe-premiere-how-to-export-lut/) can export it.\n\n## Video with depth\n\nThis is a [script](https://github.com/jankais3r/Video-Depthify) in Codelab to make depthify video. I can also use [stable diffusion](https://github.com/thygate/stable-diffusion-webui-depthmap-script) to make one.\n\n## Lottie\n\n[Lottie](https://lottiefiles.com/featured) is a SVG animation tool. Differences between Lottie and Rive is in this [document](https://rive.app/blog/rive-as-a-lottie-alternative). \n\n## React v18\n\nuseSyncExternalStore is a new react hook in v18. It can be used observe an element outside react environment\n\n```js\nlet data = {w: 0, h: 0};\nconst subscribe = snap => {\n    window.addEventListener('resize', snap);\n    () => window.removeEventListener('resize', snap);\n}\n\nconst snapshot = () => {\n    const w = window.innerWidth;\n    const h = window.innerHeight;\n    if (w !== data.w || h !== data.h) {\n        data = {w, h};\n    }\n    return data\n}\nconst Component = () => {\n    const {w, h} = useSyncExternalStore(subscribe, snapshot);\n}\n```\n\nSuspense is updated to support data fetching.\n\n```js\nlet data = null\nlet promise = null\nconst Suspender = () => {\n    if (data === null) {\n        if (promise === null) {\n            promise = fetch('url').then(res => res.json()).then(res => {\n                data = res;\n                promise = null;\n            });\n        }\n        throw promise;\n    }\n    return <div>{data}</div>\n}\n\nconst Component = () => {\n    return (\n        <Suspense fallback={<div>loading</div>}>\n            <Suspender />\n        </Suspense>\n    )\n}\n```\n\n## react-babylon.js\n\nI've finished the examples in [react-babylon.js](https://brianzinn.github.io/react-babylonjs/). I will try webXR next week. Still, there are some stuff I don't understand. Like [pbrMaterial](https://www.youtube.com/watch?v=CRg8P1Af1M0&ab_channel=Babylonjs), reflectionFresnelParameters, arcRotateCamera, and mesh-lookat.\n\n## Next week\n\nI'll try Google's webXR tutorial, and the babylon one.\n\nI'll continue the tensorflow tutorial. And the rust on android one.\n\nI'll try to compare Remix and Next.js.","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/07/30/30th-week-shader.md","slug":"2023/07/30/30th-week-shader","body":"# 30th week shader\n\n## CSS in JS is back\n\n[Kuma UI](https://www.kuma-ui.com/) is a compiler time CSS in JS library. It is a better alternative to Tailwind CSS. It can be used with [Panda CSS](https://panda-css.com/)\n\n## NextJS & Remix\n\nCompared NextJS and Remix. Remix is fully server rendered.\n\n## Use Preact with react-babylonjs\n\n[preact-reconciler](https://github.com/CodyJasonBennett/preact-reconciler) is an adapter for Preact to work with react-babylonjs or R3F.\n\n## WebXR\n\n[Mixed Reality Resources](https://github.com/Yonet/MixedRealityResources) collects the datas about XR resources. Can download some library on it.\n\nThis is an XR input [playground](https://playground.babylonjs.com/#X7Y4H8) for BabylonJS.\n\nUsing WebXR on phone is hard. It is only supported on Chrome Canary. It is not working on Safari even opened the experimental features.\n\nTesting the web on mobile need a cable connect. But there is a JS console [Eruda](https://github.com/liriliri/eruda) can help.\n\nAnother choice is to use [Babylon React Native](https://github.com/BabylonJS/BabylonReactNativeSample), which uses React Native as a bridge to use ARcore or ARkit. Sadly Oculus dose not support ARcore. However, it seems Oculus uses React Native on it's [Home Launcher](https://reactnative.dev/blog/2021/08/26/many-platform-vision). And they are working on supporting Vision OS.\n\n[This](https://www.callstack.com/campaigns/download-the-ultimate-guide-to-react-native-optimization) is a book about React Native.\n\n## BabylonJS\n\nTo make an orthographic camera in BabylonJS, can refer to this [link](https://forum.babylonjs.com/t/how-to-use-orthographic-view-in/29733).\n\n[CYOS](https://cyos.babylonjs.com/) is a BabylonJS shader editor.\n\n[BabylonJS Viewer](https://doc.babylonjs.com/features/featuresDeepDive/babylonViewer) uses web component to build a 3D viewer.\n\nCan use [Poly Pizza](https://poly.pizza/) to download mesh models.\n\nCan download free shaders on [ShaderToy](https://www.shadertoy.com/).\n\n## AI generated SVGs\n\nUsing [Craft AI](https://www.recraft.ai/), can make AI generated SVGs for free. [This](https://www.nan.fyi/) is a blog about SVG paths, maintainer is a vercel employee.\n\n## Crash an SVG path on WebGL\n\n[This](https://css-tricks.com/rendering-svg-paths-in-webgl/) is a threeJS example to render SVG path on WebGL with shaders. I am trying to make it work on BabylonJS and learn how to write shaders.\n\n[This](https://www.youtube.com/watch?v=oKbCaj1J6EI&ab_channel=Visionary3D) is a crash course about shaders.\n\nTo make vertex change without shader, can refer to this [link](https://doc.babylonjs.com/features/featuresDeepDive/mesh/creation/custom/updatingVertices).\n\nAbout how to use a node editor can refer to [this](https://doc.babylonjs.com/features/featuresDeepDive/materials/node_material/nodeMaterial)\n\nThis is an [example](https://playground.babylonjs.com/#026IT4#1) to send attribute data to shader using instanceBuffer.\n\nThis is a nice [tutorial](https://www.smashingmagazine.com/2016/11/building-shaders-with-babylon-js/) about how to write shaders in BabylonJS.\n\n[This](https://playground.babylonjs.com/#1OH09K#1672) is a firework effect using shader.\n\n[A fancy Babylon Effect](https://codepen.io/daledesilva/pen/ZEmrrYX) I want to figure out.\n\n## run JS in compiling time\n\nSince React Server Component runs component on server, I was thinking to run a component on compiling time. [This plugin](https://github.com/egoist/vite-plugin-compile-time) can do that.\n\nAlso there is [a plugin](https://github.com/unjs/unplugin) to help build a universal plugin for Vite, Rollup, Webpack and more.\n\n","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/08/06/31st-Goodbye-WHV-NZ.md","slug":"2023/08/06/31st-goodbye-whv-nz","body":"# 31st week: Goodbye WHV NZ\n\nThis week is my last chance to get a NZ WHV visa of my life. I didn't get it, sad.\n\nI wrote a [page](https://codesandbox.io/p/github/gongbaodd/react-babylonjs-svg-mesh/main?layout=%257B%2522sidebarPanel%2522%253A%2522EXPLORER%2522%252C%2522rootPanelGroup%2522%253A%257B%2522direction%2522%253A%2522horizontal%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522id%2522%253A%2522ROOT_LAYOUT%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522clkxtvnml000h3e6xpknv88gp%2522%252C%2522sizes%2522%253A%255B70%252C30%255D%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522EDITOR%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522id%2522%253A%2522clkxtvnmk000c3e6xuug5xz14%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522SHELLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522id%2522%253A%2522clkxtvnmk000g3e6xy3qev2y4%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522DEVTOOLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522id%2522%253A%2522clkxtvnmk000e3e6xyi12qp3g%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%252C%2522sizes%2522%253A%255B50%252C50%255D%257D%252C%2522tabbedPanels%2522%253A%257B%2522clkxtvnmk000c3e6xuug5xz14%2522%253A%257B%2522id%2522%253A%2522clkxtvnmk000c3e6xuug5xz14%2522%252C%2522activeTabId%2522%253A%2522clkxtycgk01au3e6xpnmhmt17%2522%252C%2522tabs%2522%253A%255B%257B%2522type%2522%253A%2522FILE%2522%252C%2522filepath%2522%253A%2522%252Fsrc%252FComponents%252FCrash.tsx%2522%252C%2522id%2522%253A%2522clkxtycgk01au3e6xpnmhmt17%2522%252C%2522mode%2522%253A%2522temporary%2522%257D%255D%257D%252C%2522clkxtvnmk000e3e6xyi12qp3g%2522%253A%257B%2522id%2522%253A%2522clkxtvnmk000e3e6xyi12qp3g%2522%252C%2522activeTabId%2522%253A%2522clkxtwh2h00y43e6xkxghz19s%2522%252C%2522tabs%2522%253A%255B%257B%2522type%2522%253A%2522TASK_PORT%2522%252C%2522taskId%2522%253A%2522dev%2522%252C%2522port%2522%253A5173%252C%2522id%2522%253A%2522clkxtwh2h00y43e6xkxghz19s%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522path%2522%253A%2522%252F%2522%257D%255D%257D%252C%2522clkxtvnmk000g3e6xy3qev2y4%2522%253A%257B%2522id%2522%253A%2522clkxtvnmk000g3e6xy3qev2y4%2522%252C%2522activeTabId%2522%253A%2522clkxtwdyl00ma3e6xcircdgox%2522%252C%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clkxtvnmk000f3e6xvjfw6yvv%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522TERMINAL%2522%252C%2522shellId%2522%253A%2522clkxtvnv5000nhgi2h6knbve8%2522%257D%252C%257B%2522type%2522%253A%2522TASK_LOG%2522%252C%2522taskId%2522%253A%2522dev%2522%252C%2522id%2522%253A%2522clkxtwdyl00ma3e6xcircdgox%2522%252C%2522mode%2522%253A%2522permanent%2522%257D%255D%257D%257D%252C%2522showDevtools%2522%253Atrue%252C%2522showShells%2522%253Atrue%252C%2522showSidebar%2522%253Atrue%252C%2522sidebarPanelSize%2522%253A15%257D) as a meme about Twitter changing its logo into X. Which was as a tutorial to learn shader in babylonjs.\n\nraczzalan.webgl-glsl-editor is an extension for vscode to write glsl without a language server.\n\nUsing a shader material is simple, just pass ther vertex and fragments as a parameter.\n\n```jsx\n        <sphere name=\"fireworks\" ref={setSphere}>\n            <shaderMaterial name=\"fireworks-mat\"\n                ref={setMat}\n                shaderPath={{vertexSource, fragmentSource}}\n                options={{\n                    attributes: [\"position\", \"normal\", \"uv\"],\n                    uniforms: [\"worldViewProjection\", \"time\"],\n                    needAlphaBlending: true,\n                }}\n                backFaceCulling={false}\n            />\n        </sphere>\n```\n\nthe attributes and uniforms are the variables that can be used in the shader. There are some varaibles that are automatically passed to the shader, like `worldViewProjection` and `time`. They are documented in [threejs](https://threejs.org/docs/#api/en/materials/ShaderMaterial) and [babylonjs](https://doc.babylonjs.com/features/featuresDeepDive/materials/shaders/introToShaders).\n\nattribute is the data passed before compile and uniforms can be changed during rendering.\n\nThere are two functions to send attributes. `mesh.setVerticesBuffer` and `mesh.registerInstancedBuffer`. The first one is for the data that is the same for every vertex, this is a simple [example](https://www.babylonjs-playground.com/#QCLQFN#39), like the position of the vertex. The second one is for the data that is different for every instance, This is the [example](https://playground.babylonjs.com/#8L50Q3#203).\n\n\n```js\nconst centroidBuffer = new Buffer(engine, centroid, false, 3)\nconst centroidVBuffer = centroidBuffer.createVertexBuffer(\"center\", 0, 3)\nmesh.setVerticesBuffer(centroidVBuffer)\n\nmesh.registerInstancedBuffer(\"direction\", 3)\nmesh.instancedBuffers.direction = directionBuffer\n```\n\nsending uniforms is simple. Like `material.setFloat(\"time\", time)`. Sadly the animation in babylon has not support shader material.\n\nNext week, I will try to learn how to use the node editor with [this video](https://www.youtube.com/watch?v=K0PXzE1hJXg&ab_channel=Babylonjs).","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/08/12/32nd-Autumn-now.md","slug":"2023/08/12/32nd-autumn-now","body":"# The 32nd week: It's autumn now\n\n## IELTS\n\nI started using IELTS premium this week.\n\n## Babylon.js\n\nThis week I found out that react-babylon.js doesn't support tree shaking, moreover, babylon.js is almost 4MB(1MB gzipped), it's almost 4 times bigger than three.js. Well, as a visual engine, size is not a big issue. But I started to check some [R3F examples](https://docs.pmnd.rs/react-three-fiber/getting-started/examples) now.\n\nI tried Babylon.js' node editor. [This](https://nme.babylonjs.com/#7FHE8M#1) is a toon shader inspired by [this article](https://roystan.net/articles/toon-shader/).\n\nRender a HTML to Canvas, it's better to have a height map. Can use [applyDisplacementMap](https://www.babylonjs-playground.com/#WUYDVT#6).\n\n## XR\n\nTikTok has an App EffectHome(橡塑 in China). Snap AR got a lot interesting filters. \n\nARkit supports [hand gesture](https://developer.apple.com/videos/play/wwdc2020/10653/) already. This is [Dilmer's tutorial](https://www.youtube.com/watch?v=toAb_q1R_jY&ab_channel=DilmerValecillos) about hand tracking using AR Foundation. [This](https://www.youtube.com/watch?v=FWyTf3USDCQ&ab_channel=samyam) is a beginner tutorial about AR Foundation.\n\n## Three.js\n\n[This](https://www.youtube.com/watch?v=3jgAcUKTyKw&ab_channel=CJGammon) is a video using both spline and three.js to create a website.\n\n[Triplex](https://triplex.dev/) is an editor for three.js. Kind like babylon inspector.\n\n## Stable Diffusion\n\n[Fantasia 3D](https://github.com/Gorilla-Lab-SCUT/Fantasia3D) and [Dream Fusion](https://www.youtube.com/watch?v=dIgDbBTztUM&ab_channel=NerdyRodent) are tools to build 3D assets.\n\n[Dream shaper](https://www.youtube.com/watch?v=IntRn96C4l4&ab_channel=Technonator) is to build special QR Code.\n\n## CSS\n\n[现代 CSS 你知道多少](https://w3cplus.medium.com/%E7%8E%B0%E4%BB%A3-css-%E4%BD%A0%E7%9F%A5%E9%81%93%E5%A4%9A%E5%B0%91-8f21c3aea806)\n\n## React\n\n[React Graph Library](https://www.react-graph-gallery.com/) uses react and D3 to draw graphs.\n\n[shadcn](https://ui.shadcn.com/) is a UI library based on Radix.\n\n## Favicon\n\n[A blog](https://evilmartians.com/chronicles/how-to-favicon-in-2021-six-files-that-fit-most-needs) about how to add favicon to a website in 2023.\n\n## WSL\n\nI can't call vscode from WSL. Because I configured systemd. [This issue](https://github.com/microsoft/WSL/issues/8952) has the solution.\n\n## ML\n\nHappen to know HuggingFace's new ML framework [candle](https://github.com/huggingface/candle)\n\nGoogle brings visual block and media pipe as tools for tensorflow.","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/08/20/33rd-ViewTransition.md","slug":"2023/08/20/33rd-viewtransition","body":"# The 33rd week: View Transition\n\n## WebComponent\n\nlit is a good [web component](https://www.youtube.com/watch?v=2I7uX8m0Ta0&ab_channel=WebDevSimplified) library. To use it in typescript need [decorators](https://lit.dev/docs/components/decorators/#decorators-typescript).\n\n## View Transition\n\nAstro.js supports [view transition](https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API). It is a good way to make a block element animate between pages.\n\n## 3D\n\n[This](https://d.design) is a 3D modeling website by Alibaba.\n\n[ogl](https://github.com/oframe/ogl) is a small 3D rendering library.\n\n## Germany \n\n[This](daad.de) website provides information about studying in Germany.\n\n## Thailand\n\n[Duke language school](https://dukelanguage.com/english-calendar/) in Thailand is a good place to learn Thai.","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/08/26/34th-week.md","slug":"2023/08/26/34th-week","body":"\n# The 34th week\n\n## public social fund\n\n[This](http://bj.bendibao.com/zffw/2020128/285085.shtm) is how to cash out the money from the public social fund. [This](https://map.beijing.gov.cn/gjj/tag?tagId=60cb3fa7bd15ba1c65342fdd) is the map.\n\n## A HK SIM Card\n\n[clubsim](https://www.clubsim.com.hk/zh/gameeasy)\n\n## A HK bank account\n\nThese youtube videos are helpful:\n\n- https://www.youtube.com/watch?v=ee8H6EpJUF4&ab_channel=Ken%27sFireNote\n- https://www.youtube.com/watch?v=Dwk2ZxkCeKU&ab_channel=Beitong%E5%8C%97%E5%90%8C\n- https://www.youtube.com/watch?v=kqlen7ISaXM&ab_channel=%E7%A5%A5%E5%93%A5%E6%8A%95%E8%B5%84\n- https://www.youtube.com/watch?v=DhliMZLLyUw&t=2s&ab_channel=%E6%95%B0%E5%AD%97%E7%89%A7%E6%B0%91LC\n\ntry to apply in 太子 or 德辅道中\n","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/09/04/35th-week.md","slug":"2023/09/04/35th-week","body":"\n# The 35th week\n\nkeep everything for IELTS test","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/09/24/38th-week-opencore.md","slug":"2023/09/24/38th-week-opencore","body":"\n# 38th Week - OpenCore\n\n## IELTS\n\nGot a 7 in IELTS test! Hooooray!\n\n## OpenCore\n\nTwo weeks ago, I bought a new laptop, ASUS Pro Art 16. Thus, I decide to sell my old one, which is Dell Inspiron 7391 2in1. Sadly, even as cheap as 2k RMB, it picks no one's interest. So I decide to keep it as a hackintosh machine. And yes, it was sold out in the next day.\n\nMaking a laptop into a hackintosh is not as easy as an ITX. I can not choose the hardware. Gladly, Dell has a good reputation on Linux support. I found a lot configurations on github. However, most of them doesn't work as I expected. So I used almost one week to learn how to configure a opencore config file.\n\n### OCAuxiliaryTool\n\nThis tool is a must-have for hackintosh. Earlier in this year, I have to config opencore with [OpenCore Configurator](https://mackie100projects.altervista.org/download-opencore-configurator/), one of its flaw is that it is a macOS only App. But OCAT is a cross-platform tool, which is very convenient for me.\n\n### Dortania's Guide\n\n[This](https://dortania.github.io/OpenCore-Install-Guide/) is the most important guide for hackintosh. It is very detailed and easy to understand. Beleive me, all the errors I met, they were all finally went to this guide.\n\nHowever, since I'm a Chinese, I also checked [国光](https://apple.sqlsec.com/) and [黑果小兵](https://blog.daliansky.net/) for more information.\n\n### My Config\n\nThis is my [config.plist](https://github.com/gongbaodd/DELL-Inspiron-7391-Hackintosh-EFI), hint it is only available for Ventura. For other versions, you may need to change the Itlwm.\n\n### Hide entries\n\nTo hide some entry, you need to add \".contentVisibility\" to the Boot folder. Check [this](https://www.insanelymac.com/forum/topic/355227-how-to-opencore-087-088-differences/).\n\n","collection":"blog","data":{"type":"post","category":"plan","tag":["hackintosh","opencore","IELTS","OCAuxiliaryTool"]}},{"id":"2023/09/30/39th-week-Apple-Watch.md","slug":"2023/09/30/39th-week-apple-watch","body":"\n# 39th Week - Apple Watch\n\n## Apple Watch\n\nI bought an Apple Watch SE2. Yes, it's been a long time since I used a real smart watch. I used pebble time for a long time. It was still my top 1 smart watch. I want to have a round watch, like Pixel Watch, but it doesn't support iOS. In iOS, the Apple Watch is the only choice. This year, Apple released Watch OS 10, which changed it's user experience. Users can freely switch app view, the notification view and home with a swipe. I like it very much. I have a small wrist, so I choose the 40mm version. Thank god I chose this one, I can't imagine how big an ultra version is.\n\n## Sonoma on VMware\n\nSince I have sold my hackintosh, I have to build a Mac on VMware. I found the mac in VM runs frequently on Nobara OS. I bumped to a kernel problem, fixed following the instruction in the [forum](https://communities.vmware.com/t5/Workstation-2023-Tech-Preview/Linux-Kernel-6-5-rc-vmmon-compile-fails/td-p/2981003). Also a `Could not open /dev/vmmon: No such file or directory.` issue, found solution [here](https://askubuntu.com/questions/1348250/skipping-btf-generation-xxx-due-to-unavailability-of-vmlinux-on-ubuntu-21-04).\n\nAfter Ventura, the Mac in the VM can not connect the network, solution is [here](https://communities.vmware.com/t5/VMware-Fusion-Discussions/macOS-Ventura-guest-has-no-network-connection/td-p/2912933).\n\n## Next week\n\nI will plan my trip to Hong Kong. Finish my CV and plan to Thailand.","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/10/07/40th-week-Trip.md","slug":"2023/10/07/40th-week-trip","body":"# 40th Week - Trip\n\nprepared my trip.","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/10/20/42nd-week-Hong-Kong.md","slug":"2023/10/20/42nd-week-hong-kong","body":"\n# 42nd Week - Trip to Hong Kong & Macow\n\n## Bankcards\n\nI applied HSBC, BoCHK, ZA Bank, Livi Bank, And Bank and Airstar Bank. I didn't get a card from HSBC. The others are fine.\n\n## Meta Quest 3\n\nI bought Meta quest 3 in WanChai. The new mix reality feature is awesome.\n\n## Macow Museum\n\nLearned to be tolerance from a mile budda sculpture. There is a nice game in the museum.\n\n## Hong Kong Museum of Culture\n\nA show about Jin Yong is fun to watch.\n\n","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/10/29/43rd-week-back-home.md","slug":"2023/10/29/43rd-week-back-home","body":"\n# 43rd Week - Back Home\n\nGot back from Hong Kong, Sold my old Quest 2. My bank card is locked, I will find out why next week. I also need to rebuild my website next week.","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/11/04/44th-week-website.md","slug":"2023/11/04/44th-week-website","body":"\n# Week 44th: still work on the website\n\nGot my HSBC card, it seem a PIN code still on the way.\n\nInstalled several \"mainland China Only\" browsers on Hyper-V, to install [windows XP](https://superuser.com/questions/1230652/get-official-windows-xp-virtual-machine-for-hyper-v) or windows 7 in a virtual machine, it's better to use Hyper-V. For network, just use the physical one.\n\nUsing Chat GPT to format some of my old posts, got some experience on it. Firstly, I want GPT to finnish my whole work, it did not work well. THen I tried to separate it into multiple parts, it worked well.\n\nThis week, Clash for windows was deleted from github.com, then clash core was deleted, too. I used new bing to make two sad blue cat to memorize it.\n\nMy home spinning bike was broken, I fixed it poorly, sad.","collection":"blog","data":{"type":"post","category":"plan","tag":["browser","Hyper-V","GPT","Clash","spinning bike"]}},{"id":"2023/11/11/45th-week-double-11s.md","slug":"2023/11/11/45th-week-double-11s","body":"\n# Week 45: 2023年双十一\n\n## What I bought\n\nBougt a GaN charger, because I do not have enough type-c charger. \n\n## Astro\n\nTurns out there are a lot strict rules in astro, for instance, [RSS feed rules](https://www.npmjs.com/package/@astrojs/rss#rssfeeditem). The web world is becoming more and more strict. I kind like how it goes. \n\n### Katex on Astro\n\n[This blog](https://ileumas.com/writing/2022/03/astro-math-katex/) shares the config to use katex on astro. The latest version is not correct, should use the correct `remark-math` package for `remark`.\n\n## Remark\n\nBy reading [Awesome Remark](https://github.com/remarkjs/awesome-remark), found some interesting plugins.\n\n\n## Apple Watch & React Native\n\nJust a little research, here is the [link](https://www.coditation.com/blog/guide-101-apple-watch-app-development-and-integration-with-react-native?ssp=1&darkschemeovr=1&setlang=en-US&safesearch=moderate).\n\n## Proxmox\n\nProxmox is a VM that can share the GPU with the host. Sadly, it could only work as a server, meaning that it need at least two machines.\n\n## Favicons\n\n[Real favicon generator](https://realfavicongenerator.net/) packs a zip for all icons work for web and mobile.\n\n## Tailwind\n\nThis is a nice [cheatsheet](https://tailwindcomponents.com/cheatsheet/) for tailwind CSS.\n\n## Share Windows fonts for WSL\n\n[This](https://x410.dev/cookbook/wsl/sharing-windows-fonts-with-wsl/) is a workable solution. Run `sudo fc-cache -r -v` to make it work, sometimes WSL need to restart.\n","collection":"blog","data":{"type":"post","category":"plan","tag":["GaN charger","Astro","Katex","Remark","Apple Watch","Proxmox","Favicons","Tailwind","WSL","Fonts","React Native"]}}]}