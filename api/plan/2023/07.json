{"posts":[{"id":"2023/07/01/26tn-week-Using-Ubuntu.md","slug":"2023/07/01/26tn-week-using-ubuntu","body":"# 26th week: Using Ubuntu\n\n## Babylon tutorial plan\n\nThis week，I've finished the [babylon tutorial](https://doc.babylonjs.com/guidedLearning/createAGame). Collected a lot courses.\n\n- About using a physical engine, can read [this document](https://doc.babylonjs.com/legacy/physics/usingPhysicsEngine).\n\n- About using HDR image, can read [this document](https://doc.babylonjs.com/features/featuresDeepDive/materials/using/HDREnvironment).\n\n- About playing music, can read [this document](https://doc.babylonjs.com/features/featuresDeepDive/audio/playingSoundsMusic).\n\n- How to make a game into 60 fps, can read [this document](https://spector.babylonjs.com/#thirdpartydemossection).\n\n- [Royal Skies](https://www.youtube.com/watch?v=f6vgICNCVxQ&list=PLZpDYt0cyiuu-sxJKbuYh8OjtgmXNacCV&ab_channel=RoyalSkies) provides a series of tutorial about blender 2.8.\n\n- [Grant Abbitt](https://www.youtube.com/user/mediagabbitt) also provides a blender 2.8 course.\n\n- [3D Animation Hub](https://www.youtube.com/watch?v=VvTEovuTCgA&ab_channel=3DAnimationHub) provides a series of making 3D player animation.\n\n- [Jayanam](https://www.youtube.com/watch?v=0PkBq9NW7K8&ab_channel=Jayanam) also provides an animation tutorial.\n\n- [MortMort](https://www.youtube.com/watch?v=uOyiZaioX1U&t=19s&ab_channel=MortMort) provides a pixel art tutorial.\n\nThe following links are about game resources.\n\n- [open game art](https://opengameart.org/), including models and audios.\n\n- [freesound](https://freesound.org/), provides free audios.\n\n- [earslap](https://earslap.com/page/circuli.html), provides music game ideas.\n\n- [a nice 3D Chinese art](https://sketchfab.com/3d-models/the-vast-land-733b802f5a4743ef99ad574279d49920)\n\n## Ubuntu\n\nThis week I went back from PC to linux, because the weather is getting hotter, causing my PC to overheat.\n\nImmersedVR is compitable with Linux, just need to install libfuse2, and \n[v4l2loopback-dkms](https://installati.one/install-v4l2loopback-dkms-ubuntu-20-04/) for virtual camera. This is an [article](https://linux.how2shout.com/how-to-create-desktop-shortcut-for-an-appimage/) about add AppImage pacakge to favorite bar.\n\nThe input method, iBus, needs restart after installed.\n\nCan use piper to config logitech mouse.\n\nKeep using Xorg as display server is a good choice, most Apps, like xrandr are based on Xorg. Only Waydroid is not compitable with Xorg.\n\n## ultra-copier\n\nWhen copying files, some devices can be overheat.[ultra-copier](https://ultracopier.herman-brule.com/) can be used as a stable and fast copy tool.\n\n## Text to speech\n\nI'm using [OtterAI](https://otter.ai/home) to transpile podcasts to content. Using these scripts to practice English.\n\n## Nx\n\nI'm starting learning [react-babylon](https://brianzinn.github.io/react-babylonjs/) in a deep dive. Using Nx as a monorepo utility. I suggest this [tutorial](https://nx.dev/core-tutorial/01-create-blog).\n\nkeep remembering to add `package.json` and a name a version to the lib.\n\n## JS animation library\n\n[react spring](https://www.react-spring.dev/) supports react and threejs.\n\n[framer motion](https://www.framer.com/motion/) seems only support react.\n\nBabylon has it's own animation system.\n\n## ORM\n\n[Drizzle](https://orm.drizzle.team/), suggested by Syntax FM. Haven't tried.","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/07/08/27th-week-AUS-462.md","slug":"2023/07/08/27th-week-aus-462","body":"\n# 27th week: AUS 462\n\nThis week I applied AUS 462 visa, wish I can get it soon.\n\n## React-BabylonJS\n\nI finished the basic part. In the tutorial, position in terrain is no longer supported. And EngineView, which renders viewport on different canvases, is not supported. Snippet is a way to call shader from babylon server, but I don't want to use that.\n\n## VSCode extension\n\n[Import Cost](https://citw.medium.com/keep-your-bundle-size-under-control-with-import-cost-vscode-extension-5d476b3c5a76#:~:text=Enter%20Import-Cost%20Import-Cost%20is%20a%20Visual%20Studio%20Code,for%20that%2C%20some%20of%20them%20are%20stated%20above.) calculates the size of imported packages.\n\n## Some git errors\n\nI bumped into a git error, some corrupted files in .git/objects. A simple way is just delete them.\n\n```shell\nfind .git/objects/ -size 0 -delete\n```\n\nDangling objects are tricky, [this](https://mirrors.edge.kernel.org/pub/software/scm/git/docs/user-manual.html#recovering-from-repository-corruption) is the official solution.\n\n## SwiftUI\n\nI learnt some basic knowledge about SwiftUI. Still don't know why people say it's elegant.\n\n## CSS3DRenderer\n\nThreeJS can use CSS as it's renderer. These are some examples:\n\n- [3D Youtube](https://threejs.org/examples/#css3d_youtube)\n- [CSS sprites](https://threejs.org/examples/?q=CSS#css3d_sprites)\n\n## Video Tutorials\n\nFinished [The Net Ninja's Flutter Tutorial](https://www.youtube.com/watch?v=1ukSR1GRtMU&list=PL4cUxeGkcC9jLYyp2Aoh6hcWuxFDX6PBJ&pp=iAQB)\n\nWatching [The Net Ninja's GraphQL Tutorial](https://www.youtube.com/watch?v=xMCnDesBggM&list=PL4cUxeGkcC9gUxtblNUahcsg0WLxmrK_y&pp=iAQB) now.\n\nplaning to watch [TensorFlow 2.0 Course in Free Code Campus](https://www.youtube.com/watch?v=tPYj3fFJGjk&t=114s)\n\nand [Rafa Tec XR's web XR tutorial](https://www.youtube.com/watch?v=uJ2ikVUXKBw) is in planing too.","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/07/15/28th-week-MRTK3-on-web.md","slug":"2023/07/15/28th-week-mrtk3-on-web","body":"# 28th week: MRTK3 on web\n\n## Tensorflow\n\nThis week I tried to reuse tensorflow using [the MNIST tutorial](https://codelabs.developers.google.com/codelabs/tfjs-training-classfication). It is much useful than years before. So I'm starting to watch this [freeCodeCamp](https://www.youtube.com/watch?v=tPYj3fFJGjk&t=4090s&pp=ygUTdGVuc29yZmxvdyB0dXRvcmlhbA%3D%3D) to get a structured knowledge. It will be done this week.\n\n## Web3\n\nI don't know too much about web3, just watched [fireship's video](https://www.youtube.com/watch?v=meTpMP0J5E8&pp=ygUMZmlyZXNoaXAgTkZU). There's [a series of videos](https://www.youtube.com/watch?v=9SzWQq2ejZ4&list=PL2fGiugrNooj0nya96-BEGnQAzZnKy04m&ab_channel=01Coder) about solidity. Maybe I will use it one day.\n\n- [NFT Art Generator](https://nft-generator.art/) is a tool to generate NFT art.\n- [Waffle](https://ethereum-waffle.readthedocs.io/en/latest/) is a testing framework for solidity.\n- [Pinata](https://www.pinata.cloud/) puts your NFT on IPFS. This is a [tutorial](https://blog.ipfs.tech/2021-07-15-building-web-3-pinata/).\n- [HardHat](https://hardhat.org/) is a development environment for Ethereum. It's a replacement of Truffle.Building a bridge between JS and solidity.\n- [chain-link](https://chain.link/) is a decentralized oracle network.\n- [OpenZeppelin](https://www.openzeppelin.com/) is a library for smart contract development.\n\n## Tailwind\n\nTailwind is a utility first CSS framework. But the templates on the site are not free. These are some free component templates:\n\n- [float UI](https://www.floatui.com/components)\n- [a17t](https://a17t.miles.land/)\n- [ko Meta](https://kitwind.io/products/kometa)\n- [headless UI](https://headlessui.com/)\n- [tailwind UI Kit](https://tailwinduikit.com/components)\n- [daisy UI](https://daisyui.com/)\n- [tailwind kit](https://www.tailwind-kit.com/)\n- [tailwind Starter Kit](https://www.creative-tim.com/learning-lab/tailwind-starter-kit/presentation)\n- [kutty](https://kutty.netlify.app/)\n- [post src](https://postsrc.com/components)\n- [tail blocks](https://tailblocks.cc/)\n- [hyper UI](https://www.hyperui.dev/)\n- [meraki UI](https://merakiui.com/)\n- [mamba UI](https://mambaui.com/)\n\nThese are page templates:\n\n- [tailwind tool box](https://www.tailwindtoolbox.com/)\n- [CUIP](https://codepen.io/cruip)\n- [tailwind awesome](https://www.tailwindawesome.com/)\n- [tailwind components](https://tailwindcomponents.com/)\n- [tReact](https://treact.owaiskhan.me/)\n- [unlight tailwind components](https://github.com/unlight/tailwind-components)\n\n## FBX files\n\nsome FBX files can not be read on Windows 3D viewer. Can use [Autodesk FBX Review](https://www.autodesk.com/products/fbx/fbx-review) to check the file.\n\nThese are some free FBX [emojis](https://3moji.org/)\n\n## UI for webXR\n\nUI on canvas is quiet different from UI on DOM. Babylon.js has it's own UI toolkit both 2D and 3D. And one can make the UI using the [UI editor](https://gui.babylonjs.com/). [Space.js](https://github.com/alienkitty/space.js) is a 3rd party UI for Three.js.\n\nBabylon.js treats UI as materials, so I can's add Gizmo on it. But I can attach it to a mesh. \n\nWith the SVG's foreignObject tag, I can insert an HTML into SVG. This is how [html-to-image](https://github.com/bubkoo/html-to-image#readme) works. I think I can implement an HTML Control for babylon.js. \n\nfurthermore, I can use [height-map](https://doc.babylonjs.com/features/featuresDeepDive/mesh/creation/set/height_map) to add 3D effect for a 2D GUI.\n\n## Babylon.js\n\nBabylon.js now supports [MRTK3](https://doc.babylonjs.com/features/featuresDeepDive/gui/mrtk) on web. But right now, only a button is supported. The full MRTK3 components can be found in [github](https://github.com/microsoft/MixedRealityToolkit-Unity/tree/mrtk3). checkout the mrtk3 branch. You can build it on Unity.\n\nBabylon.js has an [editor](https://editor.babylonjs.com/), Three.js also has [one](https://rogueengine.io/download). I have to say babylon.js is better. But to integrate it with react-babylon still need some work. It exports scene as a `.babylon` [file](https://doc.babylonjs.com/setup/support/.babylonFileFormat). I am trying to import it to react-babylon.\n\nSnippets is a babylon material server. You can build your own with [this](https://doc.babylonjs.com/toolsAndResources/thePlayground/yourOwnSnippetServer). Also you can use [node-editor](https://nme.babylonjs.com/) to generate one.\n\n## WebXR\n\nI found [a tutorial of WebXR](https://medium.com/youngsphere/1-introduction-to-webxr-53c293b4bfb5) on medium. I will check it out next week.\n\n## Swipe keyboard\n\nThis is a [document](\nhttps://www.fleksy.com/blog/how-swipe-typing-works/) about how swipe keyboard works.\n\n## What to be done\n\n- Finish the tensorflow tutorial. [freeCodeCamp](https://www.youtube.com/watch?v=tPYj3fFJGjk&t=4090s&pp=ygUTdGVuc29yZmxvdyB0dXRvcmlhbA%3D%3D)\n- Integrate babylon.js editor with react-babylon.\n- make an HTML Control for babylon.js.\n- learn [react-babylon tutorial](https://brianzinn.github.io/react-babylonjs/)\n- learn [rust on android](https://google.github.io/comprehensive-rust/)\n- try to make snippets(not emergent).","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/07/22/29th-week-geospatial.md","slug":"2023/07/22/29th-week-geospatial","body":"# 29th week: Google Geo-Spatial\n\n## Google Geo-Spatial\n\nFirstly, I didn't get the permission, this API is not opened for mainland China. I need a abroad VISA card.\n\nThis is [a slideshow](https://www.docswell.com/s/FumiyaHr/56YG27-2023-05-18-221638#p6) to introduce it.\n\nThis is [the official document](https://developers.google.com/ar/develop/geospatial). [This](https://developers.google.com/ar/develop/unity-arf/geospatial/streetscape-geometry) is about using google geo-spatial on unity. It is based on [AR Foundation](https://developers.google.com/ar/develop/unity-arf/getting-started-ar-foundation).\n\nThese are some [samples](https://github.com/google-ar/arcore-unity-extensions/tree/master/Samples~).\n\nThis is an [ARCore official page](https://developers.google.com/ar/geospatialcreator).\n\n[Earth Studio](https://www.google.com/earth/studio/) uses google geo-spatial to build Video assets.\n\nThis is a google's WebXR [tutorial](https://developers.google.com/ar/develop/webxr/hello-webxr), I'll check it out this week.\n\nAlso, here is some webXR [tutorial](https://doc.babylonjs.com/features/featuresDeepDive/webXR/WebXRSelectedFeatures\n) in [babylon.js](https://doc.babylonjs.com/features/featuresDeepDive/webXR/webXRARFeatures).\n\n## use Babylon editor and react-babylon.js\n\nThe Babylon editor uses CANNON as physical engine, before importing, I need to inject it.\n\n``` js\nBabylonFileLoaderConfiguration.LoaderInjectedPhysicsEngine = CANNON;\n```\n\nAnd the asset should be relatively put in the `root_dir`.\n\n```js\nSceneLoader.AppendAsync(`${root_dir}`, \"scene.babylon\", scene);\n```\n\n## OpenFaas\n\nThis is a new world to me, I found an ebook, [Kubernetes 中文指南](https://jimmysong.io/kubernetes-handbook/). I don't have time to read it yet.\n\n## GASP\n\n[GASP](https://greensock.com/gsap/) is an animation library, I heard from [@WawaSensei](https://www.youtube.com/@WawaSensei). He's got some nice shader [tutorials](https://www.youtube.com/watch?v=e2ntx-fyXaE) I want to learn.\n\n## Face tracking on WebXR\n\nCurrently, Face tracking is not supported in WebXR. This is a 3rd party library [mind-AR.js](https://medium.com/web-augmented-reality-development/webar-face-tracking-with-10-lines-of-code-18c5f24a0e38) that supports it.\n\n## Swift on Linux\n\nThis is a page about [swift on linux](http://swift-linux.refi64.com/en/latest/index.html). It seems only [Vapor](https://vapor.codes/) is still alive now (as a web server).\n\n## 3D LUT File\n\nLUT file(look up table) is a file that contains color correction data. It is used in video editing. [Adobe Premiere](https://www.makeuseof.com/adobe-premiere-how-to-export-lut/) can export it.\n\n## Video with depth\n\nThis is a [script](https://github.com/jankais3r/Video-Depthify) in Codelab to make depthify video. I can also use [stable diffusion](https://github.com/thygate/stable-diffusion-webui-depthmap-script) to make one.\n\n## Lottie\n\n[Lottie](https://lottiefiles.com/featured) is a SVG animation tool. Differences between Lottie and Rive is in this [document](https://rive.app/blog/rive-as-a-lottie-alternative). \n\n## React v18\n\nuseSyncExternalStore is a new react hook in v18. It can be used observe an element outside react environment\n\n```js\nlet data = {w: 0, h: 0};\nconst subscribe = snap => {\n    window.addEventListener('resize', snap);\n    () => window.removeEventListener('resize', snap);\n}\n\nconst snapshot = () => {\n    const w = window.innerWidth;\n    const h = window.innerHeight;\n    if (w !== data.w || h !== data.h) {\n        data = {w, h};\n    }\n    return data\n}\nconst Component = () => {\n    const {w, h} = useSyncExternalStore(subscribe, snapshot);\n}\n```\n\nSuspense is updated to support data fetching.\n\n```js\nlet data = null\nlet promise = null\nconst Suspender = () => {\n    if (data === null) {\n        if (promise === null) {\n            promise = fetch('url').then(res => res.json()).then(res => {\n                data = res;\n                promise = null;\n            });\n        }\n        throw promise;\n    }\n    return <div>{data}</div>\n}\n\nconst Component = () => {\n    return (\n        <Suspense fallback={<div>loading</div>}>\n            <Suspender />\n        </Suspense>\n    )\n}\n```\n\n## react-babylon.js\n\nI've finished the examples in [react-babylon.js](https://brianzinn.github.io/react-babylonjs/). I will try webXR next week. Still, there are some stuff I don't understand. Like [pbrMaterial](https://www.youtube.com/watch?v=CRg8P1Af1M0&ab_channel=Babylonjs), reflectionFresnelParameters, arcRotateCamera, and mesh-lookat.\n\n## Next week\n\nI'll try Google's webXR tutorial, and the babylon one.\n\nI'll continue the tensorflow tutorial. And the rust on android one.\n\nI'll try to compare Remix and Next.js.","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2023/07/30/30th-week-shader.md","slug":"2023/07/30/30th-week-shader","body":"# 30th week shader\n\n## CSS in JS is back\n\n[Kuma UI](https://www.kuma-ui.com/) is a compiler time CSS in JS library. It is a better alternative to Tailwind CSS. It can be used with [Panda CSS](https://panda-css.com/)\n\n## NextJS & Remix\n\nCompared NextJS and Remix. Remix is fully server rendered.\n\n## Use Preact with react-babylonjs\n\n[preact-reconciler](https://github.com/CodyJasonBennett/preact-reconciler) is an adapter for Preact to work with react-babylonjs or R3F.\n\n## WebXR\n\n[Mixed Reality Resources](https://github.com/Yonet/MixedRealityResources) collects the datas about XR resources. Can download some library on it.\n\nThis is an XR input [playground](https://playground.babylonjs.com/#X7Y4H8) for BabylonJS.\n\nUsing WebXR on phone is hard. It is only supported on Chrome Canary. It is not working on Safari even opened the experimental features.\n\nTesting the web on mobile need a cable connect. But there is a JS console [Eruda](https://github.com/liriliri/eruda) can help.\n\nAnother choice is to use [Babylon React Native](https://github.com/BabylonJS/BabylonReactNativeSample), which uses React Native as a bridge to use ARcore or ARkit. Sadly Oculus dose not support ARcore. However, it seems Oculus uses React Native on it's [Home Launcher](https://reactnative.dev/blog/2021/08/26/many-platform-vision). And they are working on supporting Vision OS.\n\n[This](https://www.callstack.com/campaigns/download-the-ultimate-guide-to-react-native-optimization) is a book about React Native.\n\n## BabylonJS\n\nTo make an orthographic camera in BabylonJS, can refer to this [link](https://forum.babylonjs.com/t/how-to-use-orthographic-view-in/29733).\n\n[CYOS](https://cyos.babylonjs.com/) is a BabylonJS shader editor.\n\n[BabylonJS Viewer](https://doc.babylonjs.com/features/featuresDeepDive/babylonViewer) uses web component to build a 3D viewer.\n\nCan use [Poly Pizza](https://poly.pizza/) to download mesh models.\n\nCan download free shaders on [ShaderToy](https://www.shadertoy.com/).\n\n## AI generated SVGs\n\nUsing [Craft AI](https://www.recraft.ai/), can make AI generated SVGs for free. [This](https://www.nan.fyi/) is a blog about SVG paths, maintainer is a vercel employee.\n\n## Crash an SVG path on WebGL\n\n[This](https://css-tricks.com/rendering-svg-paths-in-webgl/) is a threeJS example to render SVG path on WebGL with shaders. I am trying to make it work on BabylonJS and learn how to write shaders.\n\n[This](https://www.youtube.com/watch?v=oKbCaj1J6EI&ab_channel=Visionary3D) is a crash course about shaders.\n\nTo make vertex change without shader, can refer to this [link](https://doc.babylonjs.com/features/featuresDeepDive/mesh/creation/custom/updatingVertices).\n\nAbout how to use a node editor can refer to [this](https://doc.babylonjs.com/features/featuresDeepDive/materials/node_material/nodeMaterial)\n\nThis is an [example](https://playground.babylonjs.com/#026IT4#1) to send attribute data to shader using instanceBuffer.\n\nThis is a nice [tutorial](https://www.smashingmagazine.com/2016/11/building-shaders-with-babylon-js/) about how to write shaders in BabylonJS.\n\n[This](https://playground.babylonjs.com/#1OH09K#1672) is a firework effect using shader.\n\n[A fancy Babylon Effect](https://codepen.io/daledesilva/pen/ZEmrrYX) I want to figure out.\n\n## run JS in compiling time\n\nSince React Server Component runs component on server, I was thinking to run a component on compiling time. [This plugin](https://github.com/egoist/vite-plugin-compile-time) can do that.\n\nAlso there is [a plugin](https://github.com/unjs/unplugin) to help build a universal plugin for Vite, Rollup, Webpack and more.\n\n","collection":"blog","data":{"type":"post","category":"plan"}}]}