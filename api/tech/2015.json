{"posts":[{"id":"2015/02/17/ArchLinux-bug.md","slug":"2015/02/17/archlinux-bug","body":"\n#ArchLinux升级搜狗输入法有bug的解决方案\n\n>不久前升级了搜狗输入法，因为据说这次升级性能提高了不少，更新了之后，确实啊！但是没意识到的是，出来了一堆bug。\n\n升级AtomEditor到0.177竟然不能使用中文了T.T还以为是个bug[#5447](https://github.com/atom/atom/issues/5447#issuecomment-74660587)，因为当时觉着chrome也没问题啊（其实有问题，地址栏输入太快的时候会发生错乱>.<，比如输baidu.com会变成badiu.cmo，奇葩啊）。\n\n##出问题的特征：\n* AtomEditor不能输入中文\n* SublimeText（打了补丁之后）不能输入中文\n* Chrome/Chromium地址栏输入有时会发生错乱\n\n##解决方案：\n实际上也是自己粗心，运行下面，马上就知道问题在哪了。\n\n    $ fcitx-diagnose\n    \n升级sogou的时候，输入法环境变量被改成Xim了，不知道在别的系统上面咋样，但这些变量在Arch上得是fctix，所以修改一下~/.xprofile。\n\n    export GTK_IM_MODULE=fcitx\n    export QT_IM_MODULE=fcitx\n    \n没问题啦～\n\n##后记\n编辑器不好使的那段时候，我改用了Brackets，很棒的编辑器，做整个项目的时候很好使，而且速度比atom、sublime都快。\n\n","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2015/02/17/pacman.md","slug":"2015/02/17/pacman","body":"\n\n#pacman改下载器\n\npacman默认使用wget下载，没说wget不好，在家里面总是断，所以改成aria2了\n\n## 移除未安装的包\n\n    # pacman -Sc\n    \n## 使用aria2 代替 wget\n\n    # pacman -S aria2\n    \n## 修改/etc/pacman.conf\n\n    XferCommand = /usr/bin/aria2c --allow-overwrite=true -c --file-allocation=none --log-level=error -m2 --max-connection-per-server=6 --max-file-not-found=5 --min-split-size=5M --no-conf --remote-time=true --log=- --summary-interval=60 -t5 -d / -o %o %u\n","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2015/03/21/Don't Starve console.md","slug":"2015/03/21/dont-starve-console","body":"\n#《饥荒》作弊,顺便学习lua\n\n1. 打开Console\n\n    在～下面找DoNotStarve/settings.ini修改。\n\n        ENABLECONSOLE = false\n        \n2. 游戏中点～键打开console。\n    \n        GetPlayer().components.builder:GiveAllRecipes() ---------- 全物品直接制造\n        GetPlayer().components.hungerause(true) ---------- 饥饿值不降低\n        GetPlayer().components.sanity:SetMax(500) ---------- 精神值不降低(慎用不可取消 )\n        GetPlayer().components.health:SetMaxHealth(300) ---------- 最大血格\n        GetPlayer().components.health:SetInvincible(true) ---------- 上帝模式\n\n        minimap = TheSim:FindFirstEntityWithTag(\"minimap\")--------------|\n        minimap.MiniMap:ShowArea(0,0,0, 10000)----------- 开全地图，要输入2个指令才行\n        \n        for var x=1,1,10 do DebugSpawn(\"pigman\") end -------------------出现十个猪人\n        \n        \n        \n        \n        \n        \n\n","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2015/05/30/Climbing-Blue-Harm-Network.md","slug":"2015/05/30/climbing-blue-harm-network","body":"\n#爬蓝调口琴网\n>论文写好了就没事干了，本来想去旅游，完蛋流量没了，所以静下心来学学口琴，网上有个蓝调口琴网挺好哒，想写个应用装手机里，先讲讲怎么爬吧。\n\n主要还是用了request模块，然而由于网站用的是GBK编码，还需要iconv-lite、bufferhelper。\n\n    function get(url,callone,calltwo){\n        var req = request(url, {timeout: 10000, pool: false});\n        req.on('error', function(err) {\n            console.log(err);\n        });\n        req.on('response', function(res) {\n            var bufferHelper = new BufferHelper();\n            res.on('data', function (chunk) {\n                bufferHelper.concat(chunk);\n            });\n            res.on('end',function(){\n                var result = iconv.decode(bufferHelper.toBuffer(),'GBK');\n                callone(result,calltwo);\n            });\n        });\n    }\n    \n爬到了网页，用jquery来读里面的东西，用node-jquery就OK了\n\n    var env = require('jsdom').env;\n    env(html,function(err,window){\n        var $ = require('jquery')(window);\n    })\n    \n这个脚本用了特愚蠢的字符串拼json的方法。。。所以趁脚本结束前还得把json封闭了。\n\n    process.on('exit',function(){\n\t   fs.appendFileSync(FILE,'/b]}');\n    })","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2015/08/23/PebbleJS-pebble.md","slug":"2015/08/23/pebblejs-pebble","body":"\n>这个月初，任性买了刚发布的pebble time，一直还没写个应用，这个周末抽出时间看看。\n\n# 开头\n\npebble的应用可以用C和Node开发，开发工具也可以使用[cloudpebble](https://cloudpebble.net/)（墙内用户伤不起）或者下载sdk离线开发。\n\n# 安装SDK\n\nmac安装pebble sdk太简单了\n\n```\nbrew install pebble/pebble-sdk/pebble-sdk\n```\n\n网路顺畅的话，安装就完成了。\n\n# 建立PebbleJS工程\n\n离线建C项目只要运行```pebble new-project xxx```就好，但是js项目需要把github上的项目https://github.com/pebble/pebblejs.git clone下来\n\n```\ngit clone https://github.com/pebble/pebblejs.git\n```\n# 文件目录\n\npebble应用的配置文件在appinfo.json里面，逻辑代码都写在src下的js/app.js里\n\n# UI module\n\n引入ui模块\n\n```\nvar ui = require('ui');\n```\n\n## Window\n\n```\nvar wind = new UI.Window({\n  fullscreen: true,\n});\nwind.show();\n```\n\n效果如图：\n\n<img src=\"https://developer.getpebble.com/assets/images/getting-started/watchface-tutorial/1-blank.png\">\n\n## Card\n\n创建一个卡片\n\n    // Create a Card with title and subtitle\n    var card = new UI.Card({\n        title:'Weather',\n        subtitle:'Fetching...'\n        });\n\n    // Display the Card\n    card.show();\n\n    card.on('click', 'up', function(e) {\n        /*上键事件*/\n        })\n    card.on('click', 'select', function(e) {\n        /* 中键事件*/\n        })\n    card.on('click', 'down', function(e) {\n        /*下键事件*/\n        })\n\n\n效果如图\n\n<img src=\"https://developer.getpebble.com/assets/images/getting-started/pebble-js-tutorial/1-fetching.png\">\n\n>Card还有body和icon属性\n\n## Menu\n\n    var resultsMenu = new UI.Menu({\n        sections: [{\n            title: 'Current Forecast',\n            items: [{\n                title: 'Clear',\n                subtitle: '11-05 21:00'\n                }]\n            }]\n        });\n\n        resultsMenu.on('select', function(e)    {\n            console.log('Selected item #' + e.itemIndex + ' of section #' + e.sectionIndex);\n            console.log('The item is titled \"' + e.item.title + '\"');\n        });\n\n        // Show the Menu\n        resultsMenu.show();\n\n\n<img src=\"https://developer.getpebble.com/assets/images/getting-started/pebble-js-tutorial/2-menu.png\">\n\n# 编译\n\n```\npebble build\n```\n\n#安装\n\n```\npebble install --phone 192.168.1.107//你的手机ip，记得打开pebble的调试模式\n```\n","collection":"blog","data":{"type":"post","category":"tech"}}]}