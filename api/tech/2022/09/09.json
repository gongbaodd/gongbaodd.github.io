{"posts":[{"id":"2022/09/09/OpenGL.md","slug":"2022/09/09/opengl","body":"\n# OpenGL 画个三角\n\n这是上个月打算看的教程[learnopengl-cn.github.io](https://learnopengl-cn.github.io/)，真的是非常良心，完全搬运的话感觉没意义，这里做一下笔记好了。\n\n三个主要的对象\n\n- 顶点数组对象 VAO\n- 顶点缓冲对象 VBO\n- 元素缓冲对象 EBO\n\n这三个对象都是用来描述显存的，每一个 VAO 对应一个图形，VBO 是这个图形的点的数组，因为图形按照三角形拼接的，如果只使用 VBO 会多出许多重复的点，EBO 就是为这些重复的点做索引。\n\n```C++\n// ..:: 初始化代码 :: ..\n// 1. 绑定顶点数组对象\nglBindVertexArray(VAO);\n// 2. 把我们的顶点数组复制到一个顶点缓冲中，供OpenGL使用\nglBindBuffer(GL_ARRAY_BUFFER, VBO);\nglBufferData(GL_ARRAY_BUFFER, sizeof(vertices), vertices, GL_STATIC_DRAW);\n// 3. 复制我们的索引数组到一个索引缓冲中，供OpenGL使用\nglBindBuffer(GL_ELEMENT_ARRAY_BUFFER, EBO);\nglBufferData(GL_ELEMENT_ARRAY_BUFFER, sizeof(indices), indices, GL_STATIC_DRAW);\n// 4. 设定顶点属性指针\nglVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 3 * sizeof(float), (void*)0);\nglEnableVertexAttribArray(0);\n\n[...]\n\n// ..:: 绘制代码（渲染循环中） :: ..\nglUseProgram(shaderProgram);\nglBindVertexArray(VAO);\nglDrawElements(GL_TRIANGLES, 6, GL_UNSIGNED_INT, 0);\nglBindVertexArray(0);\n```\n","collection":"blog","data":{"type":"post","category":"tech","tag":["OpenGL"]}}]}