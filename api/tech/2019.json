{"posts":[{"id":"2019/01/09/curl-k.md","slug":"2019/01/09/curl-k","body":"# curl有一个k参数是可以不校验证书的！\n\n可能是我后知后觉了，curl -k 可以忽略证书认证\n\n> -k, --insecure\n(SSL) This option explicitly allows curl to  perform  \"insecure\"\nSSL connections and transfers. All SSL connections are attempted\nto be made secure by using the CA certificate  bundle  installed\nby  default.  This  makes  all connections considered \"insecure\"\nfail unless -k, --insecure is used.\nSee this online resource for further details:\n http://curl.haxx.se/docs/sslcerts.html\n","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2019/01/11/outline.md","slug":"2019/01/11/outline","body":"# 解析outline协议\n\n今天是小三节，祝各位小三都能打倒原配，走上人生巅峰（误）。\n\n谷歌的Outline，如何在linux下面使用呢？\n\nOutline是基于ShadowSocket的，协议是```ss://<base64>@<server>:<port>```所以如果你用的是安卓的客户端，直接把协议转成二维码，用ShadowSocks就能扫码使用了。\n\n上面已经能看出来```server```和```server_port```了，那么一个shadowsocks的配置文件，还差```password```和```method```，解译base64部分，便可以得出```<method>:<password>```。\n","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2019/01/12/Wanderer.md","slug":"2019/01/12/wanderer","body":"\n# 流浪地球\n\n马上流浪地球就要上映了，反正也是篇中篇小说我大致看一下好了。\n\n故事大概说的是太阳即将变成矮星，人类打算搬离太阳系，但是无法创造一个完全的类地生态系统，所以干脆让地球达到逃逸速度逃离太阳的故事。\n\n科幻故事嘛，总会有瑕疵，详情参考知乎[流浪地球：行星发动机理论可行吗？](https://zhuanlan.zhihu.com/p/51496504)。\n\n整个故事还算合情合理的，起码当我拿它当睡前故事看，晚上睡觉还真梦到地球爆炸了。。。\n","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2019/01/19/windows.md","slug":"2019/01/19/windows","body":"\r\n# Using Windows to develop\r\n\r\nLast year, I started thingking to switch into Windows rapidly. Back to the years I decided to use Linux. Mostly because I want a faster working environment, the old Vista required more memories and CPU usages that I could't afford. Even in Windows8, gnome-shell run much more fluent.\r\n\r\n## Cons in Linux desktops \r\n\r\nSo, why do I want to switch?\r\n\r\nWell, games are not the problem, I quiet like to play supertuxkart, actually.\r\n\r\nHDPI is a hard chalenge, especially on a touch screen. I admire the effort that the Open Source world took, but it's still not good enough.\r\n\r\nInput bar is an important tool for Chinese users. The latest version of GTK-Chromiumn has a bug, that the input bar cannot get the correct place where the input box is (I was using fcitx). However, if you refer to the old commit of this package, you would see it had been fixed in an earlier version, maybe the bug appeared after some UI refactors.\r\n\r\nthe Input bar problem seems a nofix. gladlly you can use KDE desktop. The great advance of Linux, is the mass amount of desktops. I tried a lot desktops in ArchLinux, KDE, gnome, mint (a fork of gnome) and budgie (another fork of gnome), they all have pretty good support for HIDPI.\r\n\r\nWireless screen sharing, I have a projector. share the screen of my phone to the walls makes me comfortable, but I can't share screen in Linux. Intel holds the driver for screen sharing, and it's not open source.\r\n\r\nBIOS update, dell updates BIOS some time, it makes my laptop more stable. But I can only update it in Windows.","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2019/02/20/AWS SQS.md","slug":"2019/02/20/aws-sqs","body":"# AWS SQS 相关状态说明\n\n+ Message Available:  SQS 客户端可以获取到的消息, 即 Visible Messages\n\n+ Messages in Flight: 消息被 SQS 收取了之后，由 Available 转为 In Flight, 该状态的消息不能被客户端接收到\n\n+ Visibility Timeout:  消息停留在 In Flight 状态的时间, 如果在 Timeout 之前未删除这个消息，该消息重新变为 Available 状态\n\n所以在Visibility Timeout时间内，同一条消息是不会被多个客户消费的，适当延长Visibility Timeout可避免单条消息被重复处理。","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2019/02/25/javascript - unsigned int.md","slug":"2019/02/25/javascript---unsigned-int","body":"# JavaScript 获取 Unsigned Int\n\nJavaScript 默认是64位有符号的整型，可以利用移位符号解决，但不是>>2而是>>>0\n\n```javascript\nconst a = 4136517969;\nconst b = a >> 2;\n/* b == -39612332 */\n```\n\n```javascript\nconst a = 4136517969;\nconst b = a >>> 0;\n/* b == 4136517969 */\n```\n\n>最好不要使用 >> ，推荐使用 >>> 因为最左边一位会被解析成符号位，当数字溢出时，会被解析成负数。\n\n当然按照这种方式eslint的默认配置是不允许的，所以可以借助 Unit32Array.\n\n```javascript\nconst a = 4136517969;\nconst b = new Uint32Array([a])[0];\n/* b == 4136517969 */\n```","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2019/04/27/Windows.md","slug":"2019/04/27/windows","body":"# 为什么文泉驿微米黑在windows上面那么难看\r\n\r\n之前我吐槽过大部分win32应用使用的都是segeUI字体，对中文的fallback是宋体，并不是吐槽宋体不好看，不知道多少Mac用户曾经吐槽过自己没有宋体，可是宋体在屏幕里的显示真心不好，很多字只能看到收锋而看不清笔画。\r\n\r\n好在有NoMeiryoUI的存在，可以把字体都换成微软雅黑，可视微软雅黑并不好看，也许是我本身弱视的缘故，微软雅黑每个汉字的结构体类似导致我不仔细看基本上看不清楚。相比之下，我就怀念起来在linux下面很常用的文泉驿微米黑。\r\n\r\n其实文泉驿微米黑也有很多缺点，比如同字号的微软雅黑就比文泉驿微米黑大，但是因为字形不像微软雅黑那么工整，反倒有利于我阅读。而且因为沿用Droid font风格，字体看起来又有一些俏皮。\r\n\r\n可是在windows上面用起来却出现了些问题，有部分笔画竟然有粗有细，在linux和mac上面的表现完全不同。查了资料，我在之乎上面找到了答案（原谅我没有贴链接，在火车上呢）。Windows为了解决老显示器分辨率的问题，在中文字体上面做了处理，比如在结构密集的字上细化它的笔画，甚至是减少笔画，这样在低分辨率上这些字不至于糊到一块，可这样就苦了高分屏幕的同志了。Mac就没有这个问题，因为人家字体刚用上的时候就是高分屏的时代了。\r\n\r\n其实这个容错处理在字体中可以设置，比如微软雅黑就有这个功能，可惜文泉驿还需要等。","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2019/07/24/iwork8.md","slug":"2019/07/24/iwork8","body":"# 如何魔改你的iwork8\r\n\r\n![改造图](https://ws1.sinaimg.cn/mw690/89d0a2e1gy1g9joycabslj23401k07wk.jpg)\r\n\r\n搬家的时候发现我的iwork8并没有当二手卖掉，或者扔在北京。正巧，在百度贴吧搞到一张这机器主板的结构图。\r\n\r\n![结构图](https://ws1.sinaimg.cn/large/89d0a2e1gy1g9jp0th158j20fk0cfagx.jpg)\r\n\r\n简单说只要短接一处，这机器上面就会多两个usb口。那么我的目标就是\r\n\r\n一、增加一个标准USB口\r\n二、更换6000mah电池\r\n三、增加一个指纹模块\r\n四、更换wifi天线\r\n\r\n遗憾的是，microUSB接口已经取不下来了，所以充电口有些接触不良，索性可以待机两天（充满要一天...）还可以忍受。\r\n\r\nwifi信号依然不是很好，所以平日会再插一个外接wlan，看书嘛，其实也没这么高需求了。\r\n","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2019/09/01/USB.md","slug":"2019/09/01/usb","body":"# 谈一谈USB\r\n\r\n这篇文章其实是之前挖的坑，大上个月在改造我的平板的时候，就像写这篇文章了。说说这个平板吧，酷比魔方iwork8，8英寸的windows平板，用来读pdf刚刚好，只是存储不是很足而且只有一个micro-usb接口。所以我更期望给它改造成usb type-c接口或者增加一个标准usb接口，然而当我粗略查询micro-usb和type-c针脚的不同点的时候，发现并不是那么简单。当然，最后我还是给这个平板装上了标准usb接口，而这篇文章也就油然而生了。\r\n\r\n## USB的产生\r\n\r\n如果你是近些年才使用了计算机，那么熟知的接口自然就只有USB，然而就在上世纪90年代，计算机接口的分工还有所不同。当时还有链接屏幕的串口，链接打印机的并口，链接键盘鼠标的PS/2口，声卡显卡的PCI-E，而现在基本上都被USB统一天下了。\r\n\r\n根据Wikipedia，在1994年，7家公司开始开发USB，通用串口，目标是实现为计算接提供可以通用适配多种外设，包括足够的电量适配和数据传输，他们组织了USB-IF，以后每次技术更新都要提交到USB-IF中。7家公司分别提供了对USB从软件到硬件的支持（颇有一点点西方神话众神造物的感觉）。其中Intel于1995年研发出了USB的集成单元。到1996年1月，USB终于发布了1.0版本（有趣的是红荔村也是1996年出来的，这俩没什么关系，主要是我刚吃完红荔村）。\r\n\r\n### USB 1.x\r\n\r\nUSB最早发布了两个版本每秒1.5Mbit/s的【Low Speed】和12Mbit/s的【Full Speed】，大概一首3MB的歌，Low Speed需要传输16s，而Full Speed需要2s，如果拆解过这两款数据线，Full Speed会有另外一条解决静电的地线。可见Low Speed是用来处理如鼠标、键盘等设备，而Full Speed则处理如打印机软盘等设备，显然在1.0时链接屏幕还是不行的，如果一张1MB的图片光传输就要1s，那基本上看视频就和看PPT一样了。\r\n\r\nWindows 95于1997年开始预装USB的驱动。1998年8月，USB1.1发布，苹果全线产品开始推动USB，在苹果的影响之下，PC也开始推动市场上的计算机换代使用USB。\r\n\r\nUSB 1.x的时候其实没有对小型接口的形状有描述，以至于除了标准的type-A（最常见的长方形接口）和方形的type-B（我在打印机上面见到过）接口的其它接口基本上由厂家自定义，要知道90年代末期可是mp3、mp4大爆发的年代。\r\n\r\n### USB 2.x\r\n\r\n到了2000年4月，60MB/s的【High Speed】传输版本发布，发布了usb-min和usb-micro标准（从Wikipedia看基本上算是整理出来的，可见这个组织初期的地位是多低...）；提供了USB供电标准，允许1.5A到5A的接口（这么大的跨度，估计也是个整理的数值）；On-the-go允许主从设备反向链接。\r\n\r\n#### USB on the go\r\n\r\nUSB初期设计是一个主从设备，计算机链接U盘，计算机就是主设备，U盘则是从设备。可是随着平板等一系列设备出现，这种平板链接U盘的时候是主设备，而链接计算机的时候又是从设备，除了给这种平板两个接口之外，还可以依赖一个转接口反转主从位置，这就是USB OTG。\r\n\r\n### USB 3.x\r\n\r\nUSB 3.0于2008年11月提出称之为【Super Speed】，允许5Gbit/s传输速率，支持每byte以10bit传输，所以会按照500MB/s单工传输。\r\n\r\nUSB 3.1于2013年7月发布，将USB 3.0改名为【USB 3.1 Gen 1】，并将USB 3.1命名为【Super Speed+】也叫【USB 3.1 Gen 2】，Super Speed+对于Super Speed的改造就是修改原有的单工传输为双工传输，这样单方向传输速率可以达到1GB/s。\r\n\r\nUSB 3.2于2017年发布，主要是将Super Speed和Super Speed+实现在USB type-c接口上，并允许传输效率达到1.25~2.5GB/s。\r\n\r\n写到这里，感觉USB 3系列有点晕。基本上每个子版本都被改名了，现在是按照速率命名：\r\n\r\n+ 符合USB 3.0标准，但是速率为5Gbit/s的接口被命名为USB 3.2 Gen 1\r\n+ 符合USB 3.0标准，但是速率为10Gbit/s的接口被命名为USB 3.2 Gen 2\r\n+ 符合USB 3.0标准，但是速率为20Gbit/s的接口被命名为USB 3.2 Gen 2x2\r\n\r\n所以目前号称是USB 3.2的接口说不定它是08年的USB 3.0接口。\r\n\r\n### USB 4\r\n\r\n2019年8月，USB 4发布，支持40Gbit/s和Thunderbolt 3协议，并向下兼容USB 2.0和USB 3.2协议。\r\n\r\n#### 什么是Thunderbolt协议\r\n\r\n这个协议是Intel和苹果合作实现的，用来代替PCIe和DisplayPort接口，Thunderbolt 3选择使用USB type-c作为默认接口。\r\n\r\n## USB的针脚定义\r\n\r\n#### 标准USB\r\n\r\n包括+5V， Data-， Data+， Ground，当然这一直是USB2.0的标准\r\n\r\n#### 迷你USB\r\n\r\n包括+5V，Data-， Data+， ID（用于OTG），Ground\r\n\r\n#### Type-C\r\n\r\n因为Type-C接口支持正反方向，所以两个方向的针脚排列是镜像的。包括Ground，SuperSpeed+，SuperSpeed-，+5V，Configure， D+， D-，SideBand use，+5V，SuperSpeed-， SuperSpeed+，Ground。\r\n\r\n所以想拿Type-C的针脚链接迷你USB的主板，基本是不太可能的。\r\n\r\n## USB的特征和限制\r\n\r\n1. USB的设计基于主从模式，主设备提供对从设备的控制，至于人体输入设备或者OTG设备则需要额外芯片处理。\r\n2. 链接于同一台主设备的两台从设备不能互相连通。\r\n3. 两台主设备链接不能互相联通。\r\n4. 目前的USB线缆只能保证近距离数据传输，远程传输需要依赖远程传输的设备，当然USB-4中还包括光纤，所以这个限制只算是目前。\r\n\r\n# 参考\r\n\r\n[1] USB https://en.wikipedia.org/wiki/USB\r\n[2] USB hardware https://en.wikipedia.org/wiki/USB_hardware#Connectors\r\n[3] USB_On-The-Go https://en.wikipedia.org/wiki/USB_On-The-Go\r\n[4] USB-C https://en.wikipedia.org/wiki/USB-C\r\n[5] A brief history of USB, what it replaced, and what has failed to replace it https://arstechnica.com/gadgets/2014/08/a-brief-history-of-usb-what-it-replaced-and-what-has-failed-to-replace-it/\r\n\r\n\r\n\r\n\r\n\r\n","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2019/10/31/Glamor-hood-and-triangular-prism.md","slug":"2019/10/31/glamor-hood-and-triangular-prism","body":"\n# 胶皮遮光罩和三棱镜\n\n作为小众相机「宾得」的用户，深刻感受到了摄影穷三代的道理，对应的配件实在是太贵了。\n\n好在某宝还是有些东西的，比如这个胶皮遮光罩，首先，因为是胶皮的，不用担心螺口对不上的问题，还有拍摄一些被镜子遮盖的物体就不用担心反光之类的事儿了。\n\n![胶皮遮光罩](http://ww1.sinaimg.cn/mw690/89d0a2e1gy1g8lv93gm89j23401k0e83.jpg)\n","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2019/11/15/wifi.md","slug":"2019/11/15/wifi","body":"# 没想到小杜wifi竟然还能用\n\n大概是我大四的时候，也就是2014年，国内的互联网公司开始发布wifi发射器。原因很简单，4G时代刚刚开始，资费高得不得了，而3G的网速还不足以满足互联网公司的需求。于是所有公司都盯上另一个技术wlan，只要有一台机器连接了网络就可以让它成为别的机器的nat，正巧联发科的2.4G的wlan模块已经很成熟了，我依稀记得当时买一个小度wifi只要16元。\n\n显然，现在小杜wifi已经没有用了，如果把它插上一台Windows10机器，系统会报找不到驱动错误，但显然还能识别出来他是个2.4G wlan模块。\n\n最近我在考虑把我的第二块屏幕连接树莓派，原因是当我的笔记本连接第二块屏幕来看视频时会占用我开发的资源，毕竟一台8GB内存+核显的机器比较难以支撑现在的开发需求。作为一个抠门的人，我并不想网购一个wifi模块，可是我确实需要一个wifi模块以保证我的树莓派保持更新，这时我注意到那个挂在我钥匙链上的小杜WiFi。\n\n执行`lsusb`查看小杜WiFi的设备号2955:1001，有意思的是百度抹掉了这个设备的其它信息，谷歌一下这是联发科的一款wlan芯片MT7601U，可以在联发科官网下载linux驱动的。但是wait for it，如果你用的是Ubuntu mate，你都不需要担心编译驱动的问题，因为它已经写入内核了。\n\n所以只需要写入Ubuntu mate到树莓派，插入小杜WiFi，然后将sourcelist的ubuntu-ports镜像改成USTC的，接下来就万事大吉了。","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2019/11/19/Window 10 Home-docker desktop.md","slug":"2019/11/19/window-10-home-docker-desktop","body":"# 怎么在Windows 10 Home安装docker desktop\n\n先说一下，在Windows上面安装docker可比Mac上面难多了，首先官网有两种docker tool，推荐的Docker Desktop竟然要求Windows Professional以上（what？）。要知道大陆没有微软官方授权的Windows Professional... 给我的选择，要么删除我的win10 home安装个破解版，或者某宝上面找了个密钥。\n\n简单搜了一下某宝，大概可以整理出以下几个版本：\n\n1. 英文官方密钥，有点贵\n\n2. 不提供密钥，提供破解方法（这种人怎么不去死）\n\n3. OEM密钥，不知道能不能用来升级\n\n4. 批量安装密钥，这个比较坑，你当时激活成功几个月后可能会被revoke\n\n最后决定...算了，用我的正版Home好得不得了。其实docker需要win10 pro的Hyper V来虚拟化Windows container，早说嘛，我又不用Windows container。那么问题就是要欺骗docker安装包我的机器是win pro就好了呗。\n\n将以下命令保存为*.cmd文件并执行可以安装Hyper V。\n\n```bash\npushd \"%~dp0\"\n\ndir /b %SystemRoot%\\servicing\\Packages\\*Hyper-V*.mum >hyper-v.txt\n\nfor /f %%i in ('findstr /i . hyper-v.txt 2^>nul') do dism /online /norestart /add-package:\"%SystemRoot%\\servicing\\Packages\\%%i\"\n\ndel hyper-v.txt\n\nDism /online /enable-feature /featurename:Microsoft-Hyper-V-All /LimitAccess /ALL\n```\n\n安装成功会提醒重启计算机，启动成功后不要着急安装，还要修改一处注册表。\n\n```\nREG ADD \"HKEY_LOCAL_MACHINE\\software\\Microsoft\\Windows NT\\CurrentVersion\" /v EditionId /T REG_EXPAND_SZ /d Professional /F\n```\n\n好了起码对于docker来说，这就是台win10机器了，接下来正常安装一直下一步，如果你的机器支持docker的话（虽然这句话有点多余，但是我有三台机器，只有一台跑起来docker了），每次启动机器会带起来docker。\n","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2019/11/19/fluent terminal-git bash.md","slug":"2019/11/19/fluent-terminal-git-bash","body":"# fluent terminal适配给git bash\n\n相信很多windows平台上的开发者都换上了fluent terminal，而且有相当的一部分用的是git-bash，另一拨人应该用的是powershell，我彩不会有多少人使用的是CMD吧。\n\n当然自从WSL发布以后，我尽量将所有Windows设备都撞上了Artix，然而WSL只支持64位系统，那意味着我手上用来看书的8寸小平板因为硬件架构只能保持在32位环境下面。\n\n当然我也不指望在一台7寸屏幕下面开发，但毕竟折腾精神永存，我也在这台设备上装上了fluent terminal，接下来就是配置它使用git-bash。如截图所示，指定执行文件为```C://Program Files/Git/bin/bash.exe```，接下来重启就可以了。\n\n![配置项](http://ww1.sinaimg.cn/mw690/89d0a2e1gy1g93k97jhn7j20zk0m8n4i.jpg)","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2019/11/26/Ubuntu.md","slug":"2019/11/26/ubuntu","body":"# 树莓派Ubuntu重启音频\n\n前一阵子重新拿起来我的树莓派用来放一些学习视频，然而发现ubuntu mate对音频处理有问题，一旦占用结束后有新的应用来占用就会有杂音，感觉ubuntu这个问题出N久了。目前我没找到更好的解决方案，只好重启一下了。\n\n```shell\n#!/bin/bash\npulseaudio -k && sudo alsa force-reload\n```","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2019/11/28/Ubuntu-sslocal.md","slug":"2019/11/28/ubuntu-sslocal","body":"\n# 树莓派 Ubuntu 实现 sslocal 负载匀衡\n\n由于某些原因，我配置了多个 ssserver，windows 客户端可以简单配置负载匀衡，而在 linux 上面需要借助 haproxy。\n\n首先，因为我的服务是 aes-255-gcm 加密方式，需要升级 ss 客户端。\n\n```shell\npip install https://github.com/shadowsocks/shadowsocks/archive/master.zip -U\n```\n\n修改 sslocal 配置，server 连接的是本地 haproxy 端口，增加/etc/shadowsocks/default.json\n\n```JSON\n{\n    \"server\": \"127.0.0.1\",\n    \"server_port\": 8888,\n    \"local_address\": \"127.0.0.1\",\n    \"local_port\": 1234,\n    \"password\": \"password\",\n    \"timeout\": 50,\n    \"method\": \"aes-256-gcm\",\n    \"fast_open\": true,\n    \"workers\": 2\n}\n```\n\n为 sslocal 增加 service，增加/etc/systemd/system/sslocal.service\n\n```ini\n[Unit]\nDescription=Shadowsocks\nAfter=network.target\n\n[Service]\nExecStart=/usr/local/bin/sslocal -c /etc/shadowsocks/default.json\nRestart=on-abort\n\n[Install]\nWantedBy=multi-user.target\n```\n\n好了，sslocal 的部分说完了，接下来 apt 安装 haproxy，修改/etc/haproxy/haproxy.cfg，增加以下行。\n\n```INI\nlisten status\n    bind *:1111\n    mode  http\n    stats refresh 30s\n    stats uri /status\n    stats realm Haproxy\n    stats auth admin:admin\n\nfrontend ss-in\n    mode tcp\n    bind *:8888\n    default_backend ss-out\n\nbackend ss-out\n    mode tcp\n    option tcp-check\n    balance roundrobin\n    server xxx <server>:<port> check\n    server yyy <server>:<port> check\n    server zzz <server>:<port> check\n```\n\n配置完成还要改一下 systemd，/etc/systemd/system/haproxy.service，修改 After 和 Wants 字段，用 network-online.target 替换 network.target。\n\n最后用 systemd 启动 haproxy 和 sslocal。\n\n```shell\nsudo systemd enable haproxy\nsudo systemd enable sslocal\n```\n\n**_参考链接_**\n\n[求教如何让 ss 客户端支持 aes-256-gcm 加密方式](https://www.ubuntukylin.com/ukylin/forum.php?mod=viewthread&tid=188059)\n\n[guyskk/shadowsocks-server.service](https://gist.github.com/guyskk/a9665bc6b2a89b73fae34678b1f6dc6b)\n\n[多 Shadowsocks 服务器负载均衡](https://www.solarck.com/haproxy-shadowsocks-balance.html)\n\n[解决 Haproxy 用 Systemd 启动失败的问题](https://www.solarck.com/systemd-wait-network-online.html)\n","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2019/11/28/windows powertoy.md","slug":"2019/11/28/windows-powertoy","body":"\n# 安利一下 Windows Powertoy\n\n这是最近 Windows 开源的一个应用，可以拓展 Windows 的一些功能，比如下图的 Fancy zones，可以提高 Windows 的分屏功能。\n\n![fancy zones](https://ws1.sinaimg.cn/mw690/89d0a2e1gy1g9drryez7hj22gu1bo4dr.jpg)\n\n可惜目前只支持 x64 平台，但是 github 上面已经有[issue](https://github.com/microsoft/PowerToys/issues/413)跟踪了。\n\n目前还不能在 Windows 商店里面安装，可以利用 chocolatey 安装。\n\n```batch\nsudo choco install powertoys\n```\n","collection":"blog","data":{"type":"post","category":"tech","tag":["windows"],"series":{"slug":"windows-howto","name":"Windows舒适指南"}}},{"id":"2019/12/02/Windows.md","slug":"2019/12/02/windows","body":"# 重装Windows记\n\n![更新中](https://ws1.sinaimg.cn/mw690/89d0a2e1gy1g9jos5k3vaj23401k0hdv.jpg)\n\n就目前来说，我有三台Windows设备，两台已经是64位，只有一台iwork8还是32位。由于一次[魔改](https://gongbaodd.github.io/tech/2019/07/24/%E5%A6%82%E4%BD%95%E9%AD%94%E6%94%B9%E4%BD%A0%E7%9A%84iwork8.html)以及为它[配置了fluent-terminal](https://gongbaodd.github.io/tech/2019/11/19/fluent-terminal%E9%80%82%E9%85%8Dgit-bash.html)，这个小本儿对我是越来越重要。\n\n哎，其实到我这岁数，折腾装系统实在没精力，但长痛不如短痛，咬咬牙，以后就能拿64位看书了。\n\n那么32位系统显然不足够的，这个平板的芯片是Intel Atom Z8300，是支持64位的，而且当初到手的时候是双系统，Windows+安卓，但是因为容量不足被我刷成了单一Windows系统。\n\n官方给了两个固件，一个是32位Windows+32位UEFI，另一个是64位Windows+64位UEFI以及安卓系统。这留给我下面几个方案：\n\n1. 用32位UEFI引导64位Windows\n2. 刷双系统，删除安卓\n3. 刷双系统，缩小安卓部分\n\n## 用32位UEFI引导64位Windows\n\n我曾经在这台机器上实现引导64位ArchLinux，只是没有触屏驱动，最终放弃。这次Windows也不是很乐观，因为Windows是闭源的，所以不知道怎么在32位机器上面编译一个64位引导，放弃。\n\n## 双系统，删除安卓\n\n删了安卓，发现启动还要等10秒的安卓引导...忍了。发现闲置的分区在Windows分区前面，无法扩展到现有分区里面。删了安卓重装Windows，发现没有触屏驱动，查找了一下是没有校准...找了很久也没找到校准的方法，放弃。\n\n安装了固件里面的install.wim，发现引导搞不定（也有可能是我的u盘的质量问题，启动总提示文件损坏）。\n\n## 缩小安卓部分\n\n找到安卓固件里面的gpt.bin，找到000360h的d列，把它改成06，贴吧里面说是1G，经我实测是4G...\n算了，最后还是给Windows省了22.5G，安装了WSL，VLC，edge，fluent-terminal，kindle，系统还剩下5G（哭，尽力了）。\n\n好了，看书工具嘛，毕竟大部分书都放在u盘里面。话说虽说64位系统的优化对这个2G内存的机器没啥实际作用，但感觉好像快乐些呢（心理作用）。","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2019/12/10/iwork8.md","slug":"2019/12/10/iwork8","body":"# 再见我的iwork8\n\nmicro-usb口接触不良，换口的时候把主板击穿了sad...\n\n感谢它陪伴我度过了4年的时光。\n\n![iwork8](https://ws1.sinaimg.cn/mw690/89d0a2e1gy1g9rhcuhc7fj20l50gan2x.jpg)\n\n这个故事告诉我们，usb otg要少用，因为接口真的不结实。\n","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2019/12/14/MiPad2-Windows.md","slug":"2019/12/14/mipad2-windows","body":"# 小米平板二代安装Windows\r\n\r\n因为我手上的iwork8被我玩坏了，当务之急我需要一款8寸左右的小平板来看书。\r\n\r\n市面上的平板8寸的已经不多，即使是有也大多是安卓板子。老实说，安卓做平板其实还是只能做玩具。自从灵动推出个人移动领域，用在移动端的i3886/amd64芯片就只有酷睿m系列了（而且价格不菲，这样的平板都得过千了）。\r\n\r\n连续看了几款，包括iwork8、EZpad mini和小米平板2（注意小米只有这一款平板是Intel的），还是选择了小米平板2.\r\n\r\n闲鱼上的小米平板2基本上由16G和64G组成，16G价格区间在250~500，64G在350~700，为了装amd64的Windows，我买了个64G版的，卖家用户密码忘了，自己不会解锁就卖出去了。\r\n\r\n刷Windows很简单，只要一个大于6GB以及type-c的优盘，格式化成FAT32，将下面链接里面的压缩包解压到优盘，插入平板重启，系统就会自动刷Windows，刷机完成的时候记得拔出U盘，否则会重装。\r\n\r\n```\r\n链接: https://pan.baidu.com/s/1We2GU0JGKkeocuRbhKFw1g \r\n提取码: hmjf\r\n```\r\n\r\n安装的Windows版本比较低，需要下载Windows更新助手更新到19年11月版本，然后就会发现，网卡挂了...\r\n\r\n不知道为什么，最新版的网卡驱动有故障，要降级，下面的链接是老版本的驱动备份，用设备管理器安装即可。\r\n\r\n```\r\n链接: https://pan.baidu.com/s/1GFfa_bEt4xjXDKc8ogKKLw 提取码: gpq2 \r\n```\r\n","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2019/12/29/keeweb.md","slug":"2019/12/29/keeweb","body":"\n# 使用 keeweb 管理密码\n\n如果说在 Aftership 工作的最大收获，应该是使用 1Password 管理自己的密码，以前自己的密码是结合网站域名和自己的固定字符串组合而成的，随着访问的站点越来越多，不得不说，还是有一点重复的。\n\n考虑到 1Password 是个收费软件，我决定参考它的开源对手，keepass。值得注意的是 keepass 拥有一个 web 客户端 keeweb，并能将你的密码库加密存储到 onedrive，google 或者私人 web 服务中。\n\n目前我用 edge 将 keeweb 打包成 PWA 应用放在任务栏上面，接下来我会逐渐迁移现有应用的密码到上面去。\n","collection":"blog","data":{"type":"post","category":"tech","tag":["keeweb"]}},{"id":"2019/12/31/WindowsTerminal2-gitBash-profile.md","slug":"2019/12/31/windowsterminal2-gitbash-profile","body":"\n# 为 Windows Terminal 2 添加 git bash 的 profile\n\n粘贴以下代码到 settings 中。\n\n```JSON\n        {\n            \"guid\": \"{00000000-0000-0000-ba54-000000000002}\",\n            \"commandline\" : \"\\\"%PROGRAMFILES%\\\\git\\\\usr\\\\bin\\\\bash.exe\\\" -i -l\",\n            \"name\" : \"Bash\",\n            \"startingDirectory\" : \"%USERPROFILE%\",\n            \"icon\" : \"ms-appx:///ProfileIcons/{0caa0dad-35be-5f56-a8ff-afceeeaa6101}.png\"\n        }\n\n```\n","collection":"blog","data":{"type":"post","category":"tech","tag":["windows-terminal"]}}]}