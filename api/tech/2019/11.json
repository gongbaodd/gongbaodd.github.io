{"posts":[{"id":"2019/11/15/wifi.md","slug":"2019/11/15/wifi","body":"# 没想到小杜wifi竟然还能用\n\n大概是我大四的时候，也就是2014年，国内的互联网公司开始发布wifi发射器。原因很简单，4G时代刚刚开始，资费高得不得了，而3G的网速还不足以满足互联网公司的需求。于是所有公司都盯上另一个技术wlan，只要有一台机器连接了网络就可以让它成为别的机器的nat，正巧联发科的2.4G的wlan模块已经很成熟了，我依稀记得当时买一个小度wifi只要16元。\n\n显然，现在小杜wifi已经没有用了，如果把它插上一台Windows10机器，系统会报找不到驱动错误，但显然还能识别出来他是个2.4G wlan模块。\n\n最近我在考虑把我的第二块屏幕连接树莓派，原因是当我的笔记本连接第二块屏幕来看视频时会占用我开发的资源，毕竟一台8GB内存+核显的机器比较难以支撑现在的开发需求。作为一个抠门的人，我并不想网购一个wifi模块，可是我确实需要一个wifi模块以保证我的树莓派保持更新，这时我注意到那个挂在我钥匙链上的小杜WiFi。\n\n执行`lsusb`查看小杜WiFi的设备号2955:1001，有意思的是百度抹掉了这个设备的其它信息，谷歌一下这是联发科的一款wlan芯片MT7601U，可以在联发科官网下载linux驱动的。但是wait for it，如果你用的是Ubuntu mate，你都不需要担心编译驱动的问题，因为它已经写入内核了。\n\n所以只需要写入Ubuntu mate到树莓派，插入小杜WiFi，然后将sourcelist的ubuntu-ports镜像改成USTC的，接下来就万事大吉了。","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2019/11/19/Window 10 Home-docker desktop.md","slug":"2019/11/19/window-10-home-docker-desktop","body":"# 怎么在Windows 10 Home安装docker desktop\n\n先说一下，在Windows上面安装docker可比Mac上面难多了，首先官网有两种docker tool，推荐的Docker Desktop竟然要求Windows Professional以上（what？）。要知道大陆没有微软官方授权的Windows Professional... 给我的选择，要么删除我的win10 home安装个破解版，或者某宝上面找了个密钥。\n\n简单搜了一下某宝，大概可以整理出以下几个版本：\n\n1. 英文官方密钥，有点贵\n\n2. 不提供密钥，提供破解方法（这种人怎么不去死）\n\n3. OEM密钥，不知道能不能用来升级\n\n4. 批量安装密钥，这个比较坑，你当时激活成功几个月后可能会被revoke\n\n最后决定...算了，用我的正版Home好得不得了。其实docker需要win10 pro的Hyper V来虚拟化Windows container，早说嘛，我又不用Windows container。那么问题就是要欺骗docker安装包我的机器是win pro就好了呗。\n\n将以下命令保存为*.cmd文件并执行可以安装Hyper V。\n\n```bash\npushd \"%~dp0\"\n\ndir /b %SystemRoot%\\servicing\\Packages\\*Hyper-V*.mum >hyper-v.txt\n\nfor /f %%i in ('findstr /i . hyper-v.txt 2^>nul') do dism /online /norestart /add-package:\"%SystemRoot%\\servicing\\Packages\\%%i\"\n\ndel hyper-v.txt\n\nDism /online /enable-feature /featurename:Microsoft-Hyper-V-All /LimitAccess /ALL\n```\n\n安装成功会提醒重启计算机，启动成功后不要着急安装，还要修改一处注册表。\n\n```\nREG ADD \"HKEY_LOCAL_MACHINE\\software\\Microsoft\\Windows NT\\CurrentVersion\" /v EditionId /T REG_EXPAND_SZ /d Professional /F\n```\n\n好了起码对于docker来说，这就是台win10机器了，接下来正常安装一直下一步，如果你的机器支持docker的话（虽然这句话有点多余，但是我有三台机器，只有一台跑起来docker了），每次启动机器会带起来docker。\n","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2019/11/19/fluent terminal-git bash.md","slug":"2019/11/19/fluent-terminal-git-bash","body":"# fluent terminal适配给git bash\n\n相信很多windows平台上的开发者都换上了fluent terminal，而且有相当的一部分用的是git-bash，另一拨人应该用的是powershell，我彩不会有多少人使用的是CMD吧。\n\n当然自从WSL发布以后，我尽量将所有Windows设备都撞上了Artix，然而WSL只支持64位系统，那意味着我手上用来看书的8寸小平板因为硬件架构只能保持在32位环境下面。\n\n当然我也不指望在一台7寸屏幕下面开发，但毕竟折腾精神永存，我也在这台设备上装上了fluent terminal，接下来就是配置它使用git-bash。如截图所示，指定执行文件为```C://Program Files/Git/bin/bash.exe```，接下来重启就可以了。\n\n![配置项](http://ww1.sinaimg.cn/mw690/89d0a2e1gy1g93k97jhn7j20zk0m8n4i.jpg)","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2019/11/26/Ubuntu.md","slug":"2019/11/26/ubuntu","body":"# 树莓派Ubuntu重启音频\n\n前一阵子重新拿起来我的树莓派用来放一些学习视频，然而发现ubuntu mate对音频处理有问题，一旦占用结束后有新的应用来占用就会有杂音，感觉ubuntu这个问题出N久了。目前我没找到更好的解决方案，只好重启一下了。\n\n```shell\n#!/bin/bash\npulseaudio -k && sudo alsa force-reload\n```","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2019/11/28/Ubuntu-sslocal.md","slug":"2019/11/28/ubuntu-sslocal","body":"\n# 树莓派 Ubuntu 实现 sslocal 负载匀衡\n\n由于某些原因，我配置了多个 ssserver，windows 客户端可以简单配置负载匀衡，而在 linux 上面需要借助 haproxy。\n\n首先，因为我的服务是 aes-255-gcm 加密方式，需要升级 ss 客户端。\n\n```shell\npip install https://github.com/shadowsocks/shadowsocks/archive/master.zip -U\n```\n\n修改 sslocal 配置，server 连接的是本地 haproxy 端口，增加/etc/shadowsocks/default.json\n\n```JSON\n{\n    \"server\": \"127.0.0.1\",\n    \"server_port\": 8888,\n    \"local_address\": \"127.0.0.1\",\n    \"local_port\": 1234,\n    \"password\": \"password\",\n    \"timeout\": 50,\n    \"method\": \"aes-256-gcm\",\n    \"fast_open\": true,\n    \"workers\": 2\n}\n```\n\n为 sslocal 增加 service，增加/etc/systemd/system/sslocal.service\n\n```ini\n[Unit]\nDescription=Shadowsocks\nAfter=network.target\n\n[Service]\nExecStart=/usr/local/bin/sslocal -c /etc/shadowsocks/default.json\nRestart=on-abort\n\n[Install]\nWantedBy=multi-user.target\n```\n\n好了，sslocal 的部分说完了，接下来 apt 安装 haproxy，修改/etc/haproxy/haproxy.cfg，增加以下行。\n\n```INI\nlisten status\n    bind *:1111\n    mode  http\n    stats refresh 30s\n    stats uri /status\n    stats realm Haproxy\n    stats auth admin:admin\n\nfrontend ss-in\n    mode tcp\n    bind *:8888\n    default_backend ss-out\n\nbackend ss-out\n    mode tcp\n    option tcp-check\n    balance roundrobin\n    server xxx <server>:<port> check\n    server yyy <server>:<port> check\n    server zzz <server>:<port> check\n```\n\n配置完成还要改一下 systemd，/etc/systemd/system/haproxy.service，修改 After 和 Wants 字段，用 network-online.target 替换 network.target。\n\n最后用 systemd 启动 haproxy 和 sslocal。\n\n```shell\nsudo systemd enable haproxy\nsudo systemd enable sslocal\n```\n\n**_参考链接_**\n\n[求教如何让 ss 客户端支持 aes-256-gcm 加密方式](https://www.ubuntukylin.com/ukylin/forum.php?mod=viewthread&tid=188059)\n\n[guyskk/shadowsocks-server.service](https://gist.github.com/guyskk/a9665bc6b2a89b73fae34678b1f6dc6b)\n\n[多 Shadowsocks 服务器负载均衡](https://www.solarck.com/haproxy-shadowsocks-balance.html)\n\n[解决 Haproxy 用 Systemd 启动失败的问题](https://www.solarck.com/systemd-wait-network-online.html)\n","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2019/11/28/windows powertoy.md","slug":"2019/11/28/windows-powertoy","body":"\n# 安利一下 Windows Powertoy\n\n这是最近 Windows 开源的一个应用，可以拓展 Windows 的一些功能，比如下图的 Fancy zones，可以提高 Windows 的分屏功能。\n\n![fancy zones](https://ws1.sinaimg.cn/mw690/89d0a2e1gy1g9drryez7hj22gu1bo4dr.jpg)\n\n可惜目前只支持 x64 平台，但是 github 上面已经有[issue](https://github.com/microsoft/PowerToys/issues/413)跟踪了。\n\n目前还不能在 Windows 商店里面安装，可以利用 chocolatey 安装。\n\n```batch\nsudo choco install powertoys\n```\n","collection":"blog","data":{"type":"post","category":"tech","tag":["windows"],"series":{"slug":"windows-howto","name":"Windows舒适指南"}}}]}