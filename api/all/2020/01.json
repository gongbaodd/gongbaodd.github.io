{"posts":[{"id":"2020/01/03/2019-Node.md","slug":"2020/01/03/2019-node","body":"\n# 2019 年的 Node 测试最佳实践\n\n这其实不是一篇总结文档，而是一个笔记，基于[NodeJs && JS testing best practise](https://medium.com/@me_37286/yoni-goldberg-javascript-nodejs-testing-best-practices-2b98924c9347)。\n\n比较有趣的是，[Stryker Mutator](https://stryker-mutator.io/)这个工具，可以用来做 mutation testing，简单说，一般测试工具只能保证代码经过了分支，这个工具可以通过修改部分代码逻辑（比如把 true 改成 false）来判断代码是否还会经过这个逻辑。\n\n再一个就是[License Checker](https://www.npmjs.com/package/license-checker)和[plagiarism check](https://www.npmjs.com/package/plagiarism-checker)，就是避免自己养肥了被别人割韭菜。\n","collection":"blog","data":{"type":"post","category":"fe","tag":["test"]}},{"id":"2020/01/04/gitBash.md","slug":"2020/01/04/gitbash","body":"\n# GitBash 增加环境变量\n\nWSL 的运行速度比较慢，所以我在 windows 下面的开发很大一部分还是在 GitBash 下面，GitBash 基于 mingw 开发，所以直接修改.bashrc 即可\n\n```\nPATH=$PATH:/c/Program\\ Files/nodejs\nalias python='winpty python.exe'\nalias ubuntu='winpty ubuntu.exe'\n```\n\n这里注意下，因为 python 和 Ubuntu 是从应用商店安装的，直接修改 PATH 变量会有权限问题，只能利用 winpty 调用。\n","collection":"blog","data":{"type":"post","category":"tech","tag":["git"]}},{"id":"2020/01/04/kindle-pdf.md","slug":"2020/01/04/kindle-pdf","body":"\n# 转换 kindle 书籍到 pdf\n\n自从习惯用讯飞听书之后，我就很少看书了。如果是 pdf 的话，就在 Windows 上面拿 edge 读给我听，可问题是 kindle 上面很多书加了设备锁，只能在 kindle 上面看，而 kindle 的 TTS 功能实在太差，查了一下，Calibre 是有[DeDRM 插件](https://github.com/apprenticeharper/DeDRM_tools)的。\n\n解压缩插件，在 Calibre 中点击首选项->插件->从文件加载插件，选中解压好的 zip 文件。\n\n之后在插件中找到 DeDRM，把自己的产品序列号输入进去（在亚马逊我的设备中可以找到），之后转换 azw 文件就不会有问题了。\n","collection":"blog","data":{"type":"post","category":"tech","tag":["kindle"]}},{"id":"2020/01/05/CloudFlare-https.md","slug":"2020/01/05/cloudflare-https","body":"# 利用CloudFlare实现网站https访问\n\n## 配置DNS指向CloudFlare\n\n首先登入CloudFlare的时候，会被要求更改网站的DNS为cloudflare中。需要登入到自己网站的域名配置中修改DNS到CloudFlare下。\n\n配置成功后，收到CloudFlare的确认邮件，打开DNS，将Proxy status都打开。\n\n## 配置https-only\n\n打开CloudFlare的TLS选项，选择encryption mode为flexible，就是服务器到cloudflare不加密（只要cloudflare不作恶，我就OK），在Edge Certificates里面选择Always use https即可。\n\n## 配置防火墙只允许cloudflare的IP\n\n这里没配置成功，留个坑以后补全。\n\n安装firewalld\n\n```\nsudo apt install firewalld\nsudo systemctl start firewalld\nsudo systemctl enable firewalld\n```\n\n接下来执行以下脚本为cloudflare增加至白名单\n\n```shell\n!#/bin/bash\n\nfor i in $(curl \"https://www.cloudflare.com/ips-v4\");\ndo\nsudo firewall-cmd --permanent --zone=public --add-rich-rule='rule family=\"ipv4\" source address=\"'$i'\" port port=80 protocol=tcp accept';\nsudo firewall-cmd --permanent --zone=public --add-source=$i;\ndone\n\nfor i in $(curl \"https://www.cloudflare.com/ips-v6\");\ndo\nsudo firewall-cmd --permanent --zone=public --add-rich-rule='rule family=\"ipv6\" source address=\"'$i'\" port port=80 protocol=tcp accept';\nsudo firewall-cmd --permanent --zone=public --add-source=$i;\ndone\n\nsudo firewall-cmd --permanent --change-zone=eth0 --zone=public\n\nsudo firewall-cmd --reload\n\nfirewall-cmd --zone=public --list-all\n```","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2020/01/06/Windows-Jupyter-NotImplementError.md","slug":"2020/01/06/windows-jupyter-notimplementerror","body":"\n# 修复 Windows 下打开 Jupyter 报 NotImplementError\n\n打开`/c/Users/{USER_NAME}/AppData/Local/Programs/Python/Python38/Lib/asyncio/__init__/py`.\n\n修改\n\n```python\nif sys.platform == 'win32':\n    from .windows_event import *\n    __all__ += windows_events.__all__\n```\n\n改为如下\n\n```python\nimport asyncio\n\nif sys.platform == 'win32':\n    from .windows_event import *\n    asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())\n    __all__ += windows_events.__all__\n```\n","collection":"blog","data":{"type":"post","category":"tech","tag":["jupyter"]}},{"id":"2020/01/12/Opera-Dance-Dance-Notre-Dame.md","slug":"2020/01/12/opera-dance-dance-notre-dame","body":"# 歌舞剧「巴黎圣母院」\n\n因为朋友过年要出国年会，赶不上这场歌舞剧，我就直接接手了。\n\n故事就是巴黎圣母院，吉普赛人女主在举行于巴黎圣母院外的选丑盛会上跳舞，被愚人王卡西莫多、教堂的主教、护卫队队长看到。女主和护卫队长一见钟情，却不知道护卫队长已经结婚。主教明面安排敲钟人卡西莫多去抓女主，实则为了假装英雄救美把拘捕卡西莫多。\n\n女主本性善良，看到诗人因为传唱嘲讽主教的诗被抓捕，对外宣称诗人是自己的丈夫。卡西莫多被拘捕示众，女主为其送水，卡西莫多因此爱上女主。主教为了得到女主，借助女主和护卫队长幽会的机会暗杀护卫队长。受伤的护卫队长认为这是因为女主的巫术迷惑了她才导致自己受伤。主教趁机抓捕了女主和吉普赛人。\n\n主教威胁女主，女主宁死不从，依然爱着护卫队长。卡西莫多放出吉普赛人救出女主。女主只能白天躲在教堂里，晚上溜出来。主教杀死女主哥哥引她出来，并审判以绞刑。施刑当天，卡西莫多终于搞清主教阴谋，将主教推下教堂摔死。然而为时已晚，女主已死，卡西莫多自杀死在女主身边。\n\n美女与野兽的成人版，护卫队长那个渣男...\n\n全程法语，最后还要法语合唱大教堂啊，好在提前在B站上面预习了一下。","collection":"blog","data":{"type":"post","category":"life"}},{"id":"2020/01/13/Website Scraping with Python.md","slug":"2020/01/13/website-scraping-with-python","body":"\n# Website Scraping with Python\n\n## Parsing robots.txt\n\npage 28\n\n## Using Beautiful Soup\n\n用来解析 HTML\n\n- page 56 - 使用\n- page 101 - 利用 strainer 只解析想要的数据\n\n## Exporting the Data\n\n- page 80 - CSV\n- page 87 - JSON\n- page 90 - SQLite\n- page 97 - MongoDB\n\n## Using Scrapy\n\n- page 111\n\n## Handling JavaScript\n\n- page 186 - Splash\n- page 196 - Selenium\n\n## Cloud\n\n- page 206 - [Scrapy Cloud](https://scrapinghub.com/scrapy-cloud)\n  - page 211 - [mlab](https://mlab.com/)\n- page 216 - [PythonAnywhere](https://www.pythonanywhere.com/)\n","collection":"blog","data":{"type":"post","category":"book"}},{"id":"2020/01/15/Static-phylical-scope.md","slug":"2020/01/15/static-phylical-scope","body":"\n# 静态词法作用域\n\n最近在看 rust，里面提到静态词法作用域，一个神奇的 deja-vu，于是我急忙查了下它是啥。\n\nrust 和 js 都是静态词法作用域，简单说，作用域中的变量在编译时已经确定，不会随着运行时变化而变化。\n\n```javascript\nvar a = 1;\n\nfunction foo() {\n  var a = 2;\n\n  bar();\n}\n\nfunction bar() {\n  console.log(a);\n}\n\nfoo(); // print 1\n```\n\n而相对的 shell 就是动态作用域。\n\n```shell\nvalue=1\n\nfunction foo() {\n    local value=2;\n    bar;\n}\n\nfunction bar() {\n    echo $value;\n}\n\nfoo;# print 2\n```\n\n动态作用域被广泛应用于早期动态语言，猜测是早期运行环境内存比较少不能装拿这么多东西吧。\n","collection":"blog","data":{"type":"post","category":"tech","tag":["compilers"]}},{"id":"2020/01/16/rust.md","slug":"2020/01/16/rust","body":"# rust编程之道\n\n这是一本大概是我18年买的书，当初是打算紧随Mozilla的脚步学习使用Rust，然而这本书显然不太适合那个时代的我学习。当时我只是个完全的前端，过了第3章类型管理的时候基本上就是一脸懵逼。\n\n可以说经过19年一年的后端工程师工作，我是更加了解关于线程、内存管理之类的概念。而且由于过去一年读了RxJS，对函数编程范式更加了解。另外在18年中旬，我是完全的面向对象范式追随者，对于Rust里面的一些范式显然不是很理解。\n\n这本书讲得很全面，可以说，如果拿里面的某些章节详细写出来就可以做大学教材了。但是弊端肯定是有的，比如Rust的应用，这里基本上没提，不过也可以谅解，毕竟就是在这本书出版后两年的今天，要说Rust的存在感依然很低；另外，很多作者用的很习惯的词汇往往会漏注释，毕竟我不是专门抽出一段时间来看这本书的，乍一看某个缩写还真难回忆它对应语境里面应该是什么。\n\n## 笔记\n\nrust虽然使用类C语法，但是很多地方真的和C语言及其它语言大相径庭。\n\n比如用来代替interface的trait系统\n\n```typescript\n// typescript\ninterface A {\n    bar()\n}\n\nclass B implements A {\n    bar() {\n\n    }\n}\n```\n\n在Rust中\n\n```rust\nstruct B {\n\n}\n\nimpl A for B {\n    fn bar() -> () {\n\n    }\n}\n```\n\n第182页提供了trait系统的不足，当时没看懂，以后回来看好了。\n\n另外259页生命周期参数，比较复杂，个人感觉等用到的时候再看吧。\n\n322页和361页，关于原生闭包和迭代器语法糖的第三方实现。\n\n435页RAII模式，以后抽时间看把。\n\n727页，无状态协程async/await语法糖实现。\n\n","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2020/01/22/Movie-supplementary-plan-Confession.md","slug":"2020/01/22/movie-supplementary-plan-confession","body":"\n# 电影补档计划： 告白\n\n![告白](https://img9.doubanio.com/view/photo/l/public/p689520756.webp)\n\n松隆子饰演的女教师女儿被两个学生残忍虐杀，然而两个男生却因为少年保护而幸免于责罚。教师离职前向全班宣布她在男生的牛奶里加入艾滋病血液。\n\n很快男生 B 精神错乱，女教师联系到新一任教师不断刺激男生 B 以至于最终男生 B 杀死生母被捕。男生 A 有强烈恋母情结，得知生母嫁人，新生恨意，打算炸死全校学生。女教师偷走炸弹安装到男生 A 母亲办公室里，最终男生 A 炸死了自己的亲生母亲。\n\n除了情节安排震惊，因为导演是中岛哲也（之前提过，被嫌弃的松子的一生也是他的），电影画面极具视觉感，很值得推荐。\n","collection":"blog","data":{"type":"post","category":"movie"}},{"id":"2020/01/28/spotify.md","slug":"2020/01/28/spotify","body":"\n# 白嫖 spotify 的方式\n\n今年开始，我不再在家办公，这使得我的网络环境不是很稳定，无法一直在线听 spotify。最好的办法，自然是把要听的音乐缓存下来。\n\nGitHub 里面有一个 python 项目[spotify-downloader](https://github.com/ritiek/spotify-downloader)可以下载 spotify 的音频。\n\n利用 pip 安装\n\n```shell\npip install spotdl\n```\n\n因为是国内使用，需要代理\n\n```shell\nenv https_proxy=http://127.0.0.1:1080 spotdl --song http://open.spotify.com/xxx\n```\n\n另外，spotdl 支持列表下载\n\n```shell\nspotdl --playlist [listUrl] # to get all songs' url\nspotdl --list list.txt # to download the songs\n```\n","collection":"blog","data":{"type":"post","category":"tech","tag":["spotify"],"series":{"slug":"windows-howto","name":"Windows舒适指南"}}},{"id":"2020/01/31/monect.md","slug":"2020/01/31/monect","body":"\n# Monect 让手机变成鼠标\n\n自从我的 XPS 键盘坏了，我就打算使用 K380 键盘替代我的笔记本键盘，然而这样使用触摸板就很困难。\n\n很久之前我就想让手机成为我的远程键盘，以前用 Linux 的时候有一个 KDE connect 可以实验通过 wifi 链接。但是因为我住的公寓 wifi 貌似会阻拦互相发现，最好的办法还是用蓝牙链接。去年稍稍了解了一些 blueman 的相关知识，其实蛮有意思的，可惜拖延症没有继续下去（确实比较有意思，苹果曾开发过一个协议，通过商场蓝牙派发广告）。\n\n回到正题，可以通过 Monenct 官网下载 PC 的 host，在 play store 下载 client，monect 支持 wifi、蓝牙以及 usb 链接。这样即使有一种连接方式暂时不可用其他方式能够立马替换。\n","collection":"blog","data":{"type":"post","category":"tech","series":{"slug":"windows-howto","name":"Windows舒适指南"}}}]}