{"posts":[{"id":"2023/07/30/30th-week-shader.md","slug":"2023/07/30/30th-week-shader","body":"# 30th week shader\n\n## CSS in JS is back\n\n[Kuma UI](https://www.kuma-ui.com/) is a compiler time CSS in JS library. It is a better alternative to Tailwind CSS. It can be used with [Panda CSS](https://panda-css.com/)\n\n## NextJS & Remix\n\nCompared NextJS and Remix. Remix is fully server rendered.\n\n## Use Preact with react-babylonjs\n\n[preact-reconciler](https://github.com/CodyJasonBennett/preact-reconciler) is an adapter for Preact to work with react-babylonjs or R3F.\n\n## WebXR\n\n[Mixed Reality Resources](https://github.com/Yonet/MixedRealityResources) collects the datas about XR resources. Can download some library on it.\n\nThis is an XR input [playground](https://playground.babylonjs.com/#X7Y4H8) for BabylonJS.\n\nUsing WebXR on phone is hard. It is only supported on Chrome Canary. It is not working on Safari even opened the experimental features.\n\nTesting the web on mobile need a cable connect. But there is a JS console [Eruda](https://github.com/liriliri/eruda) can help.\n\nAnother choice is to use [Babylon React Native](https://github.com/BabylonJS/BabylonReactNativeSample), which uses React Native as a bridge to use ARcore or ARkit. Sadly Oculus dose not support ARcore. However, it seems Oculus uses React Native on it's [Home Launcher](https://reactnative.dev/blog/2021/08/26/many-platform-vision). And they are working on supporting Vision OS.\n\n[This](https://www.callstack.com/campaigns/download-the-ultimate-guide-to-react-native-optimization) is a book about React Native.\n\n## BabylonJS\n\nTo make an orthographic camera in BabylonJS, can refer to this [link](https://forum.babylonjs.com/t/how-to-use-orthographic-view-in/29733).\n\n[CYOS](https://cyos.babylonjs.com/) is a BabylonJS shader editor.\n\n[BabylonJS Viewer](https://doc.babylonjs.com/features/featuresDeepDive/babylonViewer) uses web component to build a 3D viewer.\n\nCan use [Poly Pizza](https://poly.pizza/) to download mesh models.\n\nCan download free shaders on [ShaderToy](https://www.shadertoy.com/).\n\n## AI generated SVGs\n\nUsing [Craft AI](https://www.recraft.ai/), can make AI generated SVGs for free. [This](https://www.nan.fyi/) is a blog about SVG paths, maintainer is a vercel employee.\n\n## Crash an SVG path on WebGL\n\n[This](https://css-tricks.com/rendering-svg-paths-in-webgl/) is a threeJS example to render SVG path on WebGL with shaders. I am trying to make it work on BabylonJS and learn how to write shaders.\n\n[This](https://www.youtube.com/watch?v=oKbCaj1J6EI&ab_channel=Visionary3D) is a crash course about shaders.\n\nTo make vertex change without shader, can refer to this [link](https://doc.babylonjs.com/features/featuresDeepDive/mesh/creation/custom/updatingVertices).\n\nAbout how to use a node editor can refer to [this](https://doc.babylonjs.com/features/featuresDeepDive/materials/node_material/nodeMaterial)\n\nThis is an [example](https://playground.babylonjs.com/#026IT4#1) to send attribute data to shader using instanceBuffer.\n\nThis is a nice [tutorial](https://www.smashingmagazine.com/2016/11/building-shaders-with-babylon-js/) about how to write shaders in BabylonJS.\n\n[This](https://playground.babylonjs.com/#1OH09K#1672) is a firework effect using shader.\n\n[A fancy Babylon Effect](https://codepen.io/daledesilva/pen/ZEmrrYX) I want to figure out.\n\n## run JS in compiling time\n\nSince React Server Component runs component on server, I was thinking to run a component on compiling time. [This plugin](https://github.com/egoist/vite-plugin-compile-time) can do that.\n\nAlso there is [a plugin](https://github.com/unjs/unplugin) to help build a universal plugin for Vite, Rollup, Webpack and more.\n\n","collection":"blog","data":{"type":"post","category":"plan"}}]}