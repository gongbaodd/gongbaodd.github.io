{"posts":[{"id":"2018/06/01/Summary-in-May-18th.md","slug":"2018/06/01/summary-in-may-18th","body":"# 一八年五月总结\n\n这一个月大部分是旅行，然后用了一周左右的时间处理离职和社保代缴的事情，最后找到了人人保交了三个月的社保，最后一周复习了一下blender，大概这个月就结束了。\n\n## 六月目标\n\n用 blender 建模一个人物形象，有简单的肢体动作，表情，最好对衣服做简单的布料处理。目标是能够将这个 3D 人物应用于网站和软件中。\n\n背完《雅思写作360句》，雅思写作分数太低了，必须要入手提高这一点了。\n\n每天跑步10km，争取控制到1h里面。\n\nGraphql 和 nestjs 重新建设我的个人网站，因为现在的网站已经挂了。\n\n写一个微信小程序，可惜目前还没想好写啥。。。\n\n了解 ReactNative 的底层实现，并实现使用 kotlin 调用之。\n\n学习谷歌 tensorflow 教程。\n\nradioactive 口琴 + ukulele 联系熟练\n\n新标日完成上册","collection":"blog","data":{"type":"post","category":"life"}},{"id":"2018/06/03/linuxMint.md","slug":"2018/06/03/linuxmint","body":"# LinuxMint 修改移动窗口快捷键\n\nAlt 在 blender 中很重要，所以要修改 LinuxMint 的 keyBinding\n\n打开 DConfig，点击 org > cinnamon > desktop > wm > preferences， 修改  mouse-button-modifier 中 <Alt> 为 <Super>","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2018/06/14/jupyter.md","slug":"2018/06/14/jupyter","body":"\n# Jupyter 的使用\n\n## 配置 Docker\n\n安装很容易，记住每次使用 docker 的时候要启动 deamon 服务，其实不建议默认打开，因为 docker 会常驻 8888 端口，这样 charles 就不好抓包了。\n\n还需要把本地用户加到 docker 组里\n\n```shell\ngpasswd -a $USER docker\n```\n\n加速服务可以用阿里云的，相关帮助已经很清楚了。\n\n## 安装并运行 jupyter\n\n```shell\n\n    docker pull jupyter/base-notebook\n\n    docker run -P jupyter/base-notebook\n\n```\n\n运行 Docker run 之后会有一大堆 http://xxxx:8888/?token=xxxx 的日志。\n\n执行`docker ps`查看哪个端口被映射了，替换地址为 localhost:【端口】即可。\n\n## 使用 jupyter\n\n直接新建 python3 文件，可以直接运行代码了，使用`Ctrl+Enter`组合执行代码。\n\n- `a`插入行\n- `b`在行后插入\n- `x`删除行\n\n## 安装 tensorflow\n\n哈哈官方版本有[tensorflow-notebook](https://hub.docker.com/r/jupyter/tensorflow-notebook/)\n\n这样就可以直接学习 tensorFlow 啦\n","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2018/06/22/Meteor-ToDoAPP.md","slug":"2018/06/22/meteor-todoapp","body":"# 使用 Meteor 快速搭建TODO APP\n\n代码在 https://github.com/gongbaodd/MeteorTodoAPP 这里做一下简单记录。\n\n## 把冰箱门打开\n\n```shell\nmeteor create app\n```\n\n打开 app 文件夹，可以看到 meteor 项目了，官网有各个文件夹的说明， 在此不赘述。\n\n```shell\nmeteor\n```\n\n可以在 localhost:3000 看到初始项目了。\n\n到```.meteor/package```下删除autopublish 和 insecure，添加 apollo 和 accounts-passwd\n\n## 把大象放进去\n\n下面记录一下踩到的坑。\n\n### CSS\n\ncss很尴尬，我想用postcss，但貌似meteor的postcss包并不是很给力。自带的css的打包功能貌似不能用（起码我没整出来）。好在 ecmascript 包可以引用 css。\n\n项目直接使用了bulmaCSS， 很方便。\n\n### Apollo增加用户token\n\n要用到Apollolink，在请求头里面添加meteor-login-token，在后面的 resolver 里面的 context 对象里面就有 userId 这个值了。\n\n```JavaScript\nconst apolloLink = new ApolloLink(\n    (operation, forward) => {\n        const token = Accounts._storedLoginToken();\n        operation.setContext(\n            _ => ({\n                headers: {\n                    'meteor-login-token': token,\n                }\n            })\n        );\n        return forward(operation);\n    }\n);\n```\n\n### Graphql\n\ngraphql文件修改了并不能触发重启，而且有的时候甚至一直读缓存而不在乎文件有修改，要把 makeExecutableSchema 参数做修改之后才能正常运行。\n\n## 总结\n\n用 Meteor 做项目的确是目前我知道的最快速了，主要是不用考虑数据库的种种，要知道，即使是黑盒，对于前端工程师来说，数据库还是很少触碰的。\n\nGraphql，最大的优势就是给接口做了个强制定义，以后不必去维护什么v1、v2的接口了。\n","collection":"blog","data":{"type":"post","category":"fe"}},{"id":"2018/06/24/redbird.md","slug":"2018/06/24/redbird","body":"\n# 用 [redbird](https://github.com/OptimalBits/redbird) 代替 nginx \n\n我的网站都是拿 nginx 做反向代理，但是 ng 反向代理很麻烦， 而 redbird 是个不错的替代，里面的人哥哥牛逼，语法又好听，非常推荐。","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2018/06/28/The-current-cloud-service-available.md","slug":"2018/06/28/the-current-cloud-service-available","body":"# 目前可用的云服务\n\n今天收到邮件，原因是我的域名没备案。。。\n\n汗，不是故意不备案的，主要还是懒（囧）。既然国内不备案不能用那么就试试看有什么云服务（其实照以前第一反应就该是云服务，可惜现在有钱买机器了，反倒迟钝了）。\n\n## Heroku\n\n之前听说被墙了，没想到还能用，安装heroku-cli就能用了很方便。\n\n## Leancloud\n\n国内的heroku，文档都是中文的，基本上还能当firebase使唤。","collection":"blog","data":{"type":"post","category":"tech"}}]}