{"posts":[{"id":"2018/12/01/18.md","slug":"2018/12/01/18","body":"\n# 18 年最后一个总结和展望\n\n## 说说过去这个月吧\n\n我换平板了，跟了我 3 年的 iwork 8 终于被我宣判退休，没办法啊 x86 的系统，2GB 内存，32GB 的硬盘，实在不能支持现在的工作啊。\n\n新平板还是酷比魔方的，mix plus 虽说做工不怎么样，可是价格真香。128GB 硬盘，4GB 内存，电磁屏幕，重要的就是这个屏幕，1024 级压感，画画不在话下。\n\n除了平板，还要推荐一个网站，[all IT Ebooks](http://allitebooks.com/)，里面都是 manning 的书，一直更新到 2018 年。\n\n再安利一个软件，欧路词典，小伙伴拿它工作的，那个单词本不错，正好我可以按照看的书来分配单词本了。\n\n这个月去了大鹏湾团建，逛完了南头古城和油画村，读完了《上一堂好玩的日本学》。\n\n交了北北杳这个朋友～\n\n## 12 月\n\n18 年还有一个月了，这一年真的是充实，年中对下半年的计划基本是泡汤了。。。\n\n那么最后这个月做啥呢？ 既然下载了那么多 manning 的书，不如一本一本看起来，就从 syntax.fm 推荐的《react in action》开始吧。\n\n嚷嚷了那么久逛逛广东，这个月也该开始了，年中计划虽然没有达成，好歹年初的除了玩都差不多了（看来日语是真废了）。\n","collection":"blog","data":{"type":"post","category":"plan"}},{"id":"2018/12/02/The-Guangzhou-trip-without-a-guide.md","slug":"2018/12/02/the-guangzhou-trip-without-a-guide","body":"# 没做攻略的广州行\n\n## 广东省博物馆\n\n适逢很多馆维护，基本上也没看啥\n\n## 北京路\n\n老房子 + 人多\n\n## 地铁\n\n人多\n\n## 珠江新城\n\n碰巧灯光秀，人山人海，各种封路\n\n## 大沙头码头\n\n和柚子找来找去，终于找到个清闲地儿，从东湖大沙头码头坐船游珠江。\n\n## 上下九步行街\n\n大清早都不开门，等到十点才逐渐有人，吃了利航欧巴推荐的陈添记鱼皮（惊为天人地好吃～）\n\n## 城际返程\n\n和来一样79的城际高铁，将近两个小时就回南山啦。","collection":"blog","data":{"type":"post","category":"life"}},{"id":"2018/12/04/Remember-the-lesson-of-a-cold.md","slug":"2018/12/04/remember-the-lesson-of-a-cold","body":"# 记一次感冒的教训\n\n以后每天要喝牛奶，任何能量饮料都比不上的牛奶啊！","collection":"blog","data":{"type":"post","category":"life"}},{"id":"2018/12/16/postman-prescript.md","slug":"2018/12/16/postman-prescript","body":"# postman的prescript对异步代码支持不足\n\n用过postman做集成测试的话，有个prescript功能很不错，就是在执行发送请求之前要执行的脚本。\n\n我曾经以为这个prescript是直接运行的一个js脚本，执行完之后发送请求。但是貌似postman里面处理异步逻辑与v8有所不同。如果你想先发送一个POST请求，然后执行postman的PATCH请求，中间在加一个大概1s的delay，如下代码竟然能实现！\n\n```javascript\n// prescript\npm.sendRequest({...});\nsetTimeout(() => {}, 1000);\n```\n\n这个prescript其实是会对异步代码进行超时处理。无论是多层callback还是promise还是async，但唯独对setTimeout无效。\n\n```javascript\n// callbacks\npm.sendRequest({}, () => {\n    pm.sendRequest({}, () => { ... }); // 这一步回调可能会超时中断\n})；\n```\n\n```javascript\n// promise\nconst req = () => new Promise(res => {\n    pm.sendRequest({}, () => res());\n});\n\nPromise.resolve()\n    .then(req({ ... }))\n    .then(req({ ... }));// 这一步可能会超时中断\n```\n\n```javascript\n// async - await\nconst req = () => new Promise(res => {\n    pm.sendRequest({}, () => res());\n});\n~ async function() {\n    await req({ ... });\n    await req({ ... });// 这一步可能会超时中断\n} ();\n```\n\n因为只要setTimeout的timer不释放prescript就不会被超时中断，可以借助这一点防止prescript超时。\n\n```javascript\nconst TIME_OUT = 200;\nfunction stop() {\n    if (stop.done) {\n        return clearTimeout(stop.timer);\n    }\n    stop.timer = setTimeout(arguments.callee, TIME_OUT);\n}\nstop.done = false;\nstop.timer = setTimeout(stop, TIME_OUT);\n```\n\n想要停止代码的话，只需把stop.done设置为true就可以了。\n","collection":"blog","data":{"type":"post","category":"fe"}},{"id":"2018/12/24/18.md","slug":"2018/12/24/18","body":"# 这可能是18年的最后一次出游了，香港，我来了！\n\n![去bilibili看吧](https://www.bilibili.com/video/av38877321/)","collection":"blog","data":{"type":"post","category":"life"}},{"id":"2018/12/25/CSS.md","slug":"2018/12/25/css","body":"# 两个学习CSS布局的小游戏\n\n## Grid Layout\n\n[CSS Grid Garden](http://cssgridgarden.com)\n\n![CSS Grid Garden](http://ww1.sinaimg.cn/mw690/89d0a2e1gy1fyirzvparkj21mw0vkn3d.jpg)\n\n## Flexbox Layout\n\n[CSS Flexbox Froggy](https://flexboxfroggy.com/)\n\n![CSS Flexbox Froggy](http://ww1.sinaimg.cn/mw690/89d0a2e1gy1fyis1ajl89j21n20qcafs.jpg)","collection":"blog","data":{"type":"post","category":"fe"}}]}