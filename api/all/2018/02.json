{"posts":[{"id":"2018/02/03/webpack-nestjs.md","slug":"2018/02/03/webpack-nestjs","body":"# Webpack + NestJS 全栈自动刷新\n\n> 本来想写热启动, 算了, 其实就是刷新了, 实事求是点好.\n\n去年我单位所有项目进入前后端同构的状态, 主要的工具是 NestJS 和 React,\n但还没有做过热启动, 反正开始重写主页了, 顺带着做一下.\n\n## NestJS 自动刷新\n\nNestJS 本身就利用 Nodemon 实现了文件修改后自动重启.\n\n```javascript\n{\n    \"watch\": [\n        \"src\"\n    ],\n    \"ext\": \"ts\",\n    \"ignore\": [\n        \"src/**/*.spec.ts\"\n    ],\n    \"exec\": \"node ./dev/index\"\n}\n```\n\n利用 ts-node 开发速度也比编译后再开发快很多\n\n## NestJS 无缝使用 Express\n\nNestJS 虽然基于 Express, 但是语法和 Express 区别很大, 好在可以直接把 Express 的实例作为子类使用\n\n```typescript\nasync function bootstrap() {\n    const instance = express();\n    instance.use(morgan(\"short\")); // 一个日志中间件\n    const app = await NestFactory.create(\n        ApplicationModule,\n        instance,\n    );\n    await app.listen(8080);\n}\n```\n\n## Webpack 自动刷新\n\nwebpack 自动更新, 简单地说就是用 webpackDevMiddleware 代替 express.static.\n\n先给js里面加上webpack-hot-middleware/client, 这里偷下懒, 每次 index.tsx 更新后页面都会重启.\n\n```javascript\n// webpack.config.js\nmodule.exports = {\n    entry: [\n        \"./src/public/index.tsx\",\n        \"./node_modules/webpack-hot-middleware/client.js?reload=true\"\n    ],\n    output: {\n        path: path.resolve(__dirname, \"./dist/public/\"),\n        filename: \"index.js\",\n        publicPath: \"/public\"\n    },\n}\n```\n\nserver 部分, 要把 express.static 注释掉\n\n```typescript\nconst webpackConfig: webpack.Configuration = webpackRawConfig as any;\nconst webpackCompiler = webpack(webpackConfig);\nconst webpackDevConfig: webpackDevMiddleware.Options = {\n    publicPath: webpackConfig.output.publicPath,\n};\n\ninstance.use(webpackDevMiddleware(webpackCompiler, webpackDevConfig));\ninstance.use(webpackHotMiddleware(webpackCompiler));\n```\n\n***nodemon 别加 tsx, 编译起来真的很慢***","collection":"blog","data":{"type":"post","category":"fe"}},{"id":"2018/02/06/TexturePacker.md","slug":"2018/02/06/texturepacker","body":"# 用 TexturePacker 做雪碧图\n\n在 setting 里面选择格式, 如 PixiJS, 然后点击 Publish Sprite Sheet 会生成对应的 png 和 json","collection":"blog","data":{"type":"post","category":"fe"}},{"id":"2018/02/07/Webpack.md","slug":"2018/02/07/webpack","body":"# webpack 前端热更新\n\nWebpack仅仅实现前端热更新要比前后端同构简单得多, sourceMap 是必须加的, 用来判断哪些文件更新.\n\n```typescript\n// webpack.config.ts\nimport * as webpack from \"webpack\";\nimport * as path from \"path\";\n\nconst config: webpack.Configuration = {\n    entry: [\n        \"./src/index.tsx\",\n    ],\n    output: {\n        path: path.resolve(__dirname, \"./public\"),\n        filename: \"index.js\",\n        publicPath: \"/public/\",\n    },\n    module: {\n        loaders: [\n            {\n                test: /\\.tsx?$/,\n                loader: \"ts-loader\",\n                exclude: /node_modules/\n            }\n        ]\n    },\n    devtool: \"source-map\",\n    devServer: {\n        hot: true,\n    },\n    plugins: [\n        new webpack.NamedModulesPlugin(),\n        new webpack.HotModuleReplacementPlugin(),\n    ]\n}\n\nexport default config;\n```","collection":"blog","data":{"type":"post","category":"fe"}},{"id":"2018/02/08/PreactCSSTransation.md","slug":"2018/02/08/preactcsstransation","body":"# PreactCSSTransation 的使用\n\n项目地址 http://gongbushang.com:3000/gongbushang/animateCSSplayground\n\n## 结合 animate.css\n\n## 结合 preact-router\n","collection":"blog","data":{"type":"post","category":"fe"}},{"id":"2018/02/09/About-innovation.md","slug":"2018/02/09/about-innovation","body":"# 关于创新\n\n创新真的很难，踏花归来马蹄急，王希孟能在马蹄上画飞蝶，换做别人指不定要熏香了。\n\n前一阵子，我看到了一个html5实现印章的视频，猜想是forcetouch还是什么新的API，比如能获取到受力面的功能，翻了MDN并没找到什么新API，结果这个例子是拿多点触控实现的。好主意啊，哪怕是只有两点就可以对应到无数个图章了，何况现有设备真的不止两点触控。\n我又想到了任天堂新出的labo，谁也不知道它会拿一堆破纸壳对付别家的精密仪器。\n\n其实，并不是说研发新的设备或者方法，“革”老习惯的命就不是创新了，可是如果能利用现有资源做的创新可比那些革命者灵气多了","collection":"blog","data":{"type":"post","category":"life"}},{"id":"2018/02/10/FontAwesome-5.md","slug":"2018/02/10/fontawesome-5","body":"# FontAwesome出5啦\n\nQunar的很多图片都是用iconfont实现的,\n我们有一套类似于fontawesome网站的[yicon](https://yicon.ymfe.org),\n\n然而当初构建的时候,对于使用iconfont还是svg是很受争议的.\n其结果自然iconfont胜出,而那时我见识到了svg对于制作模块化图标,\n甚至是动画图标的潜力(SMIL,很遗憾后来为了CSS3,这一功能基本上无人问津了)\n,这些对于svg唯一的缺点就是兼容性了.\n\n看到FontAwesome的第5个版本推荐使用svg, 马上拿过来试试.\n\n[参考代码](http://gongbushang.com:3000/gongbushang/fontAweSome5Playground)\n\n## 官方的React组件\n\n当然也有Vue的, 安装 @fortawesome/fontawesome @fortawesome/fontawesome-free-solid @fortawesome/react-fontawesome \n(0.1.0-3以上有d.ts说明)\n\n利用 create-react-app 快速建立工程\n\n```shell\nnpx create-react-app awesome --scripts-version=react-scripts-ts\n```\n\n```JSX\n<FontAwesomeIcon icon={faCoffee}/>\n```\n\n直接使用,非常简单\n\n## 新功能:变形\n\n比如放大(grow)或者缩小(shrink),\n后面的数字的单位是 1/16em.\n\n```JSX\n<FontAwesomeIcon\n    {...{\n        icon: faCoffee,\n        border: true,\n        fixedWidth: true,\n        transform: \"shrink-8\",\n    }}\n/>\n```\n\n上(up) 下(down) 左(left) 右(right)\n垂直翻转(flip-v) 水平翻转(flip-h) \n旋转(rotate) \n\n## 新功能:遮罩\n\n```JSX\n<Font\n    {...{\n        icon: faCoffee,\n        border: true,\n        fixedWidth: true,\n        transform: \"shrink-8\",\n        mask: faSquare,\n    }}\n/>\n```\n\n## 新功能:图层\n\n两个图标层叠\n\n```JSX\n        <span className=\"fa-layers fa-fw fa-border\">\n          <Font\n            {...{\n              icon: faCircle,\n            }}\n          />\n          <Font\n            {...{\n              icon: faCoffee,\n              transform: \"shrink-7\",\n              style: {\n                color: \"#fff\"\n              }\n            }}\n          />\n        </span>\n```\n\n图标添加数字角标,默认右上(指定位置: fa-layers-${bottom|top}-${left|right}).\n\n```JSX\n        <span className=\"fa-layers fa-fw\">\n          <Font\n            {...{\n              icon: faAlignJustify,\n            }}\n          />\n          <span className=\"fa-layers-counter\">1111</span>\n        </span>\n```\n\n叠加文字\n\n```JSX\n        <span className=\"fa-layers fa-fw\">\n          <Font\n            {...{\n              icon: faSquare,\n            }}\n          />\n          <span\n            {...{\n              className: \"fa-layers-text\",\n              style: {\n                color: \"#fff\"\n              }\n            }}\n          >\n          e\n          </span>\n        </span>\n```\n\n## 总结\n\nFontAwesome 总的来看,不考虑兼容性的话的确可以使用,\n而且随着emoji的推广, Material Design等各种设计模式的诞生,\n彩色的可模块化的图标方案会逐渐替代现有的单色图标.\n","collection":"blog","data":{"type":"post","category":"fe"}},{"id":"2018/02/14/Valentine's-Day-for-you-some-color-to-see.md","slug":"2018/02/14/valentines-day-for-you-some-color-to-see","body":"# 情人节给你点颜色看看\n\n![示例代码](http://gongbushang.com:3000/gongbushang/pixijsPlayground/src/master/src/12-hsl_hsv.ts)\n\nCMYK用于打印, RGB用于显示屏, 然而二者都不能直观的展示颜色, 于是有了 HSL 和 HSV 坐标系.\n\n## 简介\n\n今天看看HSL和HSV转化RGB, [维基地址](https://zh.wikipedia.org/wiki/HSL%E5%92%8CHSV%E8%89%B2%E5%BD%A9%E7%A9%BA%E9%97%B4).\n\n![HSL与HSV](https://upload.wikimedia.org/wikipedia/commons/thumb/b/b6/HSL_HSV_cylinder_color_solid_comparison.png/800px-HSL_HSV_cylinder_color_solid_comparison.png)\n\n* H 指的是 hue 色相 [0-360]\n* S 指的是 saturation 饱和度 [0-1]\n* V 指的是 value 明度 [0-1]\n* L 指的是 light 亮度 [0-1]\n\n## HSV转换RGB\n\nHSL转换RGB有点烦(我认为是这样的), 维基里面有详细的解释, HSV到比较简单\n\n```typescript\n/**\n * hsv2rgb\n * @param {number} h hue 色相 [0, 360]\n * @param {number} s saturation 饱和度 [0, 1]\n * @param {number} v value 明度 [0, 1]\n * @returns [r, g, b] 分别取值 [0, 255]\n */\nfunction hsv2rgb(\n    h: number,\n    s: number,\n    v: number,\n) {\n    // 色相\n    while(h < 0) {\n        h += 360;\n    }\n    h = h % 360;\n    // 饱和度\n    s = s < 0? 0: s > 1? 1: s;\n    // 明度\n    v = (v < 0? 0: v > 1? 1: v)*255;\n\n    let hi = (h/60|0)%6;\n    let f = h/60 - hi;\n    let p = v*(1-s) | 0;\n    let q = v*(1-f*s) | 0;\n    let t = v*(1-(1-f)*s) | 0;\n    v |= 0;\n    switch (hi) {\n        case 0: return [v, t, p];\n        case 1: return [q, v, p];\n        case 2: return [p, v, t];\n        case 3: return [p, q, v];\n        case 4: return [t, p, v];\n        case 5: return [v, p, q];\n    }\n}\n```\n\n","collection":"blog","data":{"type":"post","category":"fe"}},{"id":"2018/02/17/Two-forbidden-books.md","slug":"2018/02/17/two-forbidden-books","body":"# 两本禁书\n\n这两个月看了两本政治幻想的书，＜建丰二年＞＜黄祸＞．\n去年我就看了本＜巨婴国＞，感觉是为了赢噱头才自称是禁书的．\n这两本则不同，第一本假想解放战争失败，另一本假想六四平反．\n\n## 建丰二年\n\n感觉出名就在这本书的设定上了，不论是情节还是文采，真心一般．\n而且读了一半就感觉作者无法驾驭得了这个设定．弃～\n\n## 黄祸\n\n这本可比前者好看得多，作者的文采和情节确实吸引人．\n作为一个后人重看作者９０年代的寓言，就好像看推背图一样．\n感觉作者过分着重六四了，虽然带入感很强，\n可我总觉得那个平行宇宙也不会总拿一件事来回讲（毕竟作者序里面没说这是部给六四平反的小说）．\n\n## 总结\n\n所以禁书被禁不管是处于啥原因，这年头想出来本＜石头记＞，太难了．\n","collection":"blog","data":{"type":"post","category":"life"}},{"id":"2018/02/19/PixiJS.md","slug":"2018/02/19/pixijs","body":"# 春节的PixiJS试炼\n\n[代码地址](http://gongbushang.com:3000/gongbushang/pixijsPlayground)\n\n1. 展示雪碧图\n\n2. 容器 Container\n\n3. 图形 Graphics\n\n4. 遮罩 Mask\n\n5. 动画 Ticker\n\n6. 文字\n\n7. 动态图\n\n8. 交互\n\n9. 自适应\n\n10. datGUI\n\n11. 上色\n\n12. HSV、HSL色彩空间\n\n13. 混合模式 blend\n\n14. 材质 texture\n\n15. 滤镜 filter\n\n16. 骨骼 snake\n\n17. 骨骼 goblin\n\n18. 粒子 particles\n\n19. 实例一 滚动的圆\n\n20. 实例二 万花筒\n\n另外还想做两个 [万花尺](https://ithelp.ithome.com.tw/articles/10195023)、[印章](https://ithelp.ithome.com.tw/articles/10195375) ，\n感觉和试炼关系不大以后补充。","collection":"blog","data":{"type":"post","category":"fe"}},{"id":"2018/02/25/About.md","slug":"2018/02/25/about","body":"# 关于姥姥\n\n按理说，作为被春节剥夺了一天的周末，我希望这一天能平平静静地度过。\n然而，这一天的信息量远远超过了一个普通的周末。\n别提刷爆朋友圈的取消任期制的政事了，今天我收到了姥姥去世的消息。\n\n---\n\n我出生以来，家里的老人只有一个人，就是姥姥。小的时候，爸妈工作晚，我都是住在姥姥家，每天和表哥表姐一起玩，等到晚上妈妈会接我回家。\n\n我可能并不是姥姥最宠的，至少我曾这么想过。\n印象最深的往事，是一天夜里我拽着我妈往家走，\n边走边喊着要把姥姥家的大锅砸穿。\n我不记得是因为什么，我只记得哥儿仨最皮的肯定不是我，\n但挨打的总有我。\n这件事之所以难忘，还是因为这件事成了每年春节饭桌上大家必提的项目。\n\n跟姥姥有关的记忆基本上和吃有关，\n除了大锅，还有地窖。老时候大连家住一楼的都有个地窖，\n小时候的我进一次地窖的感觉简直鬼吹灯一样的惊险刺激。\n后来地窖被扒了，上面种了无花果树，\n这树被她形容的简直是包治百病，不过这树还真治好了我腿上的瘊子。\n\n姥姥六十大寿的时候，我隐约听到有人说她属虎，难怪了，那么凶，\n谁见了她都敬她三分。\n那时候，姥姥家就像丛林之王的家一样，人丁兴旺，\n有吃不完的饼干和煎饼。\n\n---\n\n后来我上学了，因为在学校附近，中午我会跑去姥姥家蹭饭，\n姥姥家的碗跟脸一样大，就现在来看我真不知道我是怎么吃完那么多饭的。\n\n我的胳膊骨折过一次，挂着绷带的我还得值日，\n那天中午我因为值日回去的晚了些，她察觉到了，\n竟然跑到学校里跟我抢拖布，吓得我的同学都叫她大老虎。\n\n姥姥的关心随着我的日渐疏远而加重，\n每次见到姥姥，她常说的话是“宫健喜欢画画，\n我去银行换了很多一块钱给你坐车上课用”。\n\n后来，随着大姨和大舅一一地去了，\n姥姥家也没有了往日的热闹，\n我听妈妈说姥姥曾哭着给大夫下跪。\n我还从没见过大老虎哭过呢。\n\n---\n\n姥姥和小舅搬到很远的地方了，要一个小时车程，我也再也没有往那些矮矮的赫鲁晓夫楼那里去了，那些童年里融化了的雪人，吹散了的冰花，冻炸的暖气管子，炸飞的可乐瓶子都随着他们搬去了远方。\n\n再见到姥姥的日子，屈指可数，姥姥不跟我们在一个桌子吃饭了，\n可能是觉得桌子小吧。她总是开着电视坐着，坐着坐着就睡着了，\n你要是关了电视她还总能醒过来。\n\n有一年我拿来我到全国各地旅游的照片，我想告诉她，虽然我不能带她去各种地方玩，但我可以把各种地方带给她看，可似乎她并不感兴趣，她关心的和很多中国老人一样，我什么时候搞对象。\n\n前年过年我去姥姥家探望，貌似已经没了年的感觉，中午只是煮了两碗挂面，她带我去看家里的相册，告诉我以前的老邻居谁又去了，基本上和往年一样，她会指着大舅的照片说我和他有多像。话中带有些许哽咽，时而会抬起头静静地盯着没人的方向，一句话也不说。\n\n一代人的芳华，面目全非，即使照片里面笑容依旧，却更显得岁月的无情。\n\n---\n\n每个节日我都会给姥姥打电话，她的嗓音一如丛林之王般洪亮，\n丝毫没有病态。去年中旬，我时常会梦到老房子，有几次我梦到姥姥带着煎饼和饼干来到我北京的房子，说想来见我。我以为是工作压力太大不以为然。\n\n到了去年十一，爸妈才跟我说，姥姥已经是癌症晚期，家人瞒了她很久，爸妈叮嘱我不要急忙回来，怕姥姥会往坏的地方想。\n\n今年元旦，姥姥用老爸的手机第一次和我视频，依然是老虎一般的嗓音，像个小女生照镜子一样端详着小窗里的自己，脸色也比我爸妈形容的好很多。我心想，人活八十了怎么不会遇点坎，况且大老虎发威了，鬼见到也要发抖的啊。\n\n今年春节，很多时间是在姥姥家过的。姥姥瘫坐在床上，像一只病了的老虎。爸爸告诉我她已经不认人了，可我并不这么认为，因当我跟她说我明年就带对象过来的时候，她脸上不屑的表情兼职和往年如出一辙。\n\n刚和爸妈通完话，姥姥初八去世了，明天就火化。\n我不知如何解释我的心情，相比于悲伤，更像是解脱。\n解脱了这一年的猜忌、误会甚至是争吵，\n就像当年带走我的童年一样，这一切都随着她而离去了。\n\n![唯一的一次视频](http://ww1.sinaimg.cn/small/89d0a2e1ly1fot70eiqgoj20u01hct9u.jpg)\n\n---\n\n借CoCo的一段影评。\n\n> 死亡不是永别，忘记才是。有人记得你，你心里也仍有牵挂，这便是生活莫大的幸福和意义。\n\n斯人已去，此情长存。\n\n![斯人已去，此情长存](http://ww1.sinaimg.cn/large/89d0a2e1ly1fot4xsuvysj20u00u0gn4.jpg)\n\n","collection":"blog","data":{"type":"post","category":"life"}},{"id":"2018/02/27/Git.md","slug":"2018/02/27/git","body":"# Git保存账户\n\n用 Git 保存账户名和密码\n\n```shell\ngit config credential.help store\n```\n","collection":"blog","data":{"type":"post","category":"tech"}}]}