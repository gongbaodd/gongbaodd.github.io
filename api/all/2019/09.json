{"posts":[{"id":"2019/09/01/USB.md","slug":"2019/09/01/usb","body":"# 谈一谈USB\r\n\r\n这篇文章其实是之前挖的坑，大上个月在改造我的平板的时候，就像写这篇文章了。说说这个平板吧，酷比魔方iwork8，8英寸的windows平板，用来读pdf刚刚好，只是存储不是很足而且只有一个micro-usb接口。所以我更期望给它改造成usb type-c接口或者增加一个标准usb接口，然而当我粗略查询micro-usb和type-c针脚的不同点的时候，发现并不是那么简单。当然，最后我还是给这个平板装上了标准usb接口，而这篇文章也就油然而生了。\r\n\r\n## USB的产生\r\n\r\n如果你是近些年才使用了计算机，那么熟知的接口自然就只有USB，然而就在上世纪90年代，计算机接口的分工还有所不同。当时还有链接屏幕的串口，链接打印机的并口，链接键盘鼠标的PS/2口，声卡显卡的PCI-E，而现在基本上都被USB统一天下了。\r\n\r\n根据Wikipedia，在1994年，7家公司开始开发USB，通用串口，目标是实现为计算接提供可以通用适配多种外设，包括足够的电量适配和数据传输，他们组织了USB-IF，以后每次技术更新都要提交到USB-IF中。7家公司分别提供了对USB从软件到硬件的支持（颇有一点点西方神话众神造物的感觉）。其中Intel于1995年研发出了USB的集成单元。到1996年1月，USB终于发布了1.0版本（有趣的是红荔村也是1996年出来的，这俩没什么关系，主要是我刚吃完红荔村）。\r\n\r\n### USB 1.x\r\n\r\nUSB最早发布了两个版本每秒1.5Mbit/s的【Low Speed】和12Mbit/s的【Full Speed】，大概一首3MB的歌，Low Speed需要传输16s，而Full Speed需要2s，如果拆解过这两款数据线，Full Speed会有另外一条解决静电的地线。可见Low Speed是用来处理如鼠标、键盘等设备，而Full Speed则处理如打印机软盘等设备，显然在1.0时链接屏幕还是不行的，如果一张1MB的图片光传输就要1s，那基本上看视频就和看PPT一样了。\r\n\r\nWindows 95于1997年开始预装USB的驱动。1998年8月，USB1.1发布，苹果全线产品开始推动USB，在苹果的影响之下，PC也开始推动市场上的计算机换代使用USB。\r\n\r\nUSB 1.x的时候其实没有对小型接口的形状有描述，以至于除了标准的type-A（最常见的长方形接口）和方形的type-B（我在打印机上面见到过）接口的其它接口基本上由厂家自定义，要知道90年代末期可是mp3、mp4大爆发的年代。\r\n\r\n### USB 2.x\r\n\r\n到了2000年4月，60MB/s的【High Speed】传输版本发布，发布了usb-min和usb-micro标准（从Wikipedia看基本上算是整理出来的，可见这个组织初期的地位是多低...）；提供了USB供电标准，允许1.5A到5A的接口（这么大的跨度，估计也是个整理的数值）；On-the-go允许主从设备反向链接。\r\n\r\n#### USB on the go\r\n\r\nUSB初期设计是一个主从设备，计算机链接U盘，计算机就是主设备，U盘则是从设备。可是随着平板等一系列设备出现，这种平板链接U盘的时候是主设备，而链接计算机的时候又是从设备，除了给这种平板两个接口之外，还可以依赖一个转接口反转主从位置，这就是USB OTG。\r\n\r\n### USB 3.x\r\n\r\nUSB 3.0于2008年11月提出称之为【Super Speed】，允许5Gbit/s传输速率，支持每byte以10bit传输，所以会按照500MB/s单工传输。\r\n\r\nUSB 3.1于2013年7月发布，将USB 3.0改名为【USB 3.1 Gen 1】，并将USB 3.1命名为【Super Speed+】也叫【USB 3.1 Gen 2】，Super Speed+对于Super Speed的改造就是修改原有的单工传输为双工传输，这样单方向传输速率可以达到1GB/s。\r\n\r\nUSB 3.2于2017年发布，主要是将Super Speed和Super Speed+实现在USB type-c接口上，并允许传输效率达到1.25~2.5GB/s。\r\n\r\n写到这里，感觉USB 3系列有点晕。基本上每个子版本都被改名了，现在是按照速率命名：\r\n\r\n+ 符合USB 3.0标准，但是速率为5Gbit/s的接口被命名为USB 3.2 Gen 1\r\n+ 符合USB 3.0标准，但是速率为10Gbit/s的接口被命名为USB 3.2 Gen 2\r\n+ 符合USB 3.0标准，但是速率为20Gbit/s的接口被命名为USB 3.2 Gen 2x2\r\n\r\n所以目前号称是USB 3.2的接口说不定它是08年的USB 3.0接口。\r\n\r\n### USB 4\r\n\r\n2019年8月，USB 4发布，支持40Gbit/s和Thunderbolt 3协议，并向下兼容USB 2.0和USB 3.2协议。\r\n\r\n#### 什么是Thunderbolt协议\r\n\r\n这个协议是Intel和苹果合作实现的，用来代替PCIe和DisplayPort接口，Thunderbolt 3选择使用USB type-c作为默认接口。\r\n\r\n## USB的针脚定义\r\n\r\n#### 标准USB\r\n\r\n包括+5V， Data-， Data+， Ground，当然这一直是USB2.0的标准\r\n\r\n#### 迷你USB\r\n\r\n包括+5V，Data-， Data+， ID（用于OTG），Ground\r\n\r\n#### Type-C\r\n\r\n因为Type-C接口支持正反方向，所以两个方向的针脚排列是镜像的。包括Ground，SuperSpeed+，SuperSpeed-，+5V，Configure， D+， D-，SideBand use，+5V，SuperSpeed-， SuperSpeed+，Ground。\r\n\r\n所以想拿Type-C的针脚链接迷你USB的主板，基本是不太可能的。\r\n\r\n## USB的特征和限制\r\n\r\n1. USB的设计基于主从模式，主设备提供对从设备的控制，至于人体输入设备或者OTG设备则需要额外芯片处理。\r\n2. 链接于同一台主设备的两台从设备不能互相连通。\r\n3. 两台主设备链接不能互相联通。\r\n4. 目前的USB线缆只能保证近距离数据传输，远程传输需要依赖远程传输的设备，当然USB-4中还包括光纤，所以这个限制只算是目前。\r\n\r\n# 参考\r\n\r\n[1] USB https://en.wikipedia.org/wiki/USB\r\n[2] USB hardware https://en.wikipedia.org/wiki/USB_hardware#Connectors\r\n[3] USB_On-The-Go https://en.wikipedia.org/wiki/USB_On-The-Go\r\n[4] USB-C https://en.wikipedia.org/wiki/USB-C\r\n[5] A brief history of USB, what it replaced, and what has failed to replace it https://arstechnica.com/gadgets/2014/08/a-brief-history-of-usb-what-it-replaced-and-what-has-failed-to-replace-it/\r\n\r\n\r\n\r\n\r\n\r\n","collection":"blog","data":{"type":"post","category":"tech"}},{"id":"2019/09/04/webpack.md","slug":"2019/09/04/webpack","body":"# 为webpack工程的本地开发提供代理\n\n首先，我绝对反对线上和本地环境有这种不同配置，但是如果代理是必选项的时候，选择工程化的配置要比每个人维护一套更有效。\n\n需要在webpack.dev.server.config中增加setProxy文件\n\n```\nconst proxy = require('http-proxy-middleware');\n\nmodule.exports = function(app) {\n    app.use(\n        proxy('/api', {\n            target: 'https://xxx.api.com',\n            changeOrigin: true,\n            secure: false,\n            pathRewrite: {\n                '^/api': '/',\n            },\n        })\n    );\n};\n\n```\n\n这样，每个请求`localhost/api`的请求就被代理到`https://xxx.api.com`下了。","collection":"blog","data":{"type":"post","category":"fe"}},{"id":"2019/09/06/CSP.md","slug":"2019/09/06/csp","body":"Web UI Security matters\nRead 51 penetration test and Front-End-Checklist first.\n\n1. Reverse tab nabbing\nCRITICALITY:\n\nAn attacker might use this technique to silently load other pages on the parent tab which can be used for malicious operations such as phishing attacks.\n\nSUGGESTED FIX:\n\nPlease ensure that user-controlled (anchor tag with target=\"_blank\") links have the following attribute set: \n\nCopy\nrel=\"noopener noreferrer\"\nMore about the fix: https://cheatsheetseries.owasp.org/cheatsheets/HTML5_Security_Cheat_Sheet.html#tabnabbing﻿\n\n\n2. Content security policy\nCRITICALITY:\nAn attacker may inject scripts into the HTML files to steal user's information, such as Cookie, JWT token. If the CSP header is not offered, the browser will use same-origin policy standard, attackers can do XSS attack by injecting <img/> tags or <script/> tags.\n\nSUGGESTED FIX:\nCurrently we have two kinds of projects:\n\nS3 bucket project: The CI uploads webpack compiled static files to AWS S3 bucket,  the server is served by AWS cloud front.\nNode project: The project has one node server to serve itself.\nFor S3 bucket project\nMost of the CSP directives can be added using <meta/> tags.\n\ninstall csp-html-webpack-plugin into the projectyarn add -D csp-html-webpack-plugin\n\nyou can use the configuration in admin.aftership.com, including reCAPTCHA, Newrelic Browser & google-analytics.\n\nSome directives such as frame-ancestors can not be added by <meta/> tag. A response header is needed to add to the website.\n\nYou cannot add frame-ancestors directive using <meta/>\n\nadd  frame-ancestor _and _X-Frame-Options _in AWS cloudfront _to avoid click jacking attack.\n\nValidations\n\nYou can check your CSP content in [CSP Evaluator](https://csp-evaluator.withgoogle.com/).\n\n3. Subresource Integrity\n#\nCRITICALITY\nAttackers can inject arbitrary malicious content info files on the CDN.\n\nSUGGESTED FIX\nFor files from CDN add integrity & crossorigin field in script and link  tags, you can calculate the hash by using SRI Hash Generator.\n\nCopy\n<script src=\"https://example.com/example-framework.js\"\n        integrity=\"sha384-oqVuAfXRKap7fdgcCY5uykM6+R9GqQ8K/uxy9rx7HNQlGYl1kPzQho1wx4JwY8wC\"\n        crossorigin=\"anonymous\"></script>\n<link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css\" \n        rel=\"stylesheet\" \n        integrity=\"sha256-MfvZlkHCEqatNoGiOXveE8FIwMzZg4W85qfrfIFBfYc= sha512-dTfge/zgoMYpP7QbHy4gWMEGsbsdZeCXz7irItjcC3sPUFtf0kuFbDz/ixG7ArTxmDjLXDmezHubeNikyKGVyQ==\" \n        crossorigin=\"anonymous\"/>\n﻿\n\nIf the project is a S3 bucket project, the following webpack plugin can add integrity for the compiled statics.\n\n﻿\n\nwebpack-subresource-integrity\n﻿\n\nYou need to set output.crossOriginLoading to anonymous in webpack.config.js.\n\n不推荐用SRI，因为integrity会加上用户的UA","collection":"blog","data":{"type":"post","category":"fe"}},{"id":"2019/09/09/Pentax.md","slug":"2019/09/09/pentax","body":"# Pentax延时摄影\n\n手上的宾得KS-2其实是有延时摄影的功能，只不过我从没腾出时间去拍摄，赶上公司搬家到一个高层，趁还没走赶紧拍一张。\n\n选择间隔拍摄，选择INFO可以设置拍摄次数和时长。\n\n[点击链接查看延时结果](http://onetake.dafork.com/static/photos/xeq9ebk.html)","collection":"blog","data":{"type":"post","category":"life"}},{"id":"2019/09/10/cloudflare worker-CSP.md","slug":"2019/09/10/cloudflare-worker-csp","body":"# cloudflare worker 增加 CSP\n\n```javascript\naddEventListener('fetch', event => {\n\n  event.respondWith(fetch(event.request)\n      .then(function(response){\n            response = new Response(response.body, response);\n            // Set content-security-policy header to self and also include \n            // cloudflare workers dashboard to make it easy to preview\n            response.headers.set(\"content-security-policy\",\n               \"frame-ancestors 'self' https://dash.cloudflare.com;\");\n\n            return response;\n        }\n\n      ));\n    \n\n});\n```","collection":"blog","data":{"type":"post","category":"fe"}},{"id":"2019/09/14/I-almost-was-not-hot-to-die-in-Ganzhou.md","slug":"2019/09/14/i-almost-was-not-hot-to-die-in-ganzhou","body":"# 我在赣州差点没被热死\n\n![Youtube](https://youtu.be/7AK9mw_UfHo)\n\n![Bilibili](https://www.bilibili.com/video/av82447734)\n\n看看我的计划，这个中秋应该去一趟江西了，想想几年前去黄山距离婺源也就是几步之遥，可惜兴尽而返，没能一赏无尽的油菜花。好在广东距离江西也不远，而且赣州是古代客家人迁徙必经之地，又有宋代城墙和浮桥可以阅古，可惜从深圳到江西的高铁必须绕路广州或者漳州（去往梅州的高铁要十一之后才能通车），只能选择到惠州坐绿皮车前往。\n\n## 惠州\n\n一线城市节假日不要走高速😂，本来计划9点到达惠州的客车活活拖到了11点，到了惠州客运站发现根本叫不到车，老老实实坐了一个小时的公交...简直杯具啊，想想还好是到惠州站，地图搜了一下，惠州南站根本就不在市区里面。\n\n公交经过惠州西湖，喇叭里大声喊道「全国5A景区，惠州西湖车站到了」。\n\n惠州火车站可真是破旧，门口只有几家广东必有的隆江猪脚饭，有两台取票机，排着巨长的队伍。更悲伤的，是过了一会儿一台取票机重启了，巨大的WindowsXP图标在黑色屏幕上面闪烁，朴实的打工仔还在努力地刷着他的身份证。大概半小时，我取到了粉色的车票，然后候车的人脸识别机坏了，这回好一些是Windows7，没想到这些机器用的都是x86的机子而没有选择arm机，可能大部分都是政府采购的二手机？\n\n## 赣州\n\n大概7点钟，终于到了赣州，兴奋的我急忙打开了大众点评，然而基本也没几个推荐，啊~没有互联网的城市啊。搜了一下地图，最近的商圈是一个叫「钓鱼台」的地方，哈哈，乍一看吓了我一跳，还以为是什么政府要员的必经场所，到了之后是一个不算特别繁华的商业街，不知道是不是节日的关系，所谓的商业街也不是很热闹，也可能夜生活不是很丰富八点基本上没多少人了，饥肠辘辘的我吃了买了一份正新鸡排。\n\n要说赣州有什么好吃的？来之前知道这里有一家粉蒸鱼，在钓鱼台的一个拐角，阴森森的还有点吓人，虽然里面也没多少人，可是一份鱼等了我一个多小时，若不是那个鸡排打底，我估计撑不到鱼做好了。\n\n吃饱喝足，去我定好的「大酒店」，其实算是个经济酒店了，客房大姐要我再定一个一百的房间交定金，而且还能用红包。屋里面有一个神奇的共享充电头，扫码能用...酒店位置在浮桥附近，想的是大清早能去浮桥看日出，我想多了，第二天一觉睡到了中午。\n\n既然住在了浮桥附近，我怎么也要爬一下城墙，江西真热啊，37度的高温，分分钟劝退。赣州是一个两江夹着的沙洲，赣州博物馆新馆位于沙洲对岸的新区，然而因为修路，我找不到我要坐的公交车站，只能扫一个共享电动车前往。\n\n赣州市博物馆新馆其实是一栋三层的小楼，展览区域在二楼三楼，基本上两处展览可看，一个是赣州市区的矿物质展览，另一个是客家人迁徙展。里面有一个孙中山的家族族谱，呃，其它就没什么印象了。不过印象深刻的还是它的精品展，本来是我第一个奔着的地方，没想到已经改成冰淇淋店了，巨大的冰淇淋展板和富春山居图真是格格不入。\n\n逛完博物馆，退了房间，大太阳依然在天上悬着，无奈，只好去附近的商场看看，这里有一家669商场，还以为是马爸爸的产业。其实就是个普通的商场，不过有赣州第一家星巴克，最尴尬的就是，这家星巴克门口还摆着毛爷爷的头像😂，我说我喝个咖啡谁在看我呢。\n\n## 古浮桥和城墙\n\n大概下午4点左右，终于凉快一些，虽然也是30+的高温，可不去一趟浮桥，着实可惜些。前面提过，赣州城是两江夹着的沙洲，丰水期，贡水和章水会漫到城墙上，所以城门还有特别的防洪装置。浮桥是多个小船拼接而成，主要利于船舶航运，如果有船舶经过，可以拆开桥让船经过。如果北方敌人进攻，也可以很快毁掉桥进行防守。\n\n下午浮桥边是很多光着膀子的弄潮儿在游泳，有人在桥上散步。桥边的摊贩是非法经营，因为桥两边分属不同区，一旦有城管视察商贩就从桥的一头跑到另一头。\n\n赣州城墙没有西安城墙的宏伟，也没有南京城墙的秀气，但也独具特色，墙一面并没有围栏，所以没看好路说不定能栽下去，墙内是一个未开发好的商业街，20世纪的小洋楼和城墙虽说没那么搭配，倒也没有星巴克看毛爷爷的突兀。\n\n城墙尽头是八镜台，可以远观章水和贡水合流进赣江，章水相较于贡水要浑浊些，所以站在把镜台前面能看到赣江有一个明显的分界。绕开八镜台，再走不久就是郁孤台，我到的时候太晚了，已经不能去，旁边有一个郁孤台广场，里面酒吧的驻唱一言难尽啊。\n\n## 赣州火车站\n\n原路返回深圳的绿皮车只能半夜乘坐，深刻地感到了赣州火车站的抠门，空调开到了33度，哭了。古浮桥和两江合并虽然美，然而温度真心劝退啊。","collection":"blog","data":{"type":"post","category":"life"}},{"id":"2019/09/20/Hi-everyone,-I-am-iron-是.md","slug":"2019/09/20/hi-everyone-i-am-iron-是","body":"# 大家好我是铁憨憨\n\n![大家好我是铁憨憨](http://ww1.sinaimg.cn/mw690/89d0a2e1gy1g8hgaccb8sj22001i0hdu.jpg)\n\n![IMG_20190920_184318.jpg](http://ww1.sinaimg.cn/mw690/89d0a2e1gy1g8hgnmyt68j23401k0hdv.jpg)\n\n![IMG_20190920_185110.jpg](http://ww1.sinaimg.cn/mw690/89d0a2e1gy1g8hgo62unyj23401k01kz.jpg)\n\n","collection":"blog","data":{"type":"post","category":"life"}},{"id":"2019/09/20/Movie-supplementary-plan-Avatar.md","slug":"2019/09/20/movie-supplementary-plan-avatar","body":"# 电影补档计划：阿凡达\n\n![avatar](https://img3.doubanio.com/view/photo/l/public/p2180085848.webp)","collection":"blog","data":{"type":"post","category":"life"}},{"id":"2019/09/26/Finally-said-goodbye,-I-often-see-each-other-in-the-future.md","slug":"2019/09/26/finally-said-goodbye-i-often-see-each-other-in-the-future","body":"# 终于告别了，以后常相见\n\n原文因为可见原因发到[知乎](https://www.zhihu.com/question/298719767/answer/839801346)了，虽然我也不用知乎。\n\n![IMG_20190927_093523.jpg](http://ww1.sinaimg.cn/mw690/89d0a2e1gy1g8hgstqeblj20xp0xp7iq.jpg)\n\n![IMG_20190927_091330.jpg](http://ww1.sinaimg.cn/mw690/89d0a2e1gy1g8hguggl1cj22001i0hdt.jpg)\n\n简单介绍一下我吧，我之前在去哪儿(北京)工作，后来和携程合并了也和上海的同事打过交道，后来想从事一些后端的工作，正巧旅游到了深圳就来Aftership工作了。\n\n## 技术\n\n到离职时，我在这家公司从事过一年的node.js后端开发和几个月的前端开发，分开说说。\n\nNode.js后端团队叫做Mocha，为公司开发核心API，因为这家公司最早是做API的toB公司，所以在这方面要求标准(起码比Qunar的更加标准)。\n\n1. 目前团队核心工作是重构旧系统，没有太多技术债务，但也没有多少创新。\n2. 团队没有产品经理，有时候老系统文档丢失，需要和香港的同事沟通，而且有些员工早就已经离职了，往往折腾很久还没写上一行代码。\n3. 产品依赖谷歌和亚马逊全家桶，对比国内的云来说，国内云的确还有差距，但是因为公司的权限管理有问题，往往不会给你足够的权限，但出问题肯定算你身上 。\n4. 公司提供合法的外网访问手段，亲测推特脸书什么都可以上，但是香港相关的新闻网站都是不能访问的 。\n5. API遵循Restful的规范，虽然很标准了，但我个人还是觉得有照猫画虎的感觉 。\n6. 工作流程严格按照Scrum敏捷开发，这一点真的在大陆是找不到的，一年下来感觉有点死板，搞不懂为啥daily standup非安排到早上，毕竟早上9点上班，而且还要听跟我没关系的项目报告。\n7. 项目大多是用JS来写的，好在测试覆盖率能保持在70%以上，目前是推动了typescript，但是刚推不久我就调去前端了 。\n8. 团队比较团结，呆在里面还算比较舒适，但感觉上更多舒适感是自下而上的，领导层并不尊重底层员工，相比于Qunar的结果导向以及对事不对人原则，这家公司做得算是拙劣了。\n9. 没有QA，系统稳定靠的是开发维护的单元测试和集成测试还有开发互测，造成测试环境和灰度环境基本上是用来debug的，不过公司规模尚小还有修正的余地。\n\n前端团队和产品经理以及设计团队合在一个小团队里面，叫做VLT，这个团队处理包括所有toB及toC用户交互相关功能。\n\n1. 目前团队工作主要是提供新的小功能迭代和部分老系统的重构，所以技术债务也不少，创新也不多。\n2. 基本上产品经理和产品是1对n的关系，而产品没有和工程师绑定，所以往往工程师对一个项目做好规划的下一个冲刺就被调到别的项目去了。\n3. 大陆的产品经理拦掉了大部分来自领导层的无理需求 ，可是还有很多不得不做的真是哭笑不得。\n4. 前端基本上React全家桶，样式直接用shopify的Polaris，难得的省心。但是现有项目bug很多，基本上我扫一眼配置就好多bug，然而提出来还要挨批，这大概是我离职的原因了吧 。\n5. 工作流程也是Scrum，但是standup实在9点之前。\n6. 很多前端项目都用上了typescript了，但是测试覆盖率惨不忍睹，里面使用any的地方也很多，做前端的几个月终于逼他们提高了点测试覆盖率，但他们并不清楚我用意是啥 。\n7. 相比于Mocha，这个团队就没那么团结了，甩锅很严重，想推动些什么真的很困难。\n8. 没有QA，部分开发也不做自测，领导层无技术经验，笃信个人，这可能是产品随便看看一堆bug的原因了吧。\n9. 开发没参与到需求设计阶段，导致产品都设计好了，发现有严重错误，最后还是按照错的做。\n\n## 管理\n\n前面提过了，这是我见过践行scrum最好的公司，因此基本上没出现过过度加班的情况。\n\n但是其他问题不少，比如入职和离职的流程不明确，离职申请不知道找谁，最后一天我还开玩笑能不能抱着笔记本跑路。\n\n公司没有文化，虽说口头上有个信任，但是写代码要粘贴运行结果，每个冲刺review要把每个feature看一遍(当然可能因为没有QA)。我曾经遇到过项目都快写完了，因为和领导层预期设计的不一样导致推翻了重做，然后领导层的设计又有一个大bug，导致最后又来了一次重新设计，虽然在最后一天针对这件事儿我收到了道歉，但我肯定是不能接受的 。\n\n人事对BAT员工完全是跪舔，哪怕是被末位淘汰下来的，所以BAT末位淘汰下来的同学们，你们还在等什么！快来！\n\n## 福利\n\n1. 当月25日发工资，9102年了，都要全面小康了，不当月发工资的算违法好么？\n2. 2-6月年终奖，其实香港没有节假日奖金的传统，所以发奖的时候满脸写着不高兴，话说真有6个月的吗，在这儿留个言撒~\n3. 全额工资五险一金，同第一条，不这么做算偷税漏税好么？\n4. 不定期月度奖金，确实不定期，入职1年多发过一次\n5. 带薪病假也是法律规定吧，带薪年假貌似没有达到法律规定，而且按律应该每年增加一天，入职既有的5天年假如果年内离职要扣的哦~\n6. LG 4K显示器是真不错，搭配我的XPS刚刚好，至于MacBook，应该算开发标配了。\n7. 零食的确不断，但是新办公室只能去茶水间吃，每天确实有下午茶，不错的 。\n8. 购买书籍和在线课程报销的确有，想要赶紧去 。\n9. 每年定期体检，这个没有 。\n10. 每年不定期旅游，就去过一次大鹏湾，哎呀~想去玩自己去嘛，非得和同事去。。。\n11. 收费工具嘛，这种东西怎么会从下而上的推动，看看就好啦~\n总结\n\n简单来说，符合以下几点可以考虑这家公司\n\n1. 北方的小伙伴想体验下南方的工作，甚至想交一点南方的朋友。\n2. 想体验一下最标准的scrum工作流程。\n3. BAT被末位淘汰的朋友。\n4. 想体验GCP和AWS，但是不满足于官方的tutorial。\n5. 前端想试一试做后端，后端想试一试做爬虫。\n6. 不差钱，有轻微M倾向且不想加班。\n7. 不期望涨薪，只想在深圳稳定发展。\n\n这个评论发表之后，我收到了各种前同事的响应，有支持的也有疑问的，很遗憾他们没有在网络上发表反馈。虽然为了保证足够客观，已经把很多能激起个人情绪的事情略掉了，为了将来的友谊，我勘误掉了某些可能涉及到个人的指控。\n\n我无法完全保证本文的客观性，仅仅只能以我个人的视角来回答问题，只能说我在尽量避免偏激言论。Aftership在内地还是个起步阶段，各种问题肯定是会有的，在这个公司待过的我当然也不会希望它走下坡路。我更希望它能以一个有则改之无则加勉的心态去接受评价，而不是「老子没错」(其实这样的大厂也不少)。\n\n但愿一年后，会有人在这里反馈，上文的问题已经被改正，我这篇文章也算为公司做了贡献了。","collection":"blog","data":{"type":"post","category":"life"}},{"id":"2019/09/27/jest.md","slug":"2019/09/27/jest","body":"# 总结一下最近 jest 上面的经验\n\n## mock localStorage\n\njsdom里面的localStorage是不能通过赋值覆盖的，但是有一个hack就是利用Object.defineProperty。\n\n```javascript\nObject.defineProperty(window, 'localStorage', {\n    writable: true,\n    value:{\n        getItem: jest.fn(),\n        setItem: jest.fn()\n    }\n});\n```\n\n## setTimeout\n\n有的时候需要让测试代码以为自己已经跑了一会儿。\n\n```javascript\njest.useFakeTimers();\n\njest.advanceTimersByTime();\n\njest.clearAllTimers();\n```\n\n## matchMedia\n\njsdom 还没提供，需要自己mock。\n\n```javascript\nwindow.matchMedia = jest.fn(query => ({\n    matches: false,\n    media: query,\n    onchange: null,\n    addListener: jest.fn(),\n    removeListener: jest.fn(),\n}));\n```","collection":"blog","data":{"type":"post","category":"fe"}}]}