{"posts":[{"id":"2019/11/28/windows powertoy.md","slug":"2019/11/28/windows-powertoy","body":"\n# 安利一下 Windows Powertoy\n\n这是最近 Windows 开源的一个应用，可以拓展 Windows 的一些功能，比如下图的 Fancy zones，可以提高 Windows 的分屏功能。\n\n![fancy zones](https://ws1.sinaimg.cn/mw690/89d0a2e1gy1g9drryez7hj22gu1bo4dr.jpg)\n\n可惜目前只支持 x64 平台，但是 github 上面已经有[issue](https://github.com/microsoft/PowerToys/issues/413)跟踪了。\n\n目前还不能在 Windows 商店里面安装，可以利用 chocolatey 安装。\n\n```batch\nsudo choco install powertoys\n```\n","collection":"blog","data":{"type":"post","category":"tech","tag":["windows"],"series":{"slug":"windows-howto","name":"Windows舒适指南"}}},{"id":"2019/12/23/UWP.md","slug":"2019/12/23/uwp","body":"\n# 为 UWP 应用打开代理\n\n最近我在做去手机依赖的事情，没错，我是一个特别喜欢听播客的人。由于最近一年我用的都是 Google podcast，我不得不一直依赖于我的手机，可是我发现这是一件及其容易分心的事儿（听播客其实也是分心的事儿）。无论如何，我先花了大概一个小时的时间把我新订阅的 podcast 转移到 pocketcast 里面，并导出到 Windows 里面。\n\n导入的时候发现，其实 UWP 应用是运行在沙盒下面的，每个应用都互相隔离，不受全局的代理配置影响，这可难了我了。\n\n首先能找到的是微软技术支持提供的[利用 netsh 利用组策略代理](https://support.microsoft.com/zh-cn/help/4494447/use-group-policy-to-apply-winhttp-proxy-settings-to-clients)，实际体验发现没啥屌用。\n\n```\nnetsh winhttp set proxy localhost:1080\n```\n\n然后按照[ss 的 issue 来做](https://github.com/shadowsocks/shadowsocks-windows/issues/897#ref-issue-312924039)，貌似有一些请求通过代理了，但是大部分还是不行。\n\n```\nforeach($f in Get-ChildItem $env:LOCALAPPDATA\\Packages) {CheckNetIsolation.exe LoopbackExempt -a \"-n=$($f.Name)\"}\n```\n","collection":"blog","data":{"type":"post","category":"life","series":{"slug":"windows-howto","name":"Windows舒适指南"}}}]}